//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OpenDentBusiness.SheetsSynch {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SheetsSynchSoap", Namespace="http://opendental.com/")]
    public partial class SheetsSynch : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebFormSheetIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebFormSheetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSheetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDentalOfficeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSheetDefAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadSheetDefsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSheetDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadSheetDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadSheetDefChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadSheetDefFromFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSheetDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSheetDefFromFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckWebFormsDbOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationKeyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSheetsCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SheetsSynch() {
            this.Url = global::OpenDentBusiness.Properties.Settings.Default.OpenDentBusiness_SheetsSynch_SheetsSynch;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetPreferencesCompletedEventHandler SetPreferencesCompleted;
        
        /// <remarks/>
        public event GetPreferencesCompletedEventHandler GetPreferencesCompleted;
        
        /// <remarks/>
        public event GetWebFormSheetIDsCompletedEventHandler GetWebFormSheetIDsCompleted;
        
        /// <remarks/>
        public event GetWebFormSheetsCompletedEventHandler GetWebFormSheetsCompleted;
        
        /// <remarks/>
        public event DeleteSheetDataCompletedEventHandler DeleteSheetDataCompleted;
        
        /// <remarks/>
        public event GetDentalOfficeIDCompletedEventHandler GetDentalOfficeIDCompleted;
        
        /// <remarks/>
        public event GetSheetDefAddressCompletedEventHandler GetSheetDefAddressCompleted;
        
        /// <remarks/>
        public event DownloadSheetDefsCompletedEventHandler DownloadSheetDefsCompleted;
        
        /// <remarks/>
        public event DeleteSheetDefCompletedEventHandler DeleteSheetDefCompleted;
        
        /// <remarks/>
        public event UpLoadSheetDefCompletedEventHandler UpLoadSheetDefCompleted;
        
        /// <remarks/>
        public event UploadSheetDefChunkCompletedEventHandler UploadSheetDefChunkCompleted;
        
        /// <remarks/>
        public event UploadSheetDefFromFileCompletedEventHandler UploadSheetDefFromFileCompleted;
        
        /// <remarks/>
        public event UpdateSheetDefCompletedEventHandler UpdateSheetDefCompleted;
        
        /// <remarks/>
        public event UpdateSheetDefFromFileCompletedEventHandler UpdateSheetDefFromFileCompleted;
        
        /// <remarks/>
        public event CheckWebFormsDbCompletedEventHandler CheckWebFormsDbCompleted;
        
        /// <remarks/>
        public event GetRegistrationKeyIDCompletedEventHandler GetRegistrationKeyIDCompleted;
        
        /// <remarks/>
        public event GetSheetsCountCompletedEventHandler GetSheetsCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/SetPreferences", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPreferences(string officeData) {
            object[] results = this.Invoke("SetPreferences", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPreferencesAsync(string officeData) {
            this.SetPreferencesAsync(officeData, null);
        }
        
        /// <remarks/>
        public void SetPreferencesAsync(string officeData, object userState) {
            if ((this.SetPreferencesOperationCompleted == null)) {
                this.SetPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreferencesOperationCompleted);
            }
            this.InvokeAsync("SetPreferences", new object[] {
                        officeData}, this.SetPreferencesOperationCompleted, userState);
        }
        
        private void OnSetPreferencesOperationCompleted(object arg) {
            if ((this.SetPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPreferencesCompleted(this, new SetPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetPreferences", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPreferences(string officeData) {
            object[] results = this.Invoke("GetPreferences", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreferencesAsync(string officeData) {
            this.GetPreferencesAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetPreferencesAsync(string officeData, object userState) {
            if ((this.GetPreferencesOperationCompleted == null)) {
                this.GetPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetPreferences", new object[] {
                        officeData}, this.GetPreferencesOperationCompleted, userState);
        }
        
        private void OnGetPreferencesOperationCompleted(object arg) {
            if ((this.GetPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreferencesCompleted(this, new GetPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetWebFormSheetIDs", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebFormSheetIDs(string officeData) {
            object[] results = this.Invoke("GetWebFormSheetIDs", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebFormSheetIDsAsync(string officeData) {
            this.GetWebFormSheetIDsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetWebFormSheetIDsAsync(string officeData, object userState) {
            if ((this.GetWebFormSheetIDsOperationCompleted == null)) {
                this.GetWebFormSheetIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebFormSheetIDsOperationCompleted);
            }
            this.InvokeAsync("GetWebFormSheetIDs", new object[] {
                        officeData}, this.GetWebFormSheetIDsOperationCompleted, userState);
        }
        
        private void OnGetWebFormSheetIDsOperationCompleted(object arg) {
            if ((this.GetWebFormSheetIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebFormSheetIDsCompleted(this, new GetWebFormSheetIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetWebFormSheets", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebFormSheets(string officeData) {
            object[] results = this.Invoke("GetWebFormSheets", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebFormSheetsAsync(string officeData) {
            this.GetWebFormSheetsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetWebFormSheetsAsync(string officeData, object userState) {
            if ((this.GetWebFormSheetsOperationCompleted == null)) {
                this.GetWebFormSheetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebFormSheetsOperationCompleted);
            }
            this.InvokeAsync("GetWebFormSheets", new object[] {
                        officeData}, this.GetWebFormSheetsOperationCompleted, userState);
        }
        
        private void OnGetWebFormSheetsOperationCompleted(object arg) {
            if ((this.GetWebFormSheetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebFormSheetsCompleted(this, new GetWebFormSheetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/DeleteSheetData", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSheetData(string officeData) {
            object[] results = this.Invoke("DeleteSheetData", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSheetDataAsync(string officeData) {
            this.DeleteSheetDataAsync(officeData, null);
        }
        
        /// <remarks/>
        public void DeleteSheetDataAsync(string officeData, object userState) {
            if ((this.DeleteSheetDataOperationCompleted == null)) {
                this.DeleteSheetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSheetDataOperationCompleted);
            }
            this.InvokeAsync("DeleteSheetData", new object[] {
                        officeData}, this.DeleteSheetDataOperationCompleted, userState);
        }
        
        private void OnDeleteSheetDataOperationCompleted(object arg) {
            if ((this.DeleteSheetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSheetDataCompleted(this, new DeleteSheetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetDentalOfficeID", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDentalOfficeID(string officeData) {
            object[] results = this.Invoke("GetDentalOfficeID", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDentalOfficeIDAsync(string officeData) {
            this.GetDentalOfficeIDAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetDentalOfficeIDAsync(string officeData, object userState) {
            if ((this.GetDentalOfficeIDOperationCompleted == null)) {
                this.GetDentalOfficeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDentalOfficeIDOperationCompleted);
            }
            this.InvokeAsync("GetDentalOfficeID", new object[] {
                        officeData}, this.GetDentalOfficeIDOperationCompleted, userState);
        }
        
        private void OnGetDentalOfficeIDOperationCompleted(object arg) {
            if ((this.GetDentalOfficeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDentalOfficeIDCompleted(this, new GetDentalOfficeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetSheetDefAddress", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSheetDefAddress(string officeData) {
            object[] results = this.Invoke("GetSheetDefAddress", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSheetDefAddressAsync(string officeData) {
            this.GetSheetDefAddressAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetSheetDefAddressAsync(string officeData, object userState) {
            if ((this.GetSheetDefAddressOperationCompleted == null)) {
                this.GetSheetDefAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSheetDefAddressOperationCompleted);
            }
            this.InvokeAsync("GetSheetDefAddress", new object[] {
                        officeData}, this.GetSheetDefAddressOperationCompleted, userState);
        }
        
        private void OnGetSheetDefAddressOperationCompleted(object arg) {
            if ((this.GetSheetDefAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSheetDefAddressCompleted(this, new GetSheetDefAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/DownloadSheetDefs", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadSheetDefs(string officeData) {
            object[] results = this.Invoke("DownloadSheetDefs", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadSheetDefsAsync(string officeData) {
            this.DownloadSheetDefsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void DownloadSheetDefsAsync(string officeData, object userState) {
            if ((this.DownloadSheetDefsOperationCompleted == null)) {
                this.DownloadSheetDefsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadSheetDefsOperationCompleted);
            }
            this.InvokeAsync("DownloadSheetDefs", new object[] {
                        officeData}, this.DownloadSheetDefsOperationCompleted, userState);
        }
        
        private void OnDownloadSheetDefsOperationCompleted(object arg) {
            if ((this.DownloadSheetDefsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadSheetDefsCompleted(this, new DownloadSheetDefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/DeleteSheetDef", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteSheetDef(string officeData) {
            object[] results = this.Invoke("DeleteSheetDef", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSheetDefAsync(string officeData) {
            this.DeleteSheetDefAsync(officeData, null);
        }
        
        /// <remarks/>
        public void DeleteSheetDefAsync(string officeData, object userState) {
            if ((this.DeleteSheetDefOperationCompleted == null)) {
                this.DeleteSheetDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSheetDefOperationCompleted);
            }
            this.InvokeAsync("DeleteSheetDef", new object[] {
                        officeData}, this.DeleteSheetDefOperationCompleted, userState);
        }
        
        private void OnDeleteSheetDefOperationCompleted(object arg) {
            if ((this.DeleteSheetDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSheetDefCompleted(this, new DeleteSheetDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UpLoadSheetDef", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpLoadSheetDef(string officeData) {
            object[] results = this.Invoke("UpLoadSheetDef", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadSheetDefAsync(string officeData) {
            this.UpLoadSheetDefAsync(officeData, null);
        }
        
        /// <remarks/>
        public void UpLoadSheetDefAsync(string officeData, object userState) {
            if ((this.UpLoadSheetDefOperationCompleted == null)) {
                this.UpLoadSheetDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadSheetDefOperationCompleted);
            }
            this.InvokeAsync("UpLoadSheetDef", new object[] {
                        officeData}, this.UpLoadSheetDefOperationCompleted, userState);
        }
        
        private void OnUpLoadSheetDefOperationCompleted(object arg) {
            if ((this.UpLoadSheetDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadSheetDefCompleted(this, new UpLoadSheetDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UploadSheetDefChunk", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadSheetDefChunk(string officeData) {
            object[] results = this.Invoke("UploadSheetDefChunk", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadSheetDefChunkAsync(string officeData) {
            this.UploadSheetDefChunkAsync(officeData, null);
        }
        
        /// <remarks/>
        public void UploadSheetDefChunkAsync(string officeData, object userState) {
            if ((this.UploadSheetDefChunkOperationCompleted == null)) {
                this.UploadSheetDefChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadSheetDefChunkOperationCompleted);
            }
            this.InvokeAsync("UploadSheetDefChunk", new object[] {
                        officeData}, this.UploadSheetDefChunkOperationCompleted, userState);
        }
        
        private void OnUploadSheetDefChunkOperationCompleted(object arg) {
            if ((this.UploadSheetDefChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadSheetDefChunkCompleted(this, new UploadSheetDefChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UploadSheetDefFromFile", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadSheetDefFromFile(string officeData) {
            object[] results = this.Invoke("UploadSheetDefFromFile", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadSheetDefFromFileAsync(string officeData) {
            this.UploadSheetDefFromFileAsync(officeData, null);
        }
        
        /// <remarks/>
        public void UploadSheetDefFromFileAsync(string officeData, object userState) {
            if ((this.UploadSheetDefFromFileOperationCompleted == null)) {
                this.UploadSheetDefFromFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadSheetDefFromFileOperationCompleted);
            }
            this.InvokeAsync("UploadSheetDefFromFile", new object[] {
                        officeData}, this.UploadSheetDefFromFileOperationCompleted, userState);
        }
        
        private void OnUploadSheetDefFromFileOperationCompleted(object arg) {
            if ((this.UploadSheetDefFromFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadSheetDefFromFileCompleted(this, new UploadSheetDefFromFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UpdateSheetDef", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSheetDef(string officeData) {
            object[] results = this.Invoke("UpdateSheetDef", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSheetDefAsync(string officeData) {
            this.UpdateSheetDefAsync(officeData, null);
        }
        
        /// <remarks/>
        public void UpdateSheetDefAsync(string officeData, object userState) {
            if ((this.UpdateSheetDefOperationCompleted == null)) {
                this.UpdateSheetDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSheetDefOperationCompleted);
            }
            this.InvokeAsync("UpdateSheetDef", new object[] {
                        officeData}, this.UpdateSheetDefOperationCompleted, userState);
        }
        
        private void OnUpdateSheetDefOperationCompleted(object arg) {
            if ((this.UpdateSheetDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSheetDefCompleted(this, new UpdateSheetDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UpdateSheetDefFromFile", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSheetDefFromFile(string officeData) {
            object[] results = this.Invoke("UpdateSheetDefFromFile", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSheetDefFromFileAsync(string officeData) {
            this.UpdateSheetDefFromFileAsync(officeData, null);
        }
        
        /// <remarks/>
        public void UpdateSheetDefFromFileAsync(string officeData, object userState) {
            if ((this.UpdateSheetDefFromFileOperationCompleted == null)) {
                this.UpdateSheetDefFromFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSheetDefFromFileOperationCompleted);
            }
            this.InvokeAsync("UpdateSheetDefFromFile", new object[] {
                        officeData}, this.UpdateSheetDefFromFileOperationCompleted, userState);
        }
        
        private void OnUpdateSheetDefFromFileOperationCompleted(object arg) {
            if ((this.UpdateSheetDefFromFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSheetDefFromFileCompleted(this, new UpdateSheetDefFromFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/CheckWebFormsDb", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckWebFormsDb() {
            object[] results = this.Invoke("CheckWebFormsDb", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckWebFormsDbAsync() {
            this.CheckWebFormsDbAsync(null);
        }
        
        /// <remarks/>
        public void CheckWebFormsDbAsync(object userState) {
            if ((this.CheckWebFormsDbOperationCompleted == null)) {
                this.CheckWebFormsDbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckWebFormsDbOperationCompleted);
            }
            this.InvokeAsync("CheckWebFormsDb", new object[0], this.CheckWebFormsDbOperationCompleted, userState);
        }
        
        private void OnCheckWebFormsDbOperationCompleted(object arg) {
            if ((this.CheckWebFormsDbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckWebFormsDbCompleted(this, new CheckWebFormsDbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetRegistrationKeyID", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRegistrationKeyID(string officeData) {
            object[] results = this.Invoke("GetRegistrationKeyID", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationKeyIDAsync(string officeData) {
            this.GetRegistrationKeyIDAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetRegistrationKeyIDAsync(string officeData, object userState) {
            if ((this.GetRegistrationKeyIDOperationCompleted == null)) {
                this.GetRegistrationKeyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationKeyIDOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationKeyID", new object[] {
                        officeData}, this.GetRegistrationKeyIDOperationCompleted, userState);
        }
        
        private void OnGetRegistrationKeyIDOperationCompleted(object arg) {
            if ((this.GetRegistrationKeyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationKeyIDCompleted(this, new GetRegistrationKeyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetSheetsCount", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSheetsCount(string officeData) {
            object[] results = this.Invoke("GetSheetsCount", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSheetsCountAsync(string officeData) {
            this.GetSheetsCountAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetSheetsCountAsync(string officeData, object userState) {
            if ((this.GetSheetsCountOperationCompleted == null)) {
                this.GetSheetsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSheetsCountOperationCompleted);
            }
            this.InvokeAsync("GetSheetsCount", new object[] {
                        officeData}, this.GetSheetsCountOperationCompleted, userState);
        }
        
        private void OnGetSheetsCountOperationCompleted(object arg) {
            if ((this.GetSheetsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSheetsCountCompleted(this, new GetSheetsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetPreferencesCompletedEventHandler(object sender, SetPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPreferencesCompletedEventHandler(object sender, GetPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWebFormSheetIDsCompletedEventHandler(object sender, GetWebFormSheetIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebFormSheetIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebFormSheetIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetWebFormSheetsCompletedEventHandler(object sender, GetWebFormSheetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebFormSheetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebFormSheetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSheetDataCompletedEventHandler(object sender, DeleteSheetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSheetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSheetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDentalOfficeIDCompletedEventHandler(object sender, GetDentalOfficeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDentalOfficeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDentalOfficeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSheetDefAddressCompletedEventHandler(object sender, GetSheetDefAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSheetDefAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSheetDefAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DownloadSheetDefsCompletedEventHandler(object sender, DownloadSheetDefsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadSheetDefsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadSheetDefsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSheetDefCompletedEventHandler(object sender, DeleteSheetDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSheetDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSheetDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpLoadSheetDefCompletedEventHandler(object sender, UpLoadSheetDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadSheetDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadSheetDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadSheetDefChunkCompletedEventHandler(object sender, UploadSheetDefChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadSheetDefChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadSheetDefChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadSheetDefFromFileCompletedEventHandler(object sender, UploadSheetDefFromFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadSheetDefFromFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadSheetDefFromFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateSheetDefCompletedEventHandler(object sender, UpdateSheetDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSheetDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSheetDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateSheetDefFromFileCompletedEventHandler(object sender, UpdateSheetDefFromFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSheetDefFromFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSheetDefFromFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckWebFormsDbCompletedEventHandler(object sender, CheckWebFormsDbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckWebFormsDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckWebFormsDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRegistrationKeyIDCompletedEventHandler(object sender, GetRegistrationKeyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationKeyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationKeyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSheetsCountCompletedEventHandler(object sender, GetSheetsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSheetsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSheetsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591