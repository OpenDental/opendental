//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OpenDentBusiness.NewCropWebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Update1Soap", Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class Update1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateRxChangeApprovalResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRxChangeApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRxChangeApprovalV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RollbackRxChangeApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxChangeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRxChangeDeliveryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateDrugScheduleOverridesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastPDMPReviewDateByPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyScriptReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyScriptReportV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyScriptReportV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMeaningfulUseUtilizationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeaningfulUseUtilizationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyMeaningfulUseReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompleteMedicationHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFullMedicationHistory4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFullMedicationHistory5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFullMedicationHistory6OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyHistory2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyHistoryV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyHistoryV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFreeFormAllergyHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionTransmissionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionTransmissionStatusByPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTestRenewalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsDetailV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsSummaryV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalRequestDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalRequestDetailV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalRequestDetailV5OperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessRenewalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalResponseTransmissionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalResponseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormularyAlternativesWithDrugInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMissingHealthplanInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMDrugHistoryV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMDrugHistoryV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMostRecentDownloadUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugDiseaseInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugDiseaseInteractionV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PharmacySearchV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback PharmacySearchV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback PharmacySearchV5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationPharmaciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugSearchWithFormularyWithFavoritesV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugSearchWithFormularyWithFavoritesV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback HealthplanSearchV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FormularyCoverageV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportPrescribingCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCounselingMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSideEffectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatusV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatusDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMEligibilityV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMEligibilityV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionTransmissionStatusV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubmittedMessageTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugAllergyInteractionV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveFailedPrescriptionTransmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeaningfulUsePatientEncounterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoseCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToRegistryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterLicensedPrescriberV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback LicensedPrescriberStatusV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePatientPortalLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDigitalSigningBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDigitallySignedMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRxBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDigitalSigningBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRenewalBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalBatchStatusV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRxBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRxBatchV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteDigitalSigningBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteDigitalSigningBatchV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRenewalBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRenewalBatchV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateDrugTherapyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCancelRxForNewRxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCancelRxForRenewalResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCancelRxStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCancelRxStatusV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmCancelRxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRxFillsSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxFillDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmRxFillReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRxChangesSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRxChangesSummaryV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxChangeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmRxChangeReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRxChangeDenyResponseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Update1() {
            this.Url = global::OpenDentBusiness.Properties.Settings.Default.OpenDentBusiness_NewCrop_Update1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateRxChangeApprovalResponseCompletedEventHandler CreateRxChangeApprovalResponseCompleted;
        
        /// <remarks/>
        public event CompleteRxChangeApprovalCompletedEventHandler CompleteRxChangeApprovalCompleted;
        
        /// <remarks/>
        public event CompleteRxChangeApprovalV2CompletedEventHandler CompleteRxChangeApprovalV2Completed;
        
        /// <remarks/>
        public event RollbackRxChangeApprovalCompletedEventHandler RollbackRxChangeApprovalCompleted;
        
        /// <remarks/>
        public event GetRxChangeStatusCompletedEventHandler GetRxChangeStatusCompleted;
        
        /// <remarks/>
        public event CheckRxChangeDeliveryStatusCompletedEventHandler CheckRxChangeDeliveryStatusCompleted;
        
        /// <remarks/>
        public event GetStateDrugScheduleOverridesCompletedEventHandler GetStateDrugScheduleOverridesCompleted;
        
        /// <remarks/>
        public event GetLastPDMPReviewDateByPatientCompletedEventHandler GetLastPDMPReviewDateByPatientCompleted;
        
        /// <remarks/>
        public event GetDailyScriptReportCompletedEventHandler GetDailyScriptReportCompleted;
        
        /// <remarks/>
        public event GetDailyScriptReportV2CompletedEventHandler GetDailyScriptReportV2Completed;
        
        /// <remarks/>
        public event GetDailyScriptReportV3CompletedEventHandler GetDailyScriptReportV3Completed;
        
        /// <remarks/>
        public event GenerateMeaningfulUseUtilizationReportCompletedEventHandler GenerateMeaningfulUseUtilizationReportCompleted;
        
        /// <remarks/>
        public event GetMeaningfulUseUtilizationReportCompletedEventHandler GetMeaningfulUseUtilizationReportCompleted;
        
        /// <remarks/>
        public event GetDailyMeaningfulUseReportCompletedEventHandler GetDailyMeaningfulUseReportCompleted;
        
        /// <remarks/>
        public event GetCompleteMedicationHistoryCompletedEventHandler GetCompleteMedicationHistoryCompleted;
        
        /// <remarks/>
        public event GetPatientFullMedicationHistory4CompletedEventHandler GetPatientFullMedicationHistory4Completed;
        
        /// <remarks/>
        public event GetPatientFullMedicationHistory5CompletedEventHandler GetPatientFullMedicationHistory5Completed;
        
        /// <remarks/>
        public event GetPatientFullMedicationHistory6CompletedEventHandler GetPatientFullMedicationHistory6Completed;
        
        /// <remarks/>
        public event GetPatientAllergyHistory2CompletedEventHandler GetPatientAllergyHistory2Completed;
        
        /// <remarks/>
        public event GetPatientAllergyHistoryV3CompletedEventHandler GetPatientAllergyHistoryV3Completed;
        
        /// <remarks/>
        public event GetPatientAllergyHistoryV4CompletedEventHandler GetPatientAllergyHistoryV4Completed;
        
        /// <remarks/>
        public event GetPatientFreeFormAllergyHistoryCompletedEventHandler GetPatientFreeFormAllergyHistoryCompleted;
        
        /// <remarks/>
        public event GetPatientAllergyLogCompletedEventHandler GetPatientAllergyLogCompleted;
        
        /// <remarks/>
        public event GetPrescriptionTransmissionStatusCompletedEventHandler GetPrescriptionTransmissionStatusCompleted;
        
        /// <remarks/>
        public event GetPrescriptionTransmissionStatusByPatientCompletedEventHandler GetPrescriptionTransmissionStatusByPatientCompleted;
        
        /// <remarks/>
        public event GenerateTestRenewalRequestCompletedEventHandler GenerateTestRenewalRequestCompleted;
        
        /// <remarks/>
        public event GetAllRenewalRequestsCompletedEventHandler GetAllRenewalRequestsCompleted;
        
        /// <remarks/>
        public event GetAllRenewalRequestsV2CompletedEventHandler GetAllRenewalRequestsV2Completed;
        
        /// <remarks/>
        public event GetAllRenewalRequestsV3CompletedEventHandler GetAllRenewalRequestsV3Completed;
        
        /// <remarks/>
        public event GetAllRenewalRequestsDetailV4CompletedEventHandler GetAllRenewalRequestsDetailV4Completed;
        
        /// <remarks/>
        public event GetAllRenewalRequestsSummaryV4CompletedEventHandler GetAllRenewalRequestsSummaryV4Completed;
        
        /// <remarks/>
        public event GetRenewalRequestDetailCompletedEventHandler GetRenewalRequestDetailCompleted;
        
        /// <remarks/>
        public event GetRenewalRequestDetailV4CompletedEventHandler GetRenewalRequestDetailV4Completed;
        
        /// <remarks/>
        public event GetRenewalRequestDetailV5CompletedEventHandler GetRenewalRequestDetailV5Completed;
        
        /// <remarks/>
        public event ProcessRenewalRequestCompletedEventHandler ProcessRenewalRequestCompleted;
        
        /// <remarks/>
        public event GetRenewalResponseTransmissionStatusCompletedEventHandler GetRenewalResponseTransmissionStatusCompleted;
        
        /// <remarks/>
        public event GetRenewalResponseStatusCompletedEventHandler GetRenewalResponseStatusCompleted;
        
        /// <remarks/>
        public event FormularyAlternativesWithDrugInfo2CompletedEventHandler FormularyAlternativesWithDrugInfo2Completed;
        
        /// <remarks/>
        public event SendMissingHealthplanInformationCompletedEventHandler SendMissingHealthplanInformationCompleted;
        
        /// <remarks/>
        public event GetPBMDrugHistoryV2CompletedEventHandler GetPBMDrugHistoryV2Completed;
        
        /// <remarks/>
        public event GetPBMDrugHistoryV3CompletedEventHandler GetPBMDrugHistoryV3Completed;
        
        /// <remarks/>
        public event GetMostRecentDownloadUrlCompletedEventHandler GetMostRecentDownloadUrlCompleted;
        
        /// <remarks/>
        public event DrugDiseaseInteractionCompletedEventHandler DrugDiseaseInteractionCompleted;
        
        /// <remarks/>
        public event DrugDiseaseInteractionV2CompletedEventHandler DrugDiseaseInteractionV2Completed;
        
        /// <remarks/>
        public event PharmacySearchV3CompletedEventHandler PharmacySearchV3Completed;
        
        /// <remarks/>
        public event PharmacySearchV4CompletedEventHandler PharmacySearchV4Completed;
        
        /// <remarks/>
        public event PharmacySearchV5CompletedEventHandler PharmacySearchV5Completed;
        
        /// <remarks/>
        public event GetLocationPharmaciesCompletedEventHandler GetLocationPharmaciesCompleted;
        
        /// <remarks/>
        public event DrugSearchWithFormularyWithFavoritesV2CompletedEventHandler DrugSearchWithFormularyWithFavoritesV2Completed;
        
        /// <remarks/>
        public event DrugSearchWithFormularyWithFavoritesV3CompletedEventHandler DrugSearchWithFormularyWithFavoritesV3Completed;
        
        /// <remarks/>
        public event HealthplanSearchV2CompletedEventHandler HealthplanSearchV2Completed;
        
        /// <remarks/>
        public event FormularyCoverageV3CompletedEventHandler FormularyCoverageV3Completed;
        
        /// <remarks/>
        public event ReportPrescribingCountCompletedEventHandler ReportPrescribingCountCompleted;
        
        /// <remarks/>
        public event GetCounselingMessagesCompletedEventHandler GetCounselingMessagesCompleted;
        
        /// <remarks/>
        public event GetSideEffectsCompletedEventHandler GetSideEffectsCompleted;
        
        /// <remarks/>
        public event GetAccountStatusV2CompletedEventHandler GetAccountStatusV2Completed;
        
        /// <remarks/>
        public event GetAccountStatusDetailCompletedEventHandler GetAccountStatusDetailCompleted;
        
        /// <remarks/>
        public event GetPBMEligibilityV2CompletedEventHandler GetPBMEligibilityV2Completed;
        
        /// <remarks/>
        public event GetPBMEligibilityV3CompletedEventHandler GetPBMEligibilityV3Completed;
        
        /// <remarks/>
        public event GetPrescriptionTransmissionStatusV2CompletedEventHandler GetPrescriptionTransmissionStatusV2Completed;
        
        /// <remarks/>
        public event GetSubmittedMessageTransactionStatusCompletedEventHandler GetSubmittedMessageTransactionStatusCompleted;
        
        /// <remarks/>
        public event DrugAllergyInteractionV2CompletedEventHandler DrugAllergyInteractionV2Completed;
        
        /// <remarks/>
        public event ResolveFailedPrescriptionTransmissionCompletedEventHandler ResolveFailedPrescriptionTransmissionCompleted;
        
        /// <remarks/>
        public event GetMeaningfulUsePatientEncounterInfoCompletedEventHandler GetMeaningfulUsePatientEncounterInfoCompleted;
        
        /// <remarks/>
        public event DoseCheckCompletedEventHandler DoseCheckCompleted;
        
        /// <remarks/>
        public event SendToRegistryCompletedEventHandler SendToRegistryCompleted;
        
        /// <remarks/>
        public event RegisterLicensedPrescriberV2CompletedEventHandler RegisterLicensedPrescriberV2Completed;
        
        /// <remarks/>
        public event LicensedPrescriberStatusV2CompletedEventHandler LicensedPrescriberStatusV2Completed;
        
        /// <remarks/>
        public event RegisterOrganizationCompletedEventHandler RegisterOrganizationCompleted;
        
        /// <remarks/>
        public event CreatePatientPortalLoginCompletedEventHandler CreatePatientPortalLoginCompleted;
        
        /// <remarks/>
        public event GetRxBatchStatusCompletedEventHandler GetRxBatchStatusCompleted;
        
        /// <remarks/>
        public event GetDigitalSigningBatchStatusCompletedEventHandler GetDigitalSigningBatchStatusCompleted;
        
        /// <remarks/>
        public event GetDigitallySignedMessageCompletedEventHandler GetDigitallySignedMessageCompleted;
        
        /// <remarks/>
        public event CreateRxBatchCompletedEventHandler CreateRxBatchCompleted;
        
        /// <remarks/>
        public event CreateDigitalSigningBatchCompletedEventHandler CreateDigitalSigningBatchCompleted;
        
        /// <remarks/>
        public event CreateRenewalBatchCompletedEventHandler CreateRenewalBatchCompleted;
        
        /// <remarks/>
        public event GetRenewalBatchStatusCompletedEventHandler GetRenewalBatchStatusCompleted;
        
        /// <remarks/>
        public event GetRenewalBatchStatusV2CompletedEventHandler GetRenewalBatchStatusV2Completed;
        
        /// <remarks/>
        public event CompleteRxBatchCompletedEventHandler CompleteRxBatchCompleted;
        
        /// <remarks/>
        public event CompleteRxBatchV2CompletedEventHandler CompleteRxBatchV2Completed;
        
        /// <remarks/>
        public event CompleteDigitalSigningBatchCompletedEventHandler CompleteDigitalSigningBatchCompleted;
        
        /// <remarks/>
        public event CompleteDigitalSigningBatchV2CompletedEventHandler CompleteDigitalSigningBatchV2Completed;
        
        /// <remarks/>
        public event CompleteRenewalBatchCompletedEventHandler CompleteRenewalBatchCompleted;
        
        /// <remarks/>
        public event CompleteRenewalBatchV2CompletedEventHandler CompleteRenewalBatchV2Completed;
        
        /// <remarks/>
        public event DuplicateDrugTherapyCompletedEventHandler DuplicateDrugTherapyCompleted;
        
        /// <remarks/>
        public event SendCancelRxForNewRxCompletedEventHandler SendCancelRxForNewRxCompleted;
        
        /// <remarks/>
        public event SendCancelRxForRenewalResponseCompletedEventHandler SendCancelRxForRenewalResponseCompleted;
        
        /// <remarks/>
        public event CheckCancelRxStatusCompletedEventHandler CheckCancelRxStatusCompleted;
        
        /// <remarks/>
        public event CheckCancelRxStatusV2CompletedEventHandler CheckCancelRxStatusV2Completed;
        
        /// <remarks/>
        public event ConfirmCancelRxCompletedEventHandler ConfirmCancelRxCompleted;
        
        /// <remarks/>
        public event GetAllRxFillsSummaryCompletedEventHandler GetAllRxFillsSummaryCompleted;
        
        /// <remarks/>
        public event GetRxFillDetailCompletedEventHandler GetRxFillDetailCompleted;
        
        /// <remarks/>
        public event ConfirmRxFillReceiptCompletedEventHandler ConfirmRxFillReceiptCompleted;
        
        /// <remarks/>
        public event GetAllRxChangesSummaryCompletedEventHandler GetAllRxChangesSummaryCompleted;
        
        /// <remarks/>
        public event GetAllRxChangesSummaryV2CompletedEventHandler GetAllRxChangesSummaryV2Completed;
        
        /// <remarks/>
        public event GetRxChangeDetailCompletedEventHandler GetRxChangeDetailCompleted;
        
        /// <remarks/>
        public event ConfirmRxChangeReceiptCompletedEventHandler ConfirmRxChangeReceiptCompleted;
        
        /// <remarks/>
        public event SendRxChangeDenyResponseCompletedEventHandler SendRxChangeDenyResponseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CreateRxChangeApprovalResponse", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateRxChangeApprovalResponseResult CreateRxChangeApprovalResponse(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("CreateRxChangeApprovalResponse", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((CreateRxChangeApprovalResponseResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRxChangeApprovalResponseAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.CreateRxChangeApprovalResponseAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void CreateRxChangeApprovalResponseAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.CreateRxChangeApprovalResponseOperationCompleted == null)) {
                this.CreateRxChangeApprovalResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRxChangeApprovalResponseOperationCompleted);
            }
            this.InvokeAsync("CreateRxChangeApprovalResponse", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.CreateRxChangeApprovalResponseOperationCompleted, userState);
        }
        
        private void OnCreateRxChangeApprovalResponseOperationCompleted(object arg) {
            if ((this.CreateRxChangeApprovalResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRxChangeApprovalResponseCompleted(this, new CreateRxChangeApprovalResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteRxChangeApproval", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CompleteRxChangeApproval(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuid) {
            object[] results = this.Invoke("CompleteRxChangeApproval", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRxChangeApprovalAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuid) {
            this.CompleteRxChangeApprovalAsync(credentials, accountRequest, rxBatchTransactionGuid, null);
        }
        
        /// <remarks/>
        public void CompleteRxChangeApprovalAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuid, object userState) {
            if ((this.CompleteRxChangeApprovalOperationCompleted == null)) {
                this.CompleteRxChangeApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRxChangeApprovalOperationCompleted);
            }
            this.InvokeAsync("CompleteRxChangeApproval", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuid}, this.CompleteRxChangeApprovalOperationCompleted, userState);
        }
        
        private void OnCompleteRxChangeApprovalOperationCompleted(object arg) {
            if ((this.CompleteRxChangeApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRxChangeApprovalCompleted(this, new CompleteRxChangeApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteRxChangeApprovalV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompleteBatchResult CompleteRxChangeApprovalV2(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuid, TwoFactorAuthentication twoFactorAuthentication) {
            object[] results = this.Invoke("CompleteRxChangeApprovalV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuid,
                        twoFactorAuthentication});
            return ((CompleteBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRxChangeApprovalV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuid, TwoFactorAuthentication twoFactorAuthentication) {
            this.CompleteRxChangeApprovalV2Async(credentials, accountRequest, rxBatchTransactionGuid, twoFactorAuthentication, null);
        }
        
        /// <remarks/>
        public void CompleteRxChangeApprovalV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuid, TwoFactorAuthentication twoFactorAuthentication, object userState) {
            if ((this.CompleteRxChangeApprovalV2OperationCompleted == null)) {
                this.CompleteRxChangeApprovalV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRxChangeApprovalV2OperationCompleted);
            }
            this.InvokeAsync("CompleteRxChangeApprovalV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuid,
                        twoFactorAuthentication}, this.CompleteRxChangeApprovalV2OperationCompleted, userState);
        }
        
        private void OnCompleteRxChangeApprovalV2OperationCompleted(object arg) {
            if ((this.CompleteRxChangeApprovalV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRxChangeApprovalV2Completed(this, new CompleteRxChangeApprovalV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/RollbackRxChangeApproval", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RollbackRxChangeApproval(Credentials credentials, AccountRequest accountRequest, string rxChangeGuid) {
            object[] results = this.Invoke("RollbackRxChangeApproval", new object[] {
                        credentials,
                        accountRequest,
                        rxChangeGuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RollbackRxChangeApprovalAsync(Credentials credentials, AccountRequest accountRequest, string rxChangeGuid) {
            this.RollbackRxChangeApprovalAsync(credentials, accountRequest, rxChangeGuid, null);
        }
        
        /// <remarks/>
        public void RollbackRxChangeApprovalAsync(Credentials credentials, AccountRequest accountRequest, string rxChangeGuid, object userState) {
            if ((this.RollbackRxChangeApprovalOperationCompleted == null)) {
                this.RollbackRxChangeApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRollbackRxChangeApprovalOperationCompleted);
            }
            this.InvokeAsync("RollbackRxChangeApproval", new object[] {
                        credentials,
                        accountRequest,
                        rxChangeGuid}, this.RollbackRxChangeApprovalOperationCompleted, userState);
        }
        
        private void OnRollbackRxChangeApprovalOperationCompleted(object arg) {
            if ((this.RollbackRxChangeApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RollbackRxChangeApprovalCompleted(this, new RollbackRxChangeApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRxChangeStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxChangeStatusResult GetRxChangeStatus(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            object[] results = this.Invoke("GetRxChangeStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn});
            return ((GetRxChangeStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxChangeStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            this.GetRxChangeStatusAsync(credentials, accountRequest, rxBatchTransactionGuidIn, null);
        }
        
        /// <remarks/>
        public void GetRxChangeStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, object userState) {
            if ((this.GetRxChangeStatusOperationCompleted == null)) {
                this.GetRxChangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxChangeStatusOperationCompleted);
            }
            this.InvokeAsync("GetRxChangeStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn}, this.GetRxChangeStatusOperationCompleted, userState);
        }
        
        private void OnGetRxChangeStatusOperationCompleted(object arg) {
            if ((this.GetRxChangeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxChangeStatusCompleted(this, new GetRxChangeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CheckRxChangeDeliveryStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxChangeDeliveryStatusResult CheckRxChangeDeliveryStatus(Credentials credentials, AccountRequest accountRequest, string rxChangeTransactionId) {
            object[] results = this.Invoke("CheckRxChangeDeliveryStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxChangeTransactionId});
            return ((RxChangeDeliveryStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRxChangeDeliveryStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxChangeTransactionId) {
            this.CheckRxChangeDeliveryStatusAsync(credentials, accountRequest, rxChangeTransactionId, null);
        }
        
        /// <remarks/>
        public void CheckRxChangeDeliveryStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxChangeTransactionId, object userState) {
            if ((this.CheckRxChangeDeliveryStatusOperationCompleted == null)) {
                this.CheckRxChangeDeliveryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRxChangeDeliveryStatusOperationCompleted);
            }
            this.InvokeAsync("CheckRxChangeDeliveryStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxChangeTransactionId}, this.CheckRxChangeDeliveryStatusOperationCompleted, userState);
        }
        
        private void OnCheckRxChangeDeliveryStatusOperationCompleted(object arg) {
            if ((this.CheckRxChangeDeliveryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRxChangeDeliveryStatusCompleted(this, new CheckRxChangeDeliveryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetStateDrugScheduleOverrides", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateDrugScheduleOverridesResult GetStateDrugScheduleOverrides(Credentials credentials, AccountRequest accountRequest, string sourceStateAbbreviation, DrugScheduleDestinationValueType destinationValueType, string destinationValue, DrugScheduleDrugConceptType drugConceptType, string drugConcept) {
            object[] results = this.Invoke("GetStateDrugScheduleOverrides", new object[] {
                        credentials,
                        accountRequest,
                        sourceStateAbbreviation,
                        destinationValueType,
                        destinationValue,
                        drugConceptType,
                        drugConcept});
            return ((StateDrugScheduleOverridesResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateDrugScheduleOverridesAsync(Credentials credentials, AccountRequest accountRequest, string sourceStateAbbreviation, DrugScheduleDestinationValueType destinationValueType, string destinationValue, DrugScheduleDrugConceptType drugConceptType, string drugConcept) {
            this.GetStateDrugScheduleOverridesAsync(credentials, accountRequest, sourceStateAbbreviation, destinationValueType, destinationValue, drugConceptType, drugConcept, null);
        }
        
        /// <remarks/>
        public void GetStateDrugScheduleOverridesAsync(Credentials credentials, AccountRequest accountRequest, string sourceStateAbbreviation, DrugScheduleDestinationValueType destinationValueType, string destinationValue, DrugScheduleDrugConceptType drugConceptType, string drugConcept, object userState) {
            if ((this.GetStateDrugScheduleOverridesOperationCompleted == null)) {
                this.GetStateDrugScheduleOverridesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateDrugScheduleOverridesOperationCompleted);
            }
            this.InvokeAsync("GetStateDrugScheduleOverrides", new object[] {
                        credentials,
                        accountRequest,
                        sourceStateAbbreviation,
                        destinationValueType,
                        destinationValue,
                        drugConceptType,
                        drugConcept}, this.GetStateDrugScheduleOverridesOperationCompleted, userState);
        }
        
        private void OnGetStateDrugScheduleOverridesOperationCompleted(object arg) {
            if ((this.GetStateDrugScheduleOverridesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateDrugScheduleOverridesCompleted(this, new GetStateDrugScheduleOverridesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetLastPDMPReviewDateByPatient", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PDMPReviewDateByPatientDetailResult GetLastPDMPReviewDateByPatient(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetLastPDMPReviewDateByPatient", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PDMPReviewDateByPatientDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastPDMPReviewDateByPatientAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetLastPDMPReviewDateByPatientAsync(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetLastPDMPReviewDateByPatientAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetLastPDMPReviewDateByPatientOperationCompleted == null)) {
                this.GetLastPDMPReviewDateByPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastPDMPReviewDateByPatientOperationCompleted);
            }
            this.InvokeAsync("GetLastPDMPReviewDateByPatient", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetLastPDMPReviewDateByPatientOperationCompleted, userState);
        }
        
        private void OnGetLastPDMPReviewDateByPatientOperationCompleted(object arg) {
            if ((this.GetLastPDMPReviewDateByPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastPDMPReviewDateByPatientCompleted(this, new GetLastPDMPReviewDateByPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyScriptReport", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyScriptReport(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetDailyScriptReport", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyScriptReportAsync(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, string includeSchema, string sortOrder) {
            this.GetDailyScriptReportAsync(credentials, accountRequest, reportDateCCYYMMDD, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetDailyScriptReportAsync(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, string includeSchema, string sortOrder, object userState) {
            if ((this.GetDailyScriptReportOperationCompleted == null)) {
                this.GetDailyScriptReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyScriptReportOperationCompleted);
            }
            this.InvokeAsync("GetDailyScriptReport", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        includeSchema,
                        sortOrder}, this.GetDailyScriptReportOperationCompleted, userState);
        }
        
        private void OnGetDailyScriptReportOperationCompleted(object arg) {
            if ((this.GetDailyScriptReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyScriptReportCompleted(this, new GetDailyScriptReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyScriptReportV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyScriptReportV2(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string includeSchema) {
            object[] results = this.Invoke("GetDailyScriptReportV2", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV2Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string includeSchema) {
            this.GetDailyScriptReportV2Async(credentials, accountRequest, reportDateCCYYMMDD, startHour, endHour, status, transmissionType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV2Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string includeSchema, object userState) {
            if ((this.GetDailyScriptReportV2OperationCompleted == null)) {
                this.GetDailyScriptReportV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyScriptReportV2OperationCompleted);
            }
            this.InvokeAsync("GetDailyScriptReportV2", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        includeSchema}, this.GetDailyScriptReportV2OperationCompleted, userState);
        }
        
        private void OnGetDailyScriptReportV2OperationCompleted(object arg) {
            if ((this.GetDailyScriptReportV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyScriptReportV2Completed(this, new GetDailyScriptReportV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyScriptReportV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyScriptReportV3(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string prescriptionType, string prescriptionSubType, string includeSchema) {
            object[] results = this.Invoke("GetDailyScriptReportV3", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        prescriptionType,
                        prescriptionSubType,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV3Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string prescriptionType, string prescriptionSubType, string includeSchema) {
            this.GetDailyScriptReportV3Async(credentials, accountRequest, reportDateCCYYMMDD, startHour, endHour, status, transmissionType, prescriptionType, prescriptionSubType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV3Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string prescriptionType, string prescriptionSubType, string includeSchema, object userState) {
            if ((this.GetDailyScriptReportV3OperationCompleted == null)) {
                this.GetDailyScriptReportV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyScriptReportV3OperationCompleted);
            }
            this.InvokeAsync("GetDailyScriptReportV3", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        prescriptionType,
                        prescriptionSubType,
                        includeSchema}, this.GetDailyScriptReportV3OperationCompleted, userState);
        }
        
        private void OnGetDailyScriptReportV3OperationCompleted(object arg) {
            if ((this.GetDailyScriptReportV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyScriptReportV3Completed(this, new GetDailyScriptReportV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GenerateMeaningfulUseUtilizatio" +
            "nReport", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportDetailResult GenerateMeaningfulUseUtilizationReport(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string licensedPrescriberId, string startDateCCYYMMDD, string endDateCCYYMMDD, int quarterNumber, string quarterYearCCYY, TimePeriodQueryType timePeriodQueryType, string includeSchema) {
            object[] results = this.Invoke("GenerateMeaningfulUseUtilizationReport", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        licensedPrescriberId,
                        startDateCCYYMMDD,
                        endDateCCYYMMDD,
                        quarterNumber,
                        quarterYearCCYY,
                        timePeriodQueryType,
                        includeSchema});
            return ((ReportDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateMeaningfulUseUtilizationReportAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string licensedPrescriberId, string startDateCCYYMMDD, string endDateCCYYMMDD, int quarterNumber, string quarterYearCCYY, TimePeriodQueryType timePeriodQueryType, string includeSchema) {
            this.GenerateMeaningfulUseUtilizationReportAsync(credentials, accountRequest, patientInformationRequester, licensedPrescriberId, startDateCCYYMMDD, endDateCCYYMMDD, quarterNumber, quarterYearCCYY, timePeriodQueryType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GenerateMeaningfulUseUtilizationReportAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string licensedPrescriberId, string startDateCCYYMMDD, string endDateCCYYMMDD, int quarterNumber, string quarterYearCCYY, TimePeriodQueryType timePeriodQueryType, string includeSchema, object userState) {
            if ((this.GenerateMeaningfulUseUtilizationReportOperationCompleted == null)) {
                this.GenerateMeaningfulUseUtilizationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMeaningfulUseUtilizationReportOperationCompleted);
            }
            this.InvokeAsync("GenerateMeaningfulUseUtilizationReport", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        licensedPrescriberId,
                        startDateCCYYMMDD,
                        endDateCCYYMMDD,
                        quarterNumber,
                        quarterYearCCYY,
                        timePeriodQueryType,
                        includeSchema}, this.GenerateMeaningfulUseUtilizationReportOperationCompleted, userState);
        }
        
        private void OnGenerateMeaningfulUseUtilizationReportOperationCompleted(object arg) {
            if ((this.GenerateMeaningfulUseUtilizationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMeaningfulUseUtilizationReportCompleted(this, new GenerateMeaningfulUseUtilizationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetMeaningfulUseUtilizationRepo" +
            "rt", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportDownloadResult GetMeaningfulUseUtilizationReport(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportTransactionId) {
            object[] results = this.Invoke("GetMeaningfulUseUtilizationReport", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        reportTransactionId});
            return ((ReportDownloadResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeaningfulUseUtilizationReportAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportTransactionId) {
            this.GetMeaningfulUseUtilizationReportAsync(credentials, accountRequest, patientInformationRequester, reportTransactionId, null);
        }
        
        /// <remarks/>
        public void GetMeaningfulUseUtilizationReportAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportTransactionId, object userState) {
            if ((this.GetMeaningfulUseUtilizationReportOperationCompleted == null)) {
                this.GetMeaningfulUseUtilizationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeaningfulUseUtilizationReportOperationCompleted);
            }
            this.InvokeAsync("GetMeaningfulUseUtilizationReport", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        reportTransactionId}, this.GetMeaningfulUseUtilizationReportOperationCompleted, userState);
        }
        
        private void OnGetMeaningfulUseUtilizationReportOperationCompleted(object arg) {
            if ((this.GetMeaningfulUseUtilizationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeaningfulUseUtilizationReportCompleted(this, new GetMeaningfulUseUtilizationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyMeaningfulUseReport", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyMeaningfulUseReport(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string reportDateCCYYMMDD, string includeSchema) {
            object[] results = this.Invoke("GetDailyMeaningfulUseReport", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        reportDateCCYYMMDD,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyMeaningfulUseReportAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string reportDateCCYYMMDD, string includeSchema) {
            this.GetDailyMeaningfulUseReportAsync(credentials, accountRequest, locationId, licensedPrescriberId, reportDateCCYYMMDD, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetDailyMeaningfulUseReportAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string reportDateCCYYMMDD, string includeSchema, object userState) {
            if ((this.GetDailyMeaningfulUseReportOperationCompleted == null)) {
                this.GetDailyMeaningfulUseReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyMeaningfulUseReportOperationCompleted);
            }
            this.InvokeAsync("GetDailyMeaningfulUseReport", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        reportDateCCYYMMDD,
                        includeSchema}, this.GetDailyMeaningfulUseReportOperationCompleted, userState);
        }
        
        private void OnGetDailyMeaningfulUseReportOperationCompleted(object arg) {
            if ((this.GetDailyMeaningfulUseReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyMeaningfulUseReportCompleted(this, new GetDailyMeaningfulUseReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetCompleteMedicationHistory", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetCompleteMedicationHistory(Credentials credentials, AccountRequest accountRequest, string reportDateStartCCYYMMDD, string reportDateEndCCYYMMDD, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetCompleteMedicationHistory", new object[] {
                        credentials,
                        accountRequest,
                        reportDateStartCCYYMMDD,
                        reportDateEndCCYYMMDD,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompleteMedicationHistoryAsync(Credentials credentials, AccountRequest accountRequest, string reportDateStartCCYYMMDD, string reportDateEndCCYYMMDD, string includeSchema, string sortOrder) {
            this.GetCompleteMedicationHistoryAsync(credentials, accountRequest, reportDateStartCCYYMMDD, reportDateEndCCYYMMDD, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetCompleteMedicationHistoryAsync(Credentials credentials, AccountRequest accountRequest, string reportDateStartCCYYMMDD, string reportDateEndCCYYMMDD, string includeSchema, string sortOrder, object userState) {
            if ((this.GetCompleteMedicationHistoryOperationCompleted == null)) {
                this.GetCompleteMedicationHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompleteMedicationHistoryOperationCompleted);
            }
            this.InvokeAsync("GetCompleteMedicationHistory", new object[] {
                        credentials,
                        accountRequest,
                        reportDateStartCCYYMMDD,
                        reportDateEndCCYYMMDD,
                        includeSchema,
                        sortOrder}, this.GetCompleteMedicationHistoryOperationCompleted, userState);
        }
        
        private void OnGetCompleteMedicationHistoryOperationCompleted(object arg) {
            if ((this.GetCompleteMedicationHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleteMedicationHistoryCompleted(this, new GetCompleteMedicationHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFullMedicationHistory" +
            "4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDrugDetailResult4 GetPatientFullMedicationHistory4(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            object[] results = this.Invoke("GetPatientFullMedicationHistory4", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType});
            return ((PatientDrugDetailResult4)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory4Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            this.GetPatientFullMedicationHistory4Async(credentials, accountRequest, patientRequest, prescriptionHistoryRequest, patientInformationRequester, patientIdType, null);
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory4Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, object userState) {
            if ((this.GetPatientFullMedicationHistory4OperationCompleted == null)) {
                this.GetPatientFullMedicationHistory4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFullMedicationHistory4OperationCompleted);
            }
            this.InvokeAsync("GetPatientFullMedicationHistory4", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType}, this.GetPatientFullMedicationHistory4OperationCompleted, userState);
        }
        
        private void OnGetPatientFullMedicationHistory4OperationCompleted(object arg) {
            if ((this.GetPatientFullMedicationHistory4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFullMedicationHistory4Completed(this, new GetPatientFullMedicationHistory4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFullMedicationHistory" +
            "5", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDrugDetailResult5 GetPatientFullMedicationHistory5(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            object[] results = this.Invoke("GetPatientFullMedicationHistory5", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType});
            return ((PatientDrugDetailResult5)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory5Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            this.GetPatientFullMedicationHistory5Async(credentials, accountRequest, patientRequest, prescriptionHistoryRequest, patientInformationRequester, patientIdType, null);
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory5Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, object userState) {
            if ((this.GetPatientFullMedicationHistory5OperationCompleted == null)) {
                this.GetPatientFullMedicationHistory5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFullMedicationHistory5OperationCompleted);
            }
            this.InvokeAsync("GetPatientFullMedicationHistory5", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType}, this.GetPatientFullMedicationHistory5OperationCompleted, userState);
        }
        
        private void OnGetPatientFullMedicationHistory5OperationCompleted(object arg) {
            if ((this.GetPatientFullMedicationHistory5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFullMedicationHistory5Completed(this, new GetPatientFullMedicationHistory5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFullMedicationHistory" +
            "6", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetPatientFullMedicationHistory6(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, string includeSchema) {
            object[] results = this.Invoke("GetPatientFullMedicationHistory6", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory6Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, string includeSchema) {
            this.GetPatientFullMedicationHistory6Async(credentials, accountRequest, patientRequest, prescriptionHistoryRequest, patientInformationRequester, patientIdType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory6Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, string includeSchema, object userState) {
            if ((this.GetPatientFullMedicationHistory6OperationCompleted == null)) {
                this.GetPatientFullMedicationHistory6OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFullMedicationHistory6OperationCompleted);
            }
            this.InvokeAsync("GetPatientFullMedicationHistory6", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType,
                        includeSchema}, this.GetPatientFullMedicationHistory6OperationCompleted, userState);
        }
        
        private void OnGetPatientFullMedicationHistory6OperationCompleted(object arg) {
            if ((this.GetPatientFullMedicationHistory6Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFullMedicationHistory6Completed(this, new GetPatientFullMedicationHistory6CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientAllergyHistory2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAllergyExtendedDetailResult GetPatientAllergyHistory2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientAllergyHistory2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PatientAllergyExtendedDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistory2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientAllergyHistory2Async(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistory2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientAllergyHistory2OperationCompleted == null)) {
                this.GetPatientAllergyHistory2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyHistory2OperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyHistory2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientAllergyHistory2OperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyHistory2OperationCompleted(object arg) {
            if ((this.GetPatientAllergyHistory2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyHistory2Completed(this, new GetPatientAllergyHistory2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientAllergyHistoryV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetPatientAllergyHistoryV3(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientAllergyHistoryV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistoryV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientAllergyHistoryV3Async(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistoryV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientAllergyHistoryV3OperationCompleted == null)) {
                this.GetPatientAllergyHistoryV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyHistoryV3OperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyHistoryV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientAllergyHistoryV3OperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyHistoryV3OperationCompleted(object arg) {
            if ((this.GetPatientAllergyHistoryV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyHistoryV3Completed(this, new GetPatientAllergyHistoryV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientAllergyHistoryV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAllergyExtendedDetailV4Result GetPatientAllergyHistoryV4(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientAllergyHistoryV4", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PatientAllergyExtendedDetailV4Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistoryV4Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientAllergyHistoryV4Async(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistoryV4Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientAllergyHistoryV4OperationCompleted == null)) {
                this.GetPatientAllergyHistoryV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyHistoryV4OperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyHistoryV4", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientAllergyHistoryV4OperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyHistoryV4OperationCompleted(object arg) {
            if ((this.GetPatientAllergyHistoryV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyHistoryV4Completed(this, new GetPatientAllergyHistoryV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFreeFormAllergyHistor" +
            "y", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientFreeFormAllergyExtendedDetailResult GetPatientFreeFormAllergyHistory(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientFreeFormAllergyHistory", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PatientFreeFormAllergyExtendedDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFreeFormAllergyHistoryAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientFreeFormAllergyHistoryAsync(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientFreeFormAllergyHistoryAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientFreeFormAllergyHistoryOperationCompleted == null)) {
                this.GetPatientFreeFormAllergyHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFreeFormAllergyHistoryOperationCompleted);
            }
            this.InvokeAsync("GetPatientFreeFormAllergyHistory", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientFreeFormAllergyHistoryOperationCompleted, userState);
        }
        
        private void OnGetPatientFreeFormAllergyHistoryOperationCompleted(object arg) {
            if ((this.GetPatientFreeFormAllergyHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFreeFormAllergyHistoryCompleted(this, new GetPatientFreeFormAllergyHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientAllergyLog", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAllergyLogDetailResult GetPatientAllergyLog(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientAllergyLog", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PatientAllergyLogDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyLogAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientAllergyLogAsync(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyLogAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientAllergyLogOperationCompleted == null)) {
                this.GetPatientAllergyLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyLogOperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyLog", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientAllergyLogOperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyLogOperationCompleted(object arg) {
            if ((this.GetPatientAllergyLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyLogCompleted(this, new GetPatientAllergyLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPrescriptionTransmissionStat" +
            "us", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransmissionSummaryResult GetPrescriptionTransmissionStatus(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string prescriptionIds) {
            object[] results = this.Invoke("GetPrescriptionTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        prescriptionIds});
            return ((TransmissionSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string prescriptionIds) {
            this.GetPrescriptionTransmissionStatusAsync(credentials, accountRequest, patientRequest, patientInformationRequester, prescriptionIds, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string prescriptionIds, object userState) {
            if ((this.GetPrescriptionTransmissionStatusOperationCompleted == null)) {
                this.GetPrescriptionTransmissionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionTransmissionStatusOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        prescriptionIds}, this.GetPrescriptionTransmissionStatusOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionTransmissionStatusOperationCompleted(object arg) {
            if ((this.GetPrescriptionTransmissionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionTransmissionStatusCompleted(this, new GetPrescriptionTransmissionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPrescriptionTransmissionStat" +
            "usByPatient", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransmissionSummaryResult GetPrescriptionTransmissionStatusByPatient(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string queryMode, string status, string subStatus, string archiveStatus) {
            object[] results = this.Invoke("GetPrescriptionTransmissionStatusByPatient", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryMode,
                        status,
                        subStatus,
                        archiveStatus});
            return ((TransmissionSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusByPatientAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string queryMode, string status, string subStatus, string archiveStatus) {
            this.GetPrescriptionTransmissionStatusByPatientAsync(credentials, accountRequest, patientRequest, patientInformationRequester, queryMode, status, subStatus, archiveStatus, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusByPatientAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string queryMode, string status, string subStatus, string archiveStatus, object userState) {
            if ((this.GetPrescriptionTransmissionStatusByPatientOperationCompleted == null)) {
                this.GetPrescriptionTransmissionStatusByPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionTransmissionStatusByPatientOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionTransmissionStatusByPatient", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryMode,
                        status,
                        subStatus,
                        archiveStatus}, this.GetPrescriptionTransmissionStatusByPatientOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionTransmissionStatusByPatientOperationCompleted(object arg) {
            if ((this.GetPrescriptionTransmissionStatusByPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionTransmissionStatusByPatientCompleted(this, new GetPrescriptionTransmissionStatusByPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GenerateTestRenewalRequest", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateTestRenewalRequest(Credentials credentials, AccountRequest accountRequest, string xmlIn, bool createCurrentMedFromRxInfo, string originalPrescriptionFillDate) {
            object[] results = this.Invoke("GenerateTestRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn,
                        createCurrentMedFromRxInfo,
                        originalPrescriptionFillDate});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateTestRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, bool createCurrentMedFromRxInfo, string originalPrescriptionFillDate) {
            this.GenerateTestRenewalRequestAsync(credentials, accountRequest, xmlIn, createCurrentMedFromRxInfo, originalPrescriptionFillDate, null);
        }
        
        /// <remarks/>
        public void GenerateTestRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, bool createCurrentMedFromRxInfo, string originalPrescriptionFillDate, object userState) {
            if ((this.GenerateTestRenewalRequestOperationCompleted == null)) {
                this.GenerateTestRenewalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTestRenewalRequestOperationCompleted);
            }
            this.InvokeAsync("GenerateTestRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn,
                        createCurrentMedFromRxInfo,
                        originalPrescriptionFillDate}, this.GenerateTestRenewalRequestOperationCompleted, userState);
        }
        
        private void OnGenerateTestRenewalRequestOperationCompleted(object arg) {
            if ((this.GenerateTestRenewalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTestRenewalRequestCompleted(this, new GenerateTestRenewalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequests", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalSummaryResult GetAllRenewalRequests(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            object[] results = this.Invoke("GetAllRenewalRequests", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId});
            return ((RenewalSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            this.GetAllRenewalRequestsAsync(credentials, accountRequest, locationId, licensedPrescriberId, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, object userState) {
            if ((this.GetAllRenewalRequestsOperationCompleted == null)) {
                this.GetAllRenewalRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsOperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequests", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId}, this.GetAllRenewalRequestsOperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsOperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsCompleted(this, new GetAllRenewalRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalSummaryResultV2 GetAllRenewalRequestsV2(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            object[] results = this.Invoke("GetAllRenewalRequestsV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId});
            return ((RenewalSummaryResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            this.GetAllRenewalRequestsV2Async(credentials, accountRequest, locationId, licensedPrescriberId, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, object userState) {
            if ((this.GetAllRenewalRequestsV2OperationCompleted == null)) {
                this.GetAllRenewalRequestsV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsV2OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId}, this.GetAllRenewalRequestsV2OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsV2OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsV2Completed(this, new GetAllRenewalRequestsV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalSummaryResultV2 GetAllRenewalRequestsV3(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            object[] results = this.Invoke("GetAllRenewalRequestsV3", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate});
            return ((RenewalSummaryResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV3Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            this.GetAllRenewalRequestsV3Async(credentials, accountRequest, locationId, licensedPrescriberId, renewalRequestDate, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV3Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate, object userState) {
            if ((this.GetAllRenewalRequestsV3OperationCompleted == null)) {
                this.GetAllRenewalRequestsV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsV3OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsV3", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate}, this.GetAllRenewalRequestsV3OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsV3OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsV3Completed(this, new GetAllRenewalRequestsV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsDetailV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalListDetailResultV4 GetAllRenewalRequestsDetailV4(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            object[] results = this.Invoke("GetAllRenewalRequestsDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate});
            return ((RenewalListDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsDetailV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            this.GetAllRenewalRequestsDetailV4Async(credentials, accountRequest, locationId, licensedPrescriberId, renewalRequestDate, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsDetailV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate, object userState) {
            if ((this.GetAllRenewalRequestsDetailV4OperationCompleted == null)) {
                this.GetAllRenewalRequestsDetailV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsDetailV4OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate}, this.GetAllRenewalRequestsDetailV4OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsDetailV4OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsDetailV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsDetailV4Completed(this, new GetAllRenewalRequestsDetailV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsSummaryV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalListSummaryResultV4 GetAllRenewalRequestsSummaryV4(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            object[] results = this.Invoke("GetAllRenewalRequestsSummaryV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate});
            return ((RenewalListSummaryResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsSummaryV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            this.GetAllRenewalRequestsSummaryV4Async(credentials, accountRequest, locationId, licensedPrescriberId, renewalRequestDate, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsSummaryV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate, object userState) {
            if ((this.GetAllRenewalRequestsSummaryV4OperationCompleted == null)) {
                this.GetAllRenewalRequestsSummaryV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsSummaryV4OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsSummaryV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate}, this.GetAllRenewalRequestsSummaryV4OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsSummaryV4OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsSummaryV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsSummaryV4Completed(this, new GetAllRenewalRequestsSummaryV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalRequestDetail", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalDetailResult GetRenewalRequestDetail(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            object[] results = this.Invoke("GetRenewalRequestDetail", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier});
            return ((RenewalDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            this.GetRenewalRequestDetailAsync(credentials, accountRequest, renewalRequestIdentifier, null);
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, object userState) {
            if ((this.GetRenewalRequestDetailOperationCompleted == null)) {
                this.GetRenewalRequestDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalRequestDetailOperationCompleted);
            }
            this.InvokeAsync("GetRenewalRequestDetail", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier}, this.GetRenewalRequestDetailOperationCompleted, userState);
        }
        
        private void OnGetRenewalRequestDetailOperationCompleted(object arg) {
            if ((this.GetRenewalRequestDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalRequestDetailCompleted(this, new GetRenewalRequestDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalRequestDetailV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalDetailResultV4 GetRenewalRequestDetailV4(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage) {
            object[] results = this.Invoke("GetRenewalRequestDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        returnEncodedMessage});
            return ((RenewalDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailV4Async(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage) {
            this.GetRenewalRequestDetailV4Async(credentials, accountRequest, renewalRequestIdentifier, returnEncodedMessage, null);
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailV4Async(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage, object userState) {
            if ((this.GetRenewalRequestDetailV4OperationCompleted == null)) {
                this.GetRenewalRequestDetailV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalRequestDetailV4OperationCompleted);
            }
            this.InvokeAsync("GetRenewalRequestDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        returnEncodedMessage}, this.GetRenewalRequestDetailV4OperationCompleted, userState);
        }
        
        private void OnGetRenewalRequestDetailV4OperationCompleted(object arg) {
            if ((this.GetRenewalRequestDetailV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalRequestDetailV4Completed(this, new GetRenewalRequestDetailV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalRequestDetailV5", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalDetailResultV5 GetRenewalRequestDetailV5(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage) {
            object[] results = this.Invoke("GetRenewalRequestDetailV5", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        returnEncodedMessage});
            return ((RenewalDetailResultV5)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailV5Async(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage) {
            this.GetRenewalRequestDetailV5Async(credentials, accountRequest, renewalRequestIdentifier, returnEncodedMessage, null);
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailV5Async(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage, object userState) {
            if ((this.GetRenewalRequestDetailV5OperationCompleted == null)) {
                this.GetRenewalRequestDetailV5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalRequestDetailV5OperationCompleted);
            }
            this.InvokeAsync("GetRenewalRequestDetailV5", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        returnEncodedMessage}, this.GetRenewalRequestDetailV5OperationCompleted, userState);
        }
        
        private void OnGetRenewalRequestDetailV5OperationCompleted(object arg) {
            if ((this.GetRenewalRequestDetailV5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalRequestDetailV5Completed(this, new GetRenewalRequestDetailV5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ProcessRenewalRequest", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ProcessRenewalRequest(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("ProcessRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.ProcessRenewalRequestAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void ProcessRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.ProcessRenewalRequestOperationCompleted == null)) {
                this.ProcessRenewalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRenewalRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.ProcessRenewalRequestOperationCompleted, userState);
        }
        
        private void OnProcessRenewalRequestOperationCompleted(object arg) {
            if ((this.ProcessRenewalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRenewalRequestCompleted(this, new ProcessRenewalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalResponseTransmissionS" +
            "tatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalResponseDetailResult GetRenewalResponseTransmissionStatus(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            object[] results = this.Invoke("GetRenewalResponseTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier});
            return ((RenewalResponseDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalResponseTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            this.GetRenewalResponseTransmissionStatusAsync(credentials, accountRequest, renewalRequestIdentifier, null);
        }
        
        /// <remarks/>
        public void GetRenewalResponseTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, object userState) {
            if ((this.GetRenewalResponseTransmissionStatusOperationCompleted == null)) {
                this.GetRenewalResponseTransmissionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalResponseTransmissionStatusOperationCompleted);
            }
            this.InvokeAsync("GetRenewalResponseTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier}, this.GetRenewalResponseTransmissionStatusOperationCompleted, userState);
        }
        
        private void OnGetRenewalResponseTransmissionStatusOperationCompleted(object arg) {
            if ((this.GetRenewalResponseTransmissionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalResponseTransmissionStatusCompleted(this, new GetRenewalResponseTransmissionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalResponseStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetRenewalResponseStatus(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string includeSchema) {
            object[] results = this.Invoke("GetRenewalResponseStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalResponseStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string includeSchema) {
            this.GetRenewalResponseStatusAsync(credentials, accountRequest, renewalRequestIdentifier, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetRenewalResponseStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string includeSchema, object userState) {
            if ((this.GetRenewalResponseStatusOperationCompleted == null)) {
                this.GetRenewalResponseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalResponseStatusOperationCompleted);
            }
            this.InvokeAsync("GetRenewalResponseStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        includeSchema}, this.GetRenewalResponseStatusOperationCompleted, userState);
        }
        
        private void OnGetRenewalResponseStatusOperationCompleted(object arg) {
            if ((this.GetRenewalResponseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalResponseStatusCompleted(this, new GetRenewalResponseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/FormularyAlternativesWithDrugIn" +
            "fo2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugFormularyDetailResult FormularyAlternativesWithDrugInfo2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugConcept, string drugConceptType) {
            object[] results = this.Invoke("FormularyAlternativesWithDrugInfo2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType});
            return ((DrugFormularyDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void FormularyAlternativesWithDrugInfo2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugConcept, string drugConceptType) {
            this.FormularyAlternativesWithDrugInfo2Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanID, healthplanTypeID, eligibilityIndex, drugConcept, drugConceptType, null);
        }
        
        /// <remarks/>
        public void FormularyAlternativesWithDrugInfo2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugConcept, string drugConceptType, object userState) {
            if ((this.FormularyAlternativesWithDrugInfo2OperationCompleted == null)) {
                this.FormularyAlternativesWithDrugInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormularyAlternativesWithDrugInfo2OperationCompleted);
            }
            this.InvokeAsync("FormularyAlternativesWithDrugInfo2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType}, this.FormularyAlternativesWithDrugInfo2OperationCompleted, userState);
        }
        
        private void OnFormularyAlternativesWithDrugInfo2OperationCompleted(object arg) {
            if ((this.FormularyAlternativesWithDrugInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormularyAlternativesWithDrugInfo2Completed(this, new FormularyAlternativesWithDrugInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/SendMissingHealthplanInformatio" +
            "n", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SendMissingHealthplanInformation(Credentials credentials, AccountRequest accountRequest, string healthplanName, string healthplanId, string healthplanAddress1, string healthplanAddress2, string healthplanCity, string healthplanStateCode, string healthplanZip, string healthplanZip4, string healthplanPhoneNumber) {
            object[] results = this.Invoke("SendMissingHealthplanInformation", new object[] {
                        credentials,
                        accountRequest,
                        healthplanName,
                        healthplanId,
                        healthplanAddress1,
                        healthplanAddress2,
                        healthplanCity,
                        healthplanStateCode,
                        healthplanZip,
                        healthplanZip4,
                        healthplanPhoneNumber});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SendMissingHealthplanInformationAsync(Credentials credentials, AccountRequest accountRequest, string healthplanName, string healthplanId, string healthplanAddress1, string healthplanAddress2, string healthplanCity, string healthplanStateCode, string healthplanZip, string healthplanZip4, string healthplanPhoneNumber) {
            this.SendMissingHealthplanInformationAsync(credentials, accountRequest, healthplanName, healthplanId, healthplanAddress1, healthplanAddress2, healthplanCity, healthplanStateCode, healthplanZip, healthplanZip4, healthplanPhoneNumber, null);
        }
        
        /// <remarks/>
        public void SendMissingHealthplanInformationAsync(Credentials credentials, AccountRequest accountRequest, string healthplanName, string healthplanId, string healthplanAddress1, string healthplanAddress2, string healthplanCity, string healthplanStateCode, string healthplanZip, string healthplanZip4, string healthplanPhoneNumber, object userState) {
            if ((this.SendMissingHealthplanInformationOperationCompleted == null)) {
                this.SendMissingHealthplanInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMissingHealthplanInformationOperationCompleted);
            }
            this.InvokeAsync("SendMissingHealthplanInformation", new object[] {
                        credentials,
                        accountRequest,
                        healthplanName,
                        healthplanId,
                        healthplanAddress1,
                        healthplanAddress2,
                        healthplanCity,
                        healthplanStateCode,
                        healthplanZip,
                        healthplanZip4,
                        healthplanPhoneNumber}, this.SendMissingHealthplanInformationOperationCompleted, userState);
        }
        
        private void OnSendMissingHealthplanInformationOperationCompleted(object arg) {
            if ((this.SendMissingHealthplanInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMissingHealthplanInformationCompleted(this, new SendMissingHealthplanInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMDrugHistoryV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugHistoryDetailResult GetPBMDrugHistoryV2(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema) {
            object[] results = this.Invoke("GetPBMDrugHistoryV2", new object[] {
                        credentials,
                        accountRequest,
                        eligibilityTransactionId,
                        monthsPrior,
                        includeSchema});
            return ((DrugHistoryDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMDrugHistoryV2Async(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema) {
            this.GetPBMDrugHistoryV2Async(credentials, accountRequest, eligibilityTransactionId, monthsPrior, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMDrugHistoryV2Async(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema, object userState) {
            if ((this.GetPBMDrugHistoryV2OperationCompleted == null)) {
                this.GetPBMDrugHistoryV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMDrugHistoryV2OperationCompleted);
            }
            this.InvokeAsync("GetPBMDrugHistoryV2", new object[] {
                        credentials,
                        accountRequest,
                        eligibilityTransactionId,
                        monthsPrior,
                        includeSchema}, this.GetPBMDrugHistoryV2OperationCompleted, userState);
        }
        
        private void OnGetPBMDrugHistoryV2OperationCompleted(object arg) {
            if ((this.GetPBMDrugHistoryV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMDrugHistoryV2Completed(this, new GetPBMDrugHistoryV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMDrugHistoryV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugHistoryDetailV3Result GetPBMDrugHistoryV3(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema) {
            object[] results = this.Invoke("GetPBMDrugHistoryV3", new object[] {
                        credentials,
                        accountRequest,
                        eligibilityTransactionId,
                        monthsPrior,
                        includeSchema});
            return ((DrugHistoryDetailV3Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMDrugHistoryV3Async(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema) {
            this.GetPBMDrugHistoryV3Async(credentials, accountRequest, eligibilityTransactionId, monthsPrior, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMDrugHistoryV3Async(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema, object userState) {
            if ((this.GetPBMDrugHistoryV3OperationCompleted == null)) {
                this.GetPBMDrugHistoryV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMDrugHistoryV3OperationCompleted);
            }
            this.InvokeAsync("GetPBMDrugHistoryV3", new object[] {
                        credentials,
                        accountRequest,
                        eligibilityTransactionId,
                        monthsPrior,
                        includeSchema}, this.GetPBMDrugHistoryV3OperationCompleted, userState);
        }
        
        private void OnGetPBMDrugHistoryV3OperationCompleted(object arg) {
            if ((this.GetPBMDrugHistoryV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMDrugHistoryV3Completed(this, new GetPBMDrugHistoryV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetMostRecentDownloadUrl", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DownloadDetailResult GetMostRecentDownloadUrl(Credentials credentials, AccountRequest accountRequest, int desiredData) {
            object[] results = this.Invoke("GetMostRecentDownloadUrl", new object[] {
                        credentials,
                        accountRequest,
                        desiredData});
            return ((DownloadDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMostRecentDownloadUrlAsync(Credentials credentials, AccountRequest accountRequest, int desiredData) {
            this.GetMostRecentDownloadUrlAsync(credentials, accountRequest, desiredData, null);
        }
        
        /// <remarks/>
        public void GetMostRecentDownloadUrlAsync(Credentials credentials, AccountRequest accountRequest, int desiredData, object userState) {
            if ((this.GetMostRecentDownloadUrlOperationCompleted == null)) {
                this.GetMostRecentDownloadUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMostRecentDownloadUrlOperationCompleted);
            }
            this.InvokeAsync("GetMostRecentDownloadUrl", new object[] {
                        credentials,
                        accountRequest,
                        desiredData}, this.GetMostRecentDownloadUrlOperationCompleted, userState);
        }
        
        private void OnGetMostRecentDownloadUrlOperationCompleted(object arg) {
            if ((this.GetMostRecentDownloadUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMostRecentDownloadUrlCompleted(this, new GetMostRecentDownloadUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugDiseaseInteraction", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugDiseaseDetailResult DrugDiseaseInteraction(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType) {
            object[] results = this.Invoke("DrugDiseaseInteraction", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        diseaseList,
                        diseaseCodeType,
                        proposedMedications,
                        drugStandardType});
            return ((DrugDiseaseDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void DrugDiseaseInteractionAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType) {
            this.DrugDiseaseInteractionAsync(credentials, accountRequest, patientRequest, patientInformationRequester, diseaseList, diseaseCodeType, proposedMedications, drugStandardType, null);
        }
        
        /// <remarks/>
        public void DrugDiseaseInteractionAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType, object userState) {
            if ((this.DrugDiseaseInteractionOperationCompleted == null)) {
                this.DrugDiseaseInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugDiseaseInteractionOperationCompleted);
            }
            this.InvokeAsync("DrugDiseaseInteraction", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        diseaseList,
                        diseaseCodeType,
                        proposedMedications,
                        drugStandardType}, this.DrugDiseaseInteractionOperationCompleted, userState);
        }
        
        private void OnDrugDiseaseInteractionOperationCompleted(object arg) {
            if ((this.DrugDiseaseInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugDiseaseInteractionCompleted(this, new DrugDiseaseInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugDiseaseInteractionV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugDiseaseDetailResultV2 DrugDiseaseInteractionV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType) {
            object[] results = this.Invoke("DrugDiseaseInteractionV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        diseaseList,
                        diseaseCodeType,
                        proposedMedications,
                        drugStandardType});
            return ((DrugDiseaseDetailResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void DrugDiseaseInteractionV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType) {
            this.DrugDiseaseInteractionV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, diseaseList, diseaseCodeType, proposedMedications, drugStandardType, null);
        }
        
        /// <remarks/>
        public void DrugDiseaseInteractionV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType, object userState) {
            if ((this.DrugDiseaseInteractionV2OperationCompleted == null)) {
                this.DrugDiseaseInteractionV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugDiseaseInteractionV2OperationCompleted);
            }
            this.InvokeAsync("DrugDiseaseInteractionV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        diseaseList,
                        diseaseCodeType,
                        proposedMedications,
                        drugStandardType}, this.DrugDiseaseInteractionV2OperationCompleted, userState);
        }
        
        private void OnDrugDiseaseInteractionV2OperationCompleted(object arg) {
            if ((this.DrugDiseaseInteractionV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugDiseaseInteractionV2Completed(this, new DrugDiseaseInteractionV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/PharmacySearchV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResultV2 PharmacySearchV3(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string city, string state, string ncpdpID, string healthplanID, string healthplanTypeID, string eligibilityIndex) {
            object[] results = this.Invoke("PharmacySearchV3", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex});
            return ((PharmacyDetailResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void PharmacySearchV3Async(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string city, string state, string ncpdpID, string healthplanID, string healthplanTypeID, string eligibilityIndex) {
            this.PharmacySearchV3Async(credentials, accountRequest, postalCode, phoneNumber, streetName, pharmacyName, city, state, ncpdpID, healthplanID, healthplanTypeID, eligibilityIndex, null);
        }
        
        /// <remarks/>
        public void PharmacySearchV3Async(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string city, string state, string ncpdpID, string healthplanID, string healthplanTypeID, string eligibilityIndex, object userState) {
            if ((this.PharmacySearchV3OperationCompleted == null)) {
                this.PharmacySearchV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPharmacySearchV3OperationCompleted);
            }
            this.InvokeAsync("PharmacySearchV3", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex}, this.PharmacySearchV3OperationCompleted, userState);
        }
        
        private void OnPharmacySearchV3OperationCompleted(object arg) {
            if ((this.PharmacySearchV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PharmacySearchV3Completed(this, new PharmacySearchV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/PharmacySearchV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResultV4 PharmacySearchV4(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4) {
            object[] results = this.Invoke("PharmacySearchV4", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        pharmacyType,
                        open24Hours,
                        specialtyID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4});
            return ((PharmacyDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void PharmacySearchV4Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4) {
            this.PharmacySearchV4Async(credentials, accountRequest, postalCode, phoneNumber, streetName, pharmacyName, city, state, ncpdpID, healthplanID, healthplanTypeID, eligibilityIndex, pharmacyType, open24Hours, specialtyID, extraQuery1, extraQuery2, extraQuery3, extraQuery4, null);
        }
        
        /// <remarks/>
        public void PharmacySearchV4Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4, 
                    object userState) {
            if ((this.PharmacySearchV4OperationCompleted == null)) {
                this.PharmacySearchV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPharmacySearchV4OperationCompleted);
            }
            this.InvokeAsync("PharmacySearchV4", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        pharmacyType,
                        open24Hours,
                        specialtyID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4}, this.PharmacySearchV4OperationCompleted, userState);
        }
        
        private void OnPharmacySearchV4OperationCompleted(object arg) {
            if ((this.PharmacySearchV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PharmacySearchV4Completed(this, new PharmacySearchV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/PharmacySearchV5", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResultV5 PharmacySearchV5(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4) {
            object[] results = this.Invoke("PharmacySearchV5", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        pharmacyType,
                        open24Hours,
                        specialtyID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4});
            return ((PharmacyDetailResultV5)(results[0]));
        }
        
        /// <remarks/>
        public void PharmacySearchV5Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4) {
            this.PharmacySearchV5Async(credentials, accountRequest, postalCode, phoneNumber, streetName, pharmacyName, city, state, ncpdpID, healthplanID, healthplanTypeID, eligibilityIndex, pharmacyType, open24Hours, specialtyID, extraQuery1, extraQuery2, extraQuery3, extraQuery4, null);
        }
        
        /// <remarks/>
        public void PharmacySearchV5Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4, 
                    object userState) {
            if ((this.PharmacySearchV5OperationCompleted == null)) {
                this.PharmacySearchV5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPharmacySearchV5OperationCompleted);
            }
            this.InvokeAsync("PharmacySearchV5", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        pharmacyType,
                        open24Hours,
                        specialtyID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4}, this.PharmacySearchV5OperationCompleted, userState);
        }
        
        private void OnPharmacySearchV5OperationCompleted(object arg) {
            if ((this.PharmacySearchV5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PharmacySearchV5Completed(this, new PharmacySearchV5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetLocationPharmacies", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResultV4 GetLocationPharmacies(Credentials credentials, AccountRequest accountRequest, string locationID, string extraQuery1, string extraQuery2, string extraQuery3, string extraQuery4) {
            object[] results = this.Invoke("GetLocationPharmacies", new object[] {
                        credentials,
                        accountRequest,
                        locationID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4});
            return ((PharmacyDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationPharmaciesAsync(Credentials credentials, AccountRequest accountRequest, string locationID, string extraQuery1, string extraQuery2, string extraQuery3, string extraQuery4) {
            this.GetLocationPharmaciesAsync(credentials, accountRequest, locationID, extraQuery1, extraQuery2, extraQuery3, extraQuery4, null);
        }
        
        /// <remarks/>
        public void GetLocationPharmaciesAsync(Credentials credentials, AccountRequest accountRequest, string locationID, string extraQuery1, string extraQuery2, string extraQuery3, string extraQuery4, object userState) {
            if ((this.GetLocationPharmaciesOperationCompleted == null)) {
                this.GetLocationPharmaciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationPharmaciesOperationCompleted);
            }
            this.InvokeAsync("GetLocationPharmacies", new object[] {
                        credentials,
                        accountRequest,
                        locationID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4}, this.GetLocationPharmaciesOperationCompleted, userState);
        }
        
        private void OnGetLocationPharmaciesOperationCompleted(object arg) {
            if ((this.GetLocationPharmaciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationPharmaciesCompleted(this, new GetLocationPharmaciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugSearchWithFormularyWithFavo" +
            "ritesV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugFormularyFavoriteDetailResult DrugSearchWithFormularyWithFavoritesV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugName, string includeObsolete, string searchBrandGeneric, string searchRxOTC, string searchDrugSupply, string locationId, string providerId) {
            object[] results = this.Invoke("DrugSearchWithFormularyWithFavoritesV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugName,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId});
            return ((DrugFormularyFavoriteDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugName, string includeObsolete, string searchBrandGeneric, string searchRxOTC, string searchDrugSupply, string locationId, string providerId) {
            this.DrugSearchWithFormularyWithFavoritesV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanID, healthplanTypeID, eligibilityIndex, drugName, includeObsolete, searchBrandGeneric, searchRxOTC, searchDrugSupply, locationId, providerId, null);
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugName, string includeObsolete, string searchBrandGeneric, string searchRxOTC, string searchDrugSupply, string locationId, string providerId, object userState) {
            if ((this.DrugSearchWithFormularyWithFavoritesV2OperationCompleted == null)) {
                this.DrugSearchWithFormularyWithFavoritesV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugSearchWithFormularyWithFavoritesV2OperationCompleted);
            }
            this.InvokeAsync("DrugSearchWithFormularyWithFavoritesV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugName,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId}, this.DrugSearchWithFormularyWithFavoritesV2OperationCompleted, userState);
        }
        
        private void OnDrugSearchWithFormularyWithFavoritesV2OperationCompleted(object arg) {
            if ((this.DrugSearchWithFormularyWithFavoritesV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugSearchWithFormularyWithFavoritesV2Completed(this, new DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugSearchWithFormularyWithFavo" +
            "ritesV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DrugSearchWithFormularyWithFavoritesV3(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    PatientRequest patientRequest, 
                    PatientInformationRequester patientInformationRequester, 
                    string healthplanId, 
                    string healthplanTypeId, 
                    string eligibilityIndex, 
                    string drugName, 
                    string drugTypeId, 
                    string includeObsolete, 
                    string searchBrandGeneric, 
                    string searchRxOTC, 
                    string searchDrugSupply, 
                    string locationId, 
                    string providerId, 
                    string includeCopay, 
                    string includeSchema) {
            object[] results = this.Invoke("DrugSearchWithFormularyWithFavoritesV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanId,
                        healthplanTypeId,
                        eligibilityIndex,
                        drugName,
                        drugTypeId,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId,
                        includeCopay,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV3Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    PatientRequest patientRequest, 
                    PatientInformationRequester patientInformationRequester, 
                    string healthplanId, 
                    string healthplanTypeId, 
                    string eligibilityIndex, 
                    string drugName, 
                    string drugTypeId, 
                    string includeObsolete, 
                    string searchBrandGeneric, 
                    string searchRxOTC, 
                    string searchDrugSupply, 
                    string locationId, 
                    string providerId, 
                    string includeCopay, 
                    string includeSchema) {
            this.DrugSearchWithFormularyWithFavoritesV3Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanId, healthplanTypeId, eligibilityIndex, drugName, drugTypeId, includeObsolete, searchBrandGeneric, searchRxOTC, searchDrugSupply, locationId, providerId, includeCopay, includeSchema, null);
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV3Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    PatientRequest patientRequest, 
                    PatientInformationRequester patientInformationRequester, 
                    string healthplanId, 
                    string healthplanTypeId, 
                    string eligibilityIndex, 
                    string drugName, 
                    string drugTypeId, 
                    string includeObsolete, 
                    string searchBrandGeneric, 
                    string searchRxOTC, 
                    string searchDrugSupply, 
                    string locationId, 
                    string providerId, 
                    string includeCopay, 
                    string includeSchema, 
                    object userState) {
            if ((this.DrugSearchWithFormularyWithFavoritesV3OperationCompleted == null)) {
                this.DrugSearchWithFormularyWithFavoritesV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugSearchWithFormularyWithFavoritesV3OperationCompleted);
            }
            this.InvokeAsync("DrugSearchWithFormularyWithFavoritesV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanId,
                        healthplanTypeId,
                        eligibilityIndex,
                        drugName,
                        drugTypeId,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId,
                        includeCopay,
                        includeSchema}, this.DrugSearchWithFormularyWithFavoritesV3OperationCompleted, userState);
        }
        
        private void OnDrugSearchWithFormularyWithFavoritesV3OperationCompleted(object arg) {
            if ((this.DrugSearchWithFormularyWithFavoritesV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugSearchWithFormularyWithFavoritesV3Completed(this, new DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/HealthplanSearchV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HealthplanDetailResult HealthplanSearchV2(Credentials credentials, AccountRequest accountRequest, string healthplan, string state, string searchType, string resultOrder) {
            object[] results = this.Invoke("HealthplanSearchV2", new object[] {
                        credentials,
                        accountRequest,
                        healthplan,
                        state,
                        searchType,
                        resultOrder});
            return ((HealthplanDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void HealthplanSearchV2Async(Credentials credentials, AccountRequest accountRequest, string healthplan, string state, string searchType, string resultOrder) {
            this.HealthplanSearchV2Async(credentials, accountRequest, healthplan, state, searchType, resultOrder, null);
        }
        
        /// <remarks/>
        public void HealthplanSearchV2Async(Credentials credentials, AccountRequest accountRequest, string healthplan, string state, string searchType, string resultOrder, object userState) {
            if ((this.HealthplanSearchV2OperationCompleted == null)) {
                this.HealthplanSearchV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnHealthplanSearchV2OperationCompleted);
            }
            this.InvokeAsync("HealthplanSearchV2", new object[] {
                        credentials,
                        accountRequest,
                        healthplan,
                        state,
                        searchType,
                        resultOrder}, this.HealthplanSearchV2OperationCompleted, userState);
        }
        
        private void OnHealthplanSearchV2OperationCompleted(object arg) {
            if ((this.HealthplanSearchV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HealthplanSearchV2Completed(this, new HealthplanSearchV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/FormularyCoverageV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FormularyCoverageDetailResultV3 FormularyCoverageV3(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string[] drugConcept, string drugConceptType) {
            object[] results = this.Invoke("FormularyCoverageV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType});
            return ((FormularyCoverageDetailResultV3)(results[0]));
        }
        
        /// <remarks/>
        public void FormularyCoverageV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string[] drugConcept, string drugConceptType) {
            this.FormularyCoverageV3Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanID, healthplanTypeID, eligibilityIndex, drugConcept, drugConceptType, null);
        }
        
        /// <remarks/>
        public void FormularyCoverageV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string[] drugConcept, string drugConceptType, object userState) {
            if ((this.FormularyCoverageV3OperationCompleted == null)) {
                this.FormularyCoverageV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormularyCoverageV3OperationCompleted);
            }
            this.InvokeAsync("FormularyCoverageV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType}, this.FormularyCoverageV3OperationCompleted, userState);
        }
        
        private void OnFormularyCoverageV3OperationCompleted(object arg) {
            if ((this.FormularyCoverageV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormularyCoverageV3Completed(this, new FormularyCoverageV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ReportPrescribingCount", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ReportPrescribingCount(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportType, string reportStartDate, string reportEndDate, string prescriptionType, string prescriptionCount) {
            object[] results = this.Invoke("ReportPrescribingCount", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        reportType,
                        reportStartDate,
                        reportEndDate,
                        prescriptionType,
                        prescriptionCount});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ReportPrescribingCountAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportType, string reportStartDate, string reportEndDate, string prescriptionType, string prescriptionCount) {
            this.ReportPrescribingCountAsync(credentials, accountRequest, patientInformationRequester, reportType, reportStartDate, reportEndDate, prescriptionType, prescriptionCount, null);
        }
        
        /// <remarks/>
        public void ReportPrescribingCountAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportType, string reportStartDate, string reportEndDate, string prescriptionType, string prescriptionCount, object userState) {
            if ((this.ReportPrescribingCountOperationCompleted == null)) {
                this.ReportPrescribingCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportPrescribingCountOperationCompleted);
            }
            this.InvokeAsync("ReportPrescribingCount", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        reportType,
                        reportStartDate,
                        reportEndDate,
                        prescriptionType,
                        prescriptionCount}, this.ReportPrescribingCountOperationCompleted, userState);
        }
        
        private void OnReportPrescribingCountOperationCompleted(object arg) {
            if ((this.ReportPrescribingCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportPrescribingCountCompleted(this, new ReportPrescribingCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetCounselingMessages", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CounselingMessageDetailResult GetCounselingMessages(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType) {
            object[] results = this.Invoke("GetCounselingMessages", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType});
            return ((CounselingMessageDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetCounselingMessagesAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType) {
            this.GetCounselingMessagesAsync(credentials, accountRequest, patientInformationRequester, drugConcept, drugStandardType, null);
        }
        
        /// <remarks/>
        public void GetCounselingMessagesAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, object userState) {
            if ((this.GetCounselingMessagesOperationCompleted == null)) {
                this.GetCounselingMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCounselingMessagesOperationCompleted);
            }
            this.InvokeAsync("GetCounselingMessages", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType}, this.GetCounselingMessagesOperationCompleted, userState);
        }
        
        private void OnGetCounselingMessagesOperationCompleted(object arg) {
            if ((this.GetCounselingMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCounselingMessagesCompleted(this, new GetCounselingMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetSideEffects", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetSideEffects(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, string diseaseDescriptionType, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetSideEffects", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType,
                        diseaseDescriptionType,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetSideEffectsAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, string diseaseDescriptionType, string includeSchema, string sortOrder) {
            this.GetSideEffectsAsync(credentials, accountRequest, patientRequest, patientInformationRequester, drugConcept, drugStandardType, diseaseDescriptionType, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetSideEffectsAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, string diseaseDescriptionType, string includeSchema, string sortOrder, object userState) {
            if ((this.GetSideEffectsOperationCompleted == null)) {
                this.GetSideEffectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSideEffectsOperationCompleted);
            }
            this.InvokeAsync("GetSideEffects", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType,
                        diseaseDescriptionType,
                        includeSchema,
                        sortOrder}, this.GetSideEffectsOperationCompleted, userState);
        }
        
        private void OnGetSideEffectsOperationCompleted(object arg) {
            if ((this.GetSideEffectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSideEffectsCompleted(this, new GetSideEffectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAccountStatusV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountStatusDetailV2Result GetAccountStatusV2(Credentials credentials, AccountRequest accountRequest, string locationId, string userType, string userId) {
            object[] results = this.Invoke("GetAccountStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        userType,
                        userId});
            return ((AccountStatusDetailV2Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatusV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string userType, string userId) {
            this.GetAccountStatusV2Async(credentials, accountRequest, locationId, userType, userId, null);
        }
        
        /// <remarks/>
        public void GetAccountStatusV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string userType, string userId, object userState) {
            if ((this.GetAccountStatusV2OperationCompleted == null)) {
                this.GetAccountStatusV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatusV2OperationCompleted);
            }
            this.InvokeAsync("GetAccountStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        userType,
                        userId}, this.GetAccountStatusV2OperationCompleted, userState);
        }
        
        private void OnGetAccountStatusV2OperationCompleted(object arg) {
            if ((this.GetAccountStatusV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatusV2Completed(this, new GetAccountStatusV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAccountStatusDetail", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetAccountStatusDetail(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string statusSectionType, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetAccountStatusDetail", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        statusSectionType,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatusDetailAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string statusSectionType, string includeSchema, string sortOrder) {
            this.GetAccountStatusDetailAsync(credentials, accountRequest, locationId, licensedPrescriberId, statusSectionType, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetAccountStatusDetailAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string statusSectionType, string includeSchema, string sortOrder, object userState) {
            if ((this.GetAccountStatusDetailOperationCompleted == null)) {
                this.GetAccountStatusDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatusDetailOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatusDetail", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        statusSectionType,
                        includeSchema,
                        sortOrder}, this.GetAccountStatusDetailOperationCompleted, userState);
        }
        
        private void OnGetAccountStatusDetailOperationCompleted(object arg) {
            if ((this.GetAccountStatusDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatusDetailCompleted(this, new GetAccountStatusDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMEligibilityV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EligibilityDetailResult GetPBMEligibilityV2(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            object[] results = this.Invoke("GetPBMEligibilityV2", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema});
            return ((EligibilityDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV2Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            this.GetPBMEligibilityV2Async(credentials, accountRequest, patientInformationRequester, xmlIn, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV2Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema, object userState) {
            if ((this.GetPBMEligibilityV2OperationCompleted == null)) {
                this.GetPBMEligibilityV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMEligibilityV2OperationCompleted);
            }
            this.InvokeAsync("GetPBMEligibilityV2", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema}, this.GetPBMEligibilityV2OperationCompleted, userState);
        }
        
        private void OnGetPBMEligibilityV2OperationCompleted(object arg) {
            if ((this.GetPBMEligibilityV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMEligibilityV2Completed(this, new GetPBMEligibilityV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMEligibilityV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EligibilityDetailResultV3 GetPBMEligibilityV3(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            object[] results = this.Invoke("GetPBMEligibilityV3", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema});
            return ((EligibilityDetailResultV3)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV3Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            this.GetPBMEligibilityV3Async(credentials, accountRequest, patientInformationRequester, xmlIn, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV3Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema, object userState) {
            if ((this.GetPBMEligibilityV3OperationCompleted == null)) {
                this.GetPBMEligibilityV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMEligibilityV3OperationCompleted);
            }
            this.InvokeAsync("GetPBMEligibilityV3", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema}, this.GetPBMEligibilityV3OperationCompleted, userState);
        }
        
        private void OnGetPBMEligibilityV3OperationCompleted(object arg) {
            if ((this.GetPBMEligibilityV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMEligibilityV3Completed(this, new GetPBMEligibilityV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPrescriptionTransmissionStat" +
            "usV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransmissionSummaryResult GetPrescriptionTransmissionStatusV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, PrescriptionTransmissionQueryType queryType, string queryId) {
            object[] results = this.Invoke("GetPrescriptionTransmissionStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryType,
                        queryId});
            return ((TransmissionSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, PrescriptionTransmissionQueryType queryType, string queryId) {
            this.GetPrescriptionTransmissionStatusV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, queryType, queryId, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, PrescriptionTransmissionQueryType queryType, string queryId, object userState) {
            if ((this.GetPrescriptionTransmissionStatusV2OperationCompleted == null)) {
                this.GetPrescriptionTransmissionStatusV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionTransmissionStatusV2OperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionTransmissionStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryType,
                        queryId}, this.GetPrescriptionTransmissionStatusV2OperationCompleted, userState);
        }
        
        private void OnGetPrescriptionTransmissionStatusV2OperationCompleted(object arg) {
            if ((this.GetPrescriptionTransmissionStatusV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionTransmissionStatusV2Completed(this, new GetPrescriptionTransmissionStatusV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetSubmittedMessageTransactionS" +
            "tatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageTransactionStatusResult GetSubmittedMessageTransactionStatus(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string messageTransactionId, string messageTransactionSource) {
            object[] results = this.Invoke("GetSubmittedMessageTransactionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        messageTransactionId,
                        messageTransactionSource});
            return ((MessageTransactionStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubmittedMessageTransactionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string messageTransactionId, string messageTransactionSource) {
            this.GetSubmittedMessageTransactionStatusAsync(credentials, accountRequest, patientRequest, patientInformationRequester, messageTransactionId, messageTransactionSource, null);
        }
        
        /// <remarks/>
        public void GetSubmittedMessageTransactionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string messageTransactionId, string messageTransactionSource, object userState) {
            if ((this.GetSubmittedMessageTransactionStatusOperationCompleted == null)) {
                this.GetSubmittedMessageTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubmittedMessageTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("GetSubmittedMessageTransactionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        messageTransactionId,
                        messageTransactionSource}, this.GetSubmittedMessageTransactionStatusOperationCompleted, userState);
        }
        
        private void OnGetSubmittedMessageTransactionStatusOperationCompleted(object arg) {
            if ((this.GetSubmittedMessageTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubmittedMessageTransactionStatusCompleted(this, new GetSubmittedMessageTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugAllergyInteractionV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugAllergyDetailResultV2 DrugAllergyInteractionV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] allergies, string[] proposedMedications, string drugStandardType) {
            object[] results = this.Invoke("DrugAllergyInteractionV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        allergies,
                        proposedMedications,
                        drugStandardType});
            return ((DrugAllergyDetailResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void DrugAllergyInteractionV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] allergies, string[] proposedMedications, string drugStandardType) {
            this.DrugAllergyInteractionV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, allergies, proposedMedications, drugStandardType, null);
        }
        
        /// <remarks/>
        public void DrugAllergyInteractionV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] allergies, string[] proposedMedications, string drugStandardType, object userState) {
            if ((this.DrugAllergyInteractionV2OperationCompleted == null)) {
                this.DrugAllergyInteractionV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugAllergyInteractionV2OperationCompleted);
            }
            this.InvokeAsync("DrugAllergyInteractionV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        allergies,
                        proposedMedications,
                        drugStandardType}, this.DrugAllergyInteractionV2OperationCompleted, userState);
        }
        
        private void OnDrugAllergyInteractionV2OperationCompleted(object arg) {
            if ((this.DrugAllergyInteractionV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugAllergyInteractionV2Completed(this, new DrugAllergyInteractionV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ResolveFailedPrescriptionTransm" +
            "ission", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ResolveFailedPrescriptionTransmission(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string prescriptionType, string transactionId) {
            object[] results = this.Invoke("ResolveFailedPrescriptionTransmission", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        prescriptionType,
                        transactionId});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveFailedPrescriptionTransmissionAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string prescriptionType, string transactionId) {
            this.ResolveFailedPrescriptionTransmissionAsync(credentials, accountRequest, patientInformationRequester, prescriptionType, transactionId, null);
        }
        
        /// <remarks/>
        public void ResolveFailedPrescriptionTransmissionAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string prescriptionType, string transactionId, object userState) {
            if ((this.ResolveFailedPrescriptionTransmissionOperationCompleted == null)) {
                this.ResolveFailedPrescriptionTransmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveFailedPrescriptionTransmissionOperationCompleted);
            }
            this.InvokeAsync("ResolveFailedPrescriptionTransmission", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        prescriptionType,
                        transactionId}, this.ResolveFailedPrescriptionTransmissionOperationCompleted, userState);
        }
        
        private void OnResolveFailedPrescriptionTransmissionOperationCompleted(object arg) {
            if ((this.ResolveFailedPrescriptionTransmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveFailedPrescriptionTransmissionCompleted(this, new ResolveFailedPrescriptionTransmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetMeaningfulUsePatientEncounte" +
            "rInfo", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetMeaningfulUsePatientEncounterInfo(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string encounterId, string includeSchema) {
            object[] results = this.Invoke("GetMeaningfulUsePatientEncounterInfo", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        encounterId,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeaningfulUsePatientEncounterInfoAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string encounterId, string includeSchema) {
            this.GetMeaningfulUsePatientEncounterInfoAsync(credentials, accountRequest, patientRequest, patientInformationRequester, encounterId, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetMeaningfulUsePatientEncounterInfoAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string encounterId, string includeSchema, object userState) {
            if ((this.GetMeaningfulUsePatientEncounterInfoOperationCompleted == null)) {
                this.GetMeaningfulUsePatientEncounterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeaningfulUsePatientEncounterInfoOperationCompleted);
            }
            this.InvokeAsync("GetMeaningfulUsePatientEncounterInfo", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        encounterId,
                        includeSchema}, this.GetMeaningfulUsePatientEncounterInfoOperationCompleted, userState);
        }
        
        private void OnGetMeaningfulUsePatientEncounterInfoOperationCompleted(object arg) {
            if ((this.GetMeaningfulUsePatientEncounterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeaningfulUsePatientEncounterInfoCompleted(this, new GetMeaningfulUsePatientEncounterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DoseCheck", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DoseCheck(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugId, string drugTypeId, string birthDateCCYYMMDD, string gender, string diagnosis, string doseType, string dose, string doseUOM, string weightInKg, string includeSchema) {
            object[] results = this.Invoke("DoseCheck", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugId,
                        drugTypeId,
                        birthDateCCYYMMDD,
                        gender,
                        diagnosis,
                        doseType,
                        dose,
                        doseUOM,
                        weightInKg,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DoseCheckAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugId, string drugTypeId, string birthDateCCYYMMDD, string gender, string diagnosis, string doseType, string dose, string doseUOM, string weightInKg, string includeSchema) {
            this.DoseCheckAsync(credentials, accountRequest, patientRequest, patientInformationRequester, drugId, drugTypeId, birthDateCCYYMMDD, gender, diagnosis, doseType, dose, doseUOM, weightInKg, includeSchema, null);
        }
        
        /// <remarks/>
        public void DoseCheckAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugId, string drugTypeId, string birthDateCCYYMMDD, string gender, string diagnosis, string doseType, string dose, string doseUOM, string weightInKg, string includeSchema, object userState) {
            if ((this.DoseCheckOperationCompleted == null)) {
                this.DoseCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoseCheckOperationCompleted);
            }
            this.InvokeAsync("DoseCheck", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugId,
                        drugTypeId,
                        birthDateCCYYMMDD,
                        gender,
                        diagnosis,
                        doseType,
                        dose,
                        doseUOM,
                        weightInKg,
                        includeSchema}, this.DoseCheckOperationCompleted, userState);
        }
        
        private void OnDoseCheckOperationCompleted(object arg) {
            if ((this.DoseCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoseCheckCompleted(this, new DoseCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/SendToRegistry", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegistryDetailResult SendToRegistry(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("SendToRegistry", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((RegistryDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendToRegistryAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.SendToRegistryAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void SendToRegistryAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.SendToRegistryOperationCompleted == null)) {
                this.SendToRegistryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToRegistryOperationCompleted);
            }
            this.InvokeAsync("SendToRegistry", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.SendToRegistryOperationCompleted, userState);
        }
        
        private void OnSendToRegistryOperationCompleted(object arg) {
            if ((this.SendToRegistryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToRegistryCompleted(this, new SendToRegistryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/RegisterLicensedPrescriberV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegisterPrescriberDetailV2Result RegisterLicensedPrescriberV2(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("RegisterLicensedPrescriberV2", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((RegisterPrescriberDetailV2Result)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterLicensedPrescriberV2Async(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.RegisterLicensedPrescriberV2Async(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void RegisterLicensedPrescriberV2Async(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.RegisterLicensedPrescriberV2OperationCompleted == null)) {
                this.RegisterLicensedPrescriberV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterLicensedPrescriberV2OperationCompleted);
            }
            this.InvokeAsync("RegisterLicensedPrescriberV2", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.RegisterLicensedPrescriberV2OperationCompleted, userState);
        }
        
        private void OnRegisterLicensedPrescriberV2OperationCompleted(object arg) {
            if ((this.RegisterLicensedPrescriberV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterLicensedPrescriberV2Completed(this, new RegisterLicensedPrescriberV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/LicensedPrescriberStatusV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegisterPrescriberDetailV2Result LicensedPrescriberStatusV2(Credentials credentials, AccountRequest accountRequest, string licensedPrescriberId, string locationId) {
            object[] results = this.Invoke("LicensedPrescriberStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        licensedPrescriberId,
                        locationId});
            return ((RegisterPrescriberDetailV2Result)(results[0]));
        }
        
        /// <remarks/>
        public void LicensedPrescriberStatusV2Async(Credentials credentials, AccountRequest accountRequest, string licensedPrescriberId, string locationId) {
            this.LicensedPrescriberStatusV2Async(credentials, accountRequest, licensedPrescriberId, locationId, null);
        }
        
        /// <remarks/>
        public void LicensedPrescriberStatusV2Async(Credentials credentials, AccountRequest accountRequest, string licensedPrescriberId, string locationId, object userState) {
            if ((this.LicensedPrescriberStatusV2OperationCompleted == null)) {
                this.LicensedPrescriberStatusV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLicensedPrescriberStatusV2OperationCompleted);
            }
            this.InvokeAsync("LicensedPrescriberStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        licensedPrescriberId,
                        locationId}, this.LicensedPrescriberStatusV2OperationCompleted, userState);
        }
        
        private void OnLicensedPrescriberStatusV2OperationCompleted(object arg) {
            if ((this.LicensedPrescriberStatusV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LicensedPrescriberStatusV2Completed(this, new LicensedPrescriberStatusV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/RegisterOrganization", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RegisterOrganization(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("RegisterOrganization", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterOrganizationAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.RegisterOrganizationAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void RegisterOrganizationAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.RegisterOrganizationOperationCompleted == null)) {
                this.RegisterOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOrganizationOperationCompleted);
            }
            this.InvokeAsync("RegisterOrganization", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.RegisterOrganizationOperationCompleted, userState);
        }
        
        private void OnRegisterOrganizationOperationCompleted(object arg) {
            if ((this.RegisterOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterOrganizationCompleted(this, new RegisterOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CreatePatientPortalLogin", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CreatePatientPortalLogin(Credentials credentials, AccountRequest accountRequest, string xmlIn, string portalUserType, string emailAddress, string password, string agentName, string oneTimePassword) {
            object[] results = this.Invoke("CreatePatientPortalLogin", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn,
                        portalUserType,
                        emailAddress,
                        password,
                        agentName,
                        oneTimePassword});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePatientPortalLoginAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, string portalUserType, string emailAddress, string password, string agentName, string oneTimePassword) {
            this.CreatePatientPortalLoginAsync(credentials, accountRequest, xmlIn, portalUserType, emailAddress, password, agentName, oneTimePassword, null);
        }
        
        /// <remarks/>
        public void CreatePatientPortalLoginAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, string portalUserType, string emailAddress, string password, string agentName, string oneTimePassword, object userState) {
            if ((this.CreatePatientPortalLoginOperationCompleted == null)) {
                this.CreatePatientPortalLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePatientPortalLoginOperationCompleted);
            }
            this.InvokeAsync("CreatePatientPortalLogin", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn,
                        portalUserType,
                        emailAddress,
                        password,
                        agentName,
                        oneTimePassword}, this.CreatePatientPortalLoginOperationCompleted, userState);
        }
        
        private void OnCreatePatientPortalLoginOperationCompleted(object arg) {
            if ((this.CreatePatientPortalLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePatientPortalLoginCompleted(this, new CreatePatientPortalLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRxBatchStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxBatchPrescriptionResult GetRxBatchStatus(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            object[] results = this.Invoke("GetRxBatchStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn});
            return ((RxBatchPrescriptionResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxBatchStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            this.GetRxBatchStatusAsync(credentials, accountRequest, rxBatchTransactionGuidIn, null);
        }
        
        /// <remarks/>
        public void GetRxBatchStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, object userState) {
            if ((this.GetRxBatchStatusOperationCompleted == null)) {
                this.GetRxBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxBatchStatusOperationCompleted);
            }
            this.InvokeAsync("GetRxBatchStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn}, this.GetRxBatchStatusOperationCompleted, userState);
        }
        
        private void OnGetRxBatchStatusOperationCompleted(object arg) {
            if ((this.GetRxBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxBatchStatusCompleted(this, new GetRxBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDigitalSigningBatchStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DigitalSigningBatchResult GetDigitalSigningBatchStatus(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            object[] results = this.Invoke("GetDigitalSigningBatchStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn});
            return ((DigitalSigningBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDigitalSigningBatchStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            this.GetDigitalSigningBatchStatusAsync(credentials, accountRequest, rxBatchTransactionGuidIn, null);
        }
        
        /// <remarks/>
        public void GetDigitalSigningBatchStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, object userState) {
            if ((this.GetDigitalSigningBatchStatusOperationCompleted == null)) {
                this.GetDigitalSigningBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigitalSigningBatchStatusOperationCompleted);
            }
            this.InvokeAsync("GetDigitalSigningBatchStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn}, this.GetDigitalSigningBatchStatusOperationCompleted, userState);
        }
        
        private void OnGetDigitalSigningBatchStatusOperationCompleted(object arg) {
            if ((this.GetDigitalSigningBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigitalSigningBatchStatusCompleted(this, new GetDigitalSigningBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDigitallySignedMessage", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DigitalSigningBatchResult GetDigitallySignedMessage(Credentials credentials, AccountRequest accountRequest, string externalDigitalSigningMessageId, DigitalSigningReturnDetail digitalSigningReturnDetail) {
            object[] results = this.Invoke("GetDigitallySignedMessage", new object[] {
                        credentials,
                        accountRequest,
                        externalDigitalSigningMessageId,
                        digitalSigningReturnDetail});
            return ((DigitalSigningBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDigitallySignedMessageAsync(Credentials credentials, AccountRequest accountRequest, string externalDigitalSigningMessageId, DigitalSigningReturnDetail digitalSigningReturnDetail) {
            this.GetDigitallySignedMessageAsync(credentials, accountRequest, externalDigitalSigningMessageId, digitalSigningReturnDetail, null);
        }
        
        /// <remarks/>
        public void GetDigitallySignedMessageAsync(Credentials credentials, AccountRequest accountRequest, string externalDigitalSigningMessageId, DigitalSigningReturnDetail digitalSigningReturnDetail, object userState) {
            if ((this.GetDigitallySignedMessageOperationCompleted == null)) {
                this.GetDigitallySignedMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigitallySignedMessageOperationCompleted);
            }
            this.InvokeAsync("GetDigitallySignedMessage", new object[] {
                        credentials,
                        accountRequest,
                        externalDigitalSigningMessageId,
                        digitalSigningReturnDetail}, this.GetDigitallySignedMessageOperationCompleted, userState);
        }
        
        private void OnGetDigitallySignedMessageOperationCompleted(object arg) {
            if ((this.GetDigitallySignedMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigitallySignedMessageCompleted(this, new GetDigitallySignedMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CreateRxBatch", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxBatchPrescriptionResult CreateRxBatch(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("CreateRxBatch", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((RxBatchPrescriptionResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRxBatchAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.CreateRxBatchAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void CreateRxBatchAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.CreateRxBatchOperationCompleted == null)) {
                this.CreateRxBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRxBatchOperationCompleted);
            }
            this.InvokeAsync("CreateRxBatch", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.CreateRxBatchOperationCompleted, userState);
        }
        
        private void OnCreateRxBatchOperationCompleted(object arg) {
            if ((this.CreateRxBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRxBatchCompleted(this, new CreateRxBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CreateDigitalSigningBatch", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DigitalSigningBatchResult CreateDigitalSigningBatch(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("CreateDigitalSigningBatch", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((DigitalSigningBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDigitalSigningBatchAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.CreateDigitalSigningBatchAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void CreateDigitalSigningBatchAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.CreateDigitalSigningBatchOperationCompleted == null)) {
                this.CreateDigitalSigningBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDigitalSigningBatchOperationCompleted);
            }
            this.InvokeAsync("CreateDigitalSigningBatch", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.CreateDigitalSigningBatchOperationCompleted, userState);
        }
        
        private void OnCreateDigitalSigningBatchOperationCompleted(object arg) {
            if ((this.CreateDigitalSigningBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDigitalSigningBatchCompleted(this, new CreateDigitalSigningBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CreateRenewalBatch", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxBatchRenewalResult CreateRenewalBatch(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("CreateRenewalBatch", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((RxBatchRenewalResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRenewalBatchAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.CreateRenewalBatchAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void CreateRenewalBatchAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.CreateRenewalBatchOperationCompleted == null)) {
                this.CreateRenewalBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRenewalBatchOperationCompleted);
            }
            this.InvokeAsync("CreateRenewalBatch", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.CreateRenewalBatchOperationCompleted, userState);
        }
        
        private void OnCreateRenewalBatchOperationCompleted(object arg) {
            if ((this.CreateRenewalBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRenewalBatchCompleted(this, new CreateRenewalBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalBatchStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxBatchRenewalResult GetRenewalBatchStatus(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            object[] results = this.Invoke("GetRenewalBatchStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn});
            return ((RxBatchRenewalResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalBatchStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            this.GetRenewalBatchStatusAsync(credentials, accountRequest, rxBatchTransactionGuidIn, null);
        }
        
        /// <remarks/>
        public void GetRenewalBatchStatusAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, object userState) {
            if ((this.GetRenewalBatchStatusOperationCompleted == null)) {
                this.GetRenewalBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalBatchStatusOperationCompleted);
            }
            this.InvokeAsync("GetRenewalBatchStatus", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn}, this.GetRenewalBatchStatusOperationCompleted, userState);
        }
        
        private void OnGetRenewalBatchStatusOperationCompleted(object arg) {
            if ((this.GetRenewalBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalBatchStatusCompleted(this, new GetRenewalBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalBatchStatusV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxBatchRenewalResultV2 GetRenewalBatchStatusV2(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            object[] results = this.Invoke("GetRenewalBatchStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn});
            return ((RxBatchRenewalResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalBatchStatusV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn) {
            this.GetRenewalBatchStatusV2Async(credentials, accountRequest, rxBatchTransactionGuidIn, null);
        }
        
        /// <remarks/>
        public void GetRenewalBatchStatusV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, object userState) {
            if ((this.GetRenewalBatchStatusV2OperationCompleted == null)) {
                this.GetRenewalBatchStatusV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalBatchStatusV2OperationCompleted);
            }
            this.InvokeAsync("GetRenewalBatchStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn}, this.GetRenewalBatchStatusV2OperationCompleted, userState);
        }
        
        private void OnGetRenewalBatchStatusV2OperationCompleted(object arg) {
            if ((this.GetRenewalBatchStatusV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalBatchStatusV2Completed(this, new GetRenewalBatchStatusV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteRxBatch", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CompleteRxBatch(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType) {
            object[] results = this.Invoke("CompleteRxBatch", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRxBatchAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType) {
            this.CompleteRxBatchAsync(credentials, accountRequest, rxBatchTransactionGuidIn, rxBatchCompletionStatusType, null);
        }
        
        /// <remarks/>
        public void CompleteRxBatchAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, object userState) {
            if ((this.CompleteRxBatchOperationCompleted == null)) {
                this.CompleteRxBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRxBatchOperationCompleted);
            }
            this.InvokeAsync("CompleteRxBatch", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType}, this.CompleteRxBatchOperationCompleted, userState);
        }
        
        private void OnCompleteRxBatchOperationCompleted(object arg) {
            if ((this.CompleteRxBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRxBatchCompleted(this, new CompleteRxBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteRxBatchV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompleteBatchResult CompleteRxBatchV2(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, TwoFactorAuthentication twoFactorAuthentication) {
            object[] results = this.Invoke("CompleteRxBatchV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType,
                        twoFactorAuthentication});
            return ((CompleteBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRxBatchV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, TwoFactorAuthentication twoFactorAuthentication) {
            this.CompleteRxBatchV2Async(credentials, accountRequest, rxBatchTransactionGuidIn, rxBatchCompletionStatusType, twoFactorAuthentication, null);
        }
        
        /// <remarks/>
        public void CompleteRxBatchV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, TwoFactorAuthentication twoFactorAuthentication, object userState) {
            if ((this.CompleteRxBatchV2OperationCompleted == null)) {
                this.CompleteRxBatchV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRxBatchV2OperationCompleted);
            }
            this.InvokeAsync("CompleteRxBatchV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType,
                        twoFactorAuthentication}, this.CompleteRxBatchV2OperationCompleted, userState);
        }
        
        private void OnCompleteRxBatchV2OperationCompleted(object arg) {
            if ((this.CompleteRxBatchV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRxBatchV2Completed(this, new CompleteRxBatchV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteDigitalSigningBatch", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CompleteDigitalSigningBatch(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType) {
            object[] results = this.Invoke("CompleteDigitalSigningBatch", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteDigitalSigningBatchAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType) {
            this.CompleteDigitalSigningBatchAsync(credentials, accountRequest, rxBatchTransactionGuidIn, rxBatchCompletionStatusType, null);
        }
        
        /// <remarks/>
        public void CompleteDigitalSigningBatchAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, object userState) {
            if ((this.CompleteDigitalSigningBatchOperationCompleted == null)) {
                this.CompleteDigitalSigningBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteDigitalSigningBatchOperationCompleted);
            }
            this.InvokeAsync("CompleteDigitalSigningBatch", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType}, this.CompleteDigitalSigningBatchOperationCompleted, userState);
        }
        
        private void OnCompleteDigitalSigningBatchOperationCompleted(object arg) {
            if ((this.CompleteDigitalSigningBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteDigitalSigningBatchCompleted(this, new CompleteDigitalSigningBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteDigitalSigningBatchV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompleteBatchResult CompleteDigitalSigningBatchV2(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatus, TwoFactorAuthentication twoFactorAuthentication) {
            object[] results = this.Invoke("CompleteDigitalSigningBatchV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatus,
                        twoFactorAuthentication});
            return ((CompleteBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteDigitalSigningBatchV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatus, TwoFactorAuthentication twoFactorAuthentication) {
            this.CompleteDigitalSigningBatchV2Async(credentials, accountRequest, rxBatchTransactionGuidIn, rxBatchCompletionStatus, twoFactorAuthentication, null);
        }
        
        /// <remarks/>
        public void CompleteDigitalSigningBatchV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatus, TwoFactorAuthentication twoFactorAuthentication, object userState) {
            if ((this.CompleteDigitalSigningBatchV2OperationCompleted == null)) {
                this.CompleteDigitalSigningBatchV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteDigitalSigningBatchV2OperationCompleted);
            }
            this.InvokeAsync("CompleteDigitalSigningBatchV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatus,
                        twoFactorAuthentication}, this.CompleteDigitalSigningBatchV2OperationCompleted, userState);
        }
        
        private void OnCompleteDigitalSigningBatchV2OperationCompleted(object arg) {
            if ((this.CompleteDigitalSigningBatchV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteDigitalSigningBatchV2Completed(this, new CompleteDigitalSigningBatchV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteRenewalBatch", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CompleteRenewalBatch(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType) {
            object[] results = this.Invoke("CompleteRenewalBatch", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRenewalBatchAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType) {
            this.CompleteRenewalBatchAsync(credentials, accountRequest, rxBatchTransactionGuidIn, rxBatchCompletionStatusType, null);
        }
        
        /// <remarks/>
        public void CompleteRenewalBatchAsync(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, object userState) {
            if ((this.CompleteRenewalBatchOperationCompleted == null)) {
                this.CompleteRenewalBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRenewalBatchOperationCompleted);
            }
            this.InvokeAsync("CompleteRenewalBatch", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType}, this.CompleteRenewalBatchOperationCompleted, userState);
        }
        
        private void OnCompleteRenewalBatchOperationCompleted(object arg) {
            if ((this.CompleteRenewalBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRenewalBatchCompleted(this, new CompleteRenewalBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CompleteRenewalBatchV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompleteBatchResult CompleteRenewalBatchV2(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, TwoFactorAuthentication twoFactorAuthentication) {
            object[] results = this.Invoke("CompleteRenewalBatchV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType,
                        twoFactorAuthentication});
            return ((CompleteBatchResult)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRenewalBatchV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, TwoFactorAuthentication twoFactorAuthentication) {
            this.CompleteRenewalBatchV2Async(credentials, accountRequest, rxBatchTransactionGuidIn, rxBatchCompletionStatusType, twoFactorAuthentication, null);
        }
        
        /// <remarks/>
        public void CompleteRenewalBatchV2Async(Credentials credentials, AccountRequest accountRequest, string rxBatchTransactionGuidIn, RxBatchCompletionStatusType rxBatchCompletionStatusType, TwoFactorAuthentication twoFactorAuthentication, object userState) {
            if ((this.CompleteRenewalBatchV2OperationCompleted == null)) {
                this.CompleteRenewalBatchV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRenewalBatchV2OperationCompleted);
            }
            this.InvokeAsync("CompleteRenewalBatchV2", new object[] {
                        credentials,
                        accountRequest,
                        rxBatchTransactionGuidIn,
                        rxBatchCompletionStatusType,
                        twoFactorAuthentication}, this.CompleteRenewalBatchV2OperationCompleted, userState);
        }
        
        private void OnCompleteRenewalBatchV2OperationCompleted(object arg) {
            if ((this.CompleteRenewalBatchV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRenewalBatchV2Completed(this, new CompleteRenewalBatchV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DuplicateDrugTherapy", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DuplicateDrugTherapyResult DuplicateDrugTherapy(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] currentMedications, string[] proposedMedications, string drugStandardType) {
            object[] results = this.Invoke("DuplicateDrugTherapy", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        currentMedications,
                        proposedMedications,
                        drugStandardType});
            return ((DuplicateDrugTherapyResult)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateDrugTherapyAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] currentMedications, string[] proposedMedications, string drugStandardType) {
            this.DuplicateDrugTherapyAsync(credentials, accountRequest, patientRequest, patientInformationRequester, currentMedications, proposedMedications, drugStandardType, null);
        }
        
        /// <remarks/>
        public void DuplicateDrugTherapyAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] currentMedications, string[] proposedMedications, string drugStandardType, object userState) {
            if ((this.DuplicateDrugTherapyOperationCompleted == null)) {
                this.DuplicateDrugTherapyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateDrugTherapyOperationCompleted);
            }
            this.InvokeAsync("DuplicateDrugTherapy", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        currentMedications,
                        proposedMedications,
                        drugStandardType}, this.DuplicateDrugTherapyOperationCompleted, userState);
        }
        
        private void OnDuplicateDrugTherapyOperationCompleted(object arg) {
            if ((this.DuplicateDrugTherapyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateDrugTherapyCompleted(this, new DuplicateDrugTherapyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/SendCancelRxForNewRx", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SendCancelRxResult SendCancelRxForNewRx(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("SendCancelRxForNewRx", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((SendCancelRxResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendCancelRxForNewRxAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.SendCancelRxForNewRxAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void SendCancelRxForNewRxAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.SendCancelRxForNewRxOperationCompleted == null)) {
                this.SendCancelRxForNewRxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCancelRxForNewRxOperationCompleted);
            }
            this.InvokeAsync("SendCancelRxForNewRx", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.SendCancelRxForNewRxOperationCompleted, userState);
        }
        
        private void OnSendCancelRxForNewRxOperationCompleted(object arg) {
            if ((this.SendCancelRxForNewRxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCancelRxForNewRxCompleted(this, new SendCancelRxForNewRxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/SendCancelRxForRenewalResponse", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SendCancelRxResult SendCancelRxForRenewalResponse(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("SendCancelRxForRenewalResponse", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((SendCancelRxResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendCancelRxForRenewalResponseAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.SendCancelRxForRenewalResponseAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void SendCancelRxForRenewalResponseAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.SendCancelRxForRenewalResponseOperationCompleted == null)) {
                this.SendCancelRxForRenewalResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCancelRxForRenewalResponseOperationCompleted);
            }
            this.InvokeAsync("SendCancelRxForRenewalResponse", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.SendCancelRxForRenewalResponseOperationCompleted, userState);
        }
        
        private void OnSendCancelRxForRenewalResponseOperationCompleted(object arg) {
            if ((this.SendCancelRxForRenewalResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCancelRxForRenewalResponseCompleted(this, new SendCancelRxForRenewalResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CheckCancelRxStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CheckCancelRxStatusResult CheckCancelRxStatus(Credentials credentials, AccountRequest accountRequest, string transactionId) {
            object[] results = this.Invoke("CheckCancelRxStatus", new object[] {
                        credentials,
                        accountRequest,
                        transactionId});
            return ((CheckCancelRxStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCancelRxStatusAsync(Credentials credentials, AccountRequest accountRequest, string transactionId) {
            this.CheckCancelRxStatusAsync(credentials, accountRequest, transactionId, null);
        }
        
        /// <remarks/>
        public void CheckCancelRxStatusAsync(Credentials credentials, AccountRequest accountRequest, string transactionId, object userState) {
            if ((this.CheckCancelRxStatusOperationCompleted == null)) {
                this.CheckCancelRxStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCancelRxStatusOperationCompleted);
            }
            this.InvokeAsync("CheckCancelRxStatus", new object[] {
                        credentials,
                        accountRequest,
                        transactionId}, this.CheckCancelRxStatusOperationCompleted, userState);
        }
        
        private void OnCheckCancelRxStatusOperationCompleted(object arg) {
            if ((this.CheckCancelRxStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCancelRxStatusCompleted(this, new CheckCancelRxStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/CheckCancelRxStatusV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CheckCancelRxStatusV2Result CheckCancelRxStatusV2(Credentials credentials, AccountRequest accountRequest, string transactionId) {
            object[] results = this.Invoke("CheckCancelRxStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        transactionId});
            return ((CheckCancelRxStatusV2Result)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCancelRxStatusV2Async(Credentials credentials, AccountRequest accountRequest, string transactionId) {
            this.CheckCancelRxStatusV2Async(credentials, accountRequest, transactionId, null);
        }
        
        /// <remarks/>
        public void CheckCancelRxStatusV2Async(Credentials credentials, AccountRequest accountRequest, string transactionId, object userState) {
            if ((this.CheckCancelRxStatusV2OperationCompleted == null)) {
                this.CheckCancelRxStatusV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCancelRxStatusV2OperationCompleted);
            }
            this.InvokeAsync("CheckCancelRxStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        transactionId}, this.CheckCancelRxStatusV2OperationCompleted, userState);
        }
        
        private void OnCheckCancelRxStatusV2OperationCompleted(object arg) {
            if ((this.CheckCancelRxStatusV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCancelRxStatusV2Completed(this, new CheckCancelRxStatusV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ConfirmCancelRx", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ConfirmCancelRx(Credentials credentials, AccountRequest accountRequest, string transactionId) {
            object[] results = this.Invoke("ConfirmCancelRx", new object[] {
                        credentials,
                        accountRequest,
                        transactionId});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmCancelRxAsync(Credentials credentials, AccountRequest accountRequest, string transactionId) {
            this.ConfirmCancelRxAsync(credentials, accountRequest, transactionId, null);
        }
        
        /// <remarks/>
        public void ConfirmCancelRxAsync(Credentials credentials, AccountRequest accountRequest, string transactionId, object userState) {
            if ((this.ConfirmCancelRxOperationCompleted == null)) {
                this.ConfirmCancelRxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmCancelRxOperationCompleted);
            }
            this.InvokeAsync("ConfirmCancelRx", new object[] {
                        credentials,
                        accountRequest,
                        transactionId}, this.ConfirmCancelRxOperationCompleted, userState);
        }
        
        private void OnConfirmCancelRxOperationCompleted(object arg) {
            if ((this.ConfirmCancelRxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmCancelRxCompleted(this, new ConfirmCancelRxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRxFillsSummary", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxFillSummaryResult GetAllRxFillsSummary(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, DateTimeCompositeType startDateTime, DateTimeCompositeType endDateTime) {
            object[] results = this.Invoke("GetAllRxFillsSummary", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        startDateTime,
                        endDateTime});
            return ((GetRxFillSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRxFillsSummaryAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, DateTimeCompositeType startDateTime, DateTimeCompositeType endDateTime) {
            this.GetAllRxFillsSummaryAsync(credentials, accountRequest, locationId, licensedPrescriberId, startDateTime, endDateTime, null);
        }
        
        /// <remarks/>
        public void GetAllRxFillsSummaryAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, DateTimeCompositeType startDateTime, DateTimeCompositeType endDateTime, object userState) {
            if ((this.GetAllRxFillsSummaryOperationCompleted == null)) {
                this.GetAllRxFillsSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRxFillsSummaryOperationCompleted);
            }
            this.InvokeAsync("GetAllRxFillsSummary", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        startDateTime,
                        endDateTime}, this.GetAllRxFillsSummaryOperationCompleted, userState);
        }
        
        private void OnGetAllRxFillsSummaryOperationCompleted(object arg) {
            if ((this.GetAllRxFillsSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRxFillsSummaryCompleted(this, new GetAllRxFillsSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRxFillDetail", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxFillDetailResult GetRxFillDetail(Credentials credentials, AccountRequest accountRequest, string rxFillGuid, string returnEncodedMessage) {
            object[] results = this.Invoke("GetRxFillDetail", new object[] {
                        credentials,
                        accountRequest,
                        rxFillGuid,
                        returnEncodedMessage});
            return ((GetRxFillDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxFillDetailAsync(Credentials credentials, AccountRequest accountRequest, string rxFillGuid, string returnEncodedMessage) {
            this.GetRxFillDetailAsync(credentials, accountRequest, rxFillGuid, returnEncodedMessage, null);
        }
        
        /// <remarks/>
        public void GetRxFillDetailAsync(Credentials credentials, AccountRequest accountRequest, string rxFillGuid, string returnEncodedMessage, object userState) {
            if ((this.GetRxFillDetailOperationCompleted == null)) {
                this.GetRxFillDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxFillDetailOperationCompleted);
            }
            this.InvokeAsync("GetRxFillDetail", new object[] {
                        credentials,
                        accountRequest,
                        rxFillGuid,
                        returnEncodedMessage}, this.GetRxFillDetailOperationCompleted, userState);
        }
        
        private void OnGetRxFillDetailOperationCompleted(object arg) {
            if ((this.GetRxFillDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxFillDetailCompleted(this, new GetRxFillDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ConfirmRxFillReceipt", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ConfirmRxFillReceipt(Credentials credentials, AccountRequest accountRequest, string transactionId, NcpdpStatusEnum ncpdpStatus, string note) {
            object[] results = this.Invoke("ConfirmRxFillReceipt", new object[] {
                        credentials,
                        accountRequest,
                        transactionId,
                        ncpdpStatus,
                        note});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmRxFillReceiptAsync(Credentials credentials, AccountRequest accountRequest, string transactionId, NcpdpStatusEnum ncpdpStatus, string note) {
            this.ConfirmRxFillReceiptAsync(credentials, accountRequest, transactionId, ncpdpStatus, note, null);
        }
        
        /// <remarks/>
        public void ConfirmRxFillReceiptAsync(Credentials credentials, AccountRequest accountRequest, string transactionId, NcpdpStatusEnum ncpdpStatus, string note, object userState) {
            if ((this.ConfirmRxFillReceiptOperationCompleted == null)) {
                this.ConfirmRxFillReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmRxFillReceiptOperationCompleted);
            }
            this.InvokeAsync("ConfirmRxFillReceipt", new object[] {
                        credentials,
                        accountRequest,
                        transactionId,
                        ncpdpStatus,
                        note}, this.ConfirmRxFillReceiptOperationCompleted, userState);
        }
        
        private void OnConfirmRxFillReceiptOperationCompleted(object arg) {
            if ((this.ConfirmRxFillReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmRxFillReceiptCompleted(this, new ConfirmRxFillReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRxChangesSummary", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxChangesSummaryResult GetAllRxChangesSummary(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, DateTimeCompositeType startDateTime, DateTimeCompositeType endDateTime) {
            object[] results = this.Invoke("GetAllRxChangesSummary", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        startDateTime,
                        endDateTime});
            return ((GetRxChangesSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRxChangesSummaryAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, DateTimeCompositeType startDateTime, DateTimeCompositeType endDateTime) {
            this.GetAllRxChangesSummaryAsync(credentials, accountRequest, locationId, licensedPrescriberId, startDateTime, endDateTime, null);
        }
        
        /// <remarks/>
        public void GetAllRxChangesSummaryAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, DateTimeCompositeType startDateTime, DateTimeCompositeType endDateTime, object userState) {
            if ((this.GetAllRxChangesSummaryOperationCompleted == null)) {
                this.GetAllRxChangesSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRxChangesSummaryOperationCompleted);
            }
            this.InvokeAsync("GetAllRxChangesSummary", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        startDateTime,
                        endDateTime}, this.GetAllRxChangesSummaryOperationCompleted, userState);
        }
        
        private void OnGetAllRxChangesSummaryOperationCompleted(object arg) {
            if ((this.GetAllRxChangesSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRxChangesSummaryCompleted(this, new GetAllRxChangesSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRxChangesSummaryV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxChangesSummaryV2Result GetAllRxChangesSummaryV2(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            object[] results = this.Invoke("GetAllRxChangesSummaryV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId});
            return ((GetRxChangesSummaryV2Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRxChangesSummaryV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            this.GetAllRxChangesSummaryV2Async(credentials, accountRequest, locationId, licensedPrescriberId, null);
        }
        
        /// <remarks/>
        public void GetAllRxChangesSummaryV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, object userState) {
            if ((this.GetAllRxChangesSummaryV2OperationCompleted == null)) {
                this.GetAllRxChangesSummaryV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRxChangesSummaryV2OperationCompleted);
            }
            this.InvokeAsync("GetAllRxChangesSummaryV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId}, this.GetAllRxChangesSummaryV2OperationCompleted, userState);
        }
        
        private void OnGetAllRxChangesSummaryV2OperationCompleted(object arg) {
            if ((this.GetAllRxChangesSummaryV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRxChangesSummaryV2Completed(this, new GetAllRxChangesSummaryV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRxChangeDetail", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxChangeDetailResult GetRxChangeDetail(Credentials credentials, AccountRequest accountRequest, string rxChangeGuid, string returnEncodedMessage) {
            object[] results = this.Invoke("GetRxChangeDetail", new object[] {
                        credentials,
                        accountRequest,
                        rxChangeGuid,
                        returnEncodedMessage});
            return ((GetRxChangeDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxChangeDetailAsync(Credentials credentials, AccountRequest accountRequest, string rxChangeGuid, string returnEncodedMessage) {
            this.GetRxChangeDetailAsync(credentials, accountRequest, rxChangeGuid, returnEncodedMessage, null);
        }
        
        /// <remarks/>
        public void GetRxChangeDetailAsync(Credentials credentials, AccountRequest accountRequest, string rxChangeGuid, string returnEncodedMessage, object userState) {
            if ((this.GetRxChangeDetailOperationCompleted == null)) {
                this.GetRxChangeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxChangeDetailOperationCompleted);
            }
            this.InvokeAsync("GetRxChangeDetail", new object[] {
                        credentials,
                        accountRequest,
                        rxChangeGuid,
                        returnEncodedMessage}, this.GetRxChangeDetailOperationCompleted, userState);
        }
        
        private void OnGetRxChangeDetailOperationCompleted(object arg) {
            if ((this.GetRxChangeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxChangeDetailCompleted(this, new GetRxChangeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ConfirmRxChangeReceipt", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ConfirmRxChangeReceipt(Credentials credentials, AccountRequest accountRequest, string transactionId, NcpdpStatusEnum ncpdpStatus, string note) {
            object[] results = this.Invoke("ConfirmRxChangeReceipt", new object[] {
                        credentials,
                        accountRequest,
                        transactionId,
                        ncpdpStatus,
                        note});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmRxChangeReceiptAsync(Credentials credentials, AccountRequest accountRequest, string transactionId, NcpdpStatusEnum ncpdpStatus, string note) {
            this.ConfirmRxChangeReceiptAsync(credentials, accountRequest, transactionId, ncpdpStatus, note, null);
        }
        
        /// <remarks/>
        public void ConfirmRxChangeReceiptAsync(Credentials credentials, AccountRequest accountRequest, string transactionId, NcpdpStatusEnum ncpdpStatus, string note, object userState) {
            if ((this.ConfirmRxChangeReceiptOperationCompleted == null)) {
                this.ConfirmRxChangeReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmRxChangeReceiptOperationCompleted);
            }
            this.InvokeAsync("ConfirmRxChangeReceipt", new object[] {
                        credentials,
                        accountRequest,
                        transactionId,
                        ncpdpStatus,
                        note}, this.ConfirmRxChangeReceiptOperationCompleted, userState);
        }
        
        private void OnConfirmRxChangeReceiptOperationCompleted(object arg) {
            if ((this.ConfirmRxChangeReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmRxChangeReceiptCompleted(this, new ConfirmRxChangeReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/SendRxChangeDenyResponse", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxChangeDeliveryStatusResult SendRxChangeDenyResponse(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("SendRxChangeDenyResponse", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((RxChangeDeliveryStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendRxChangeDenyResponseAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.SendRxChangeDenyResponseAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void SendRxChangeDenyResponseAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.SendRxChangeDenyResponseOperationCompleted == null)) {
                this.SendRxChangeDenyResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRxChangeDenyResponseOperationCompleted);
            }
            this.InvokeAsync("SendRxChangeDenyResponse", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.SendRxChangeDenyResponseOperationCompleted, userState);
        }
        
        private void OnSendRxChangeDenyResponseOperationCompleted(object arg) {
            if ((this.SendRxChangeDenyResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRxChangeDenyResponseCompleted(this, new SendRxChangeDenyResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class Credentials {
        
        private string partnerNameField;
        
        private string nameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string PartnerName {
            get {
                return this.partnerNameField;
            }
            set {
                this.partnerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeDirectivesType {
        
        private RxChangeDigitalSigningYesNoType digitalSigningIsRequiredField;
        
        private RxChangeDigitalSigningProviderType digitalSigningServiceProviderField;
        
        private RxChangeDigitalSigningYesNoType schedulePreventsElecTransmissionField;
        
        private string statusMessageField;
        
        /// <remarks/>
        public RxChangeDigitalSigningYesNoType DigitalSigningIsRequired {
            get {
                return this.digitalSigningIsRequiredField;
            }
            set {
                this.digitalSigningIsRequiredField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeDigitalSigningProviderType DigitalSigningServiceProvider {
            get {
                return this.digitalSigningServiceProviderField;
            }
            set {
                this.digitalSigningServiceProviderField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeDigitalSigningYesNoType SchedulePreventsElecTransmission {
            get {
                return this.schedulePreventsElecTransmissionField;
            }
            set {
                this.schedulePreventsElecTransmissionField = value;
            }
        }
        
        /// <remarks/>
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                this.statusMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeDigitalSigningYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeDigitalSigningProviderType {
        
        /// <remarks/>
        Provider1,
        
        /// <remarks/>
        Provider2,
        
        /// <remarks/>
        Provider3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeDerivedSchedulesType {
        
        private string prescriberStateScheduleOverrideField;
        
        private string pharmacyStateScheduleOverrideField;
        
        private string deaScheduleField;
        
        /// <remarks/>
        public string PrescriberStateScheduleOverride {
            get {
                return this.prescriberStateScheduleOverrideField;
            }
            set {
                this.prescriberStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStateScheduleOverride {
            get {
                return this.pharmacyStateScheduleOverrideField;
            }
            set {
                this.pharmacyStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string DeaSchedule {
            get {
                return this.deaScheduleField;
            }
            set {
                this.deaScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeDetail {
        
        private NcpdpMessageFormatType formatTypeField;
        
        private NcpdpMessageFormatVersion formatVersionField;
        
        private NcpdpMessageCompressionType compressionTypeField;
        
        private string rxChangeGuidField;
        
        private string originalTransactionGuidField;
        
        private RxChangeTransactionType originalTransactionTypeField;
        
        private RxChangeRequestType rxChangeRequestField;
        
        private DateTimeCompositeType receivedTimestampField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        private string ncpdpIdField;
        
        private string prescriberOrderNumberField;
        
        private string rxReferenceNumberField;
        
        private string locationNameField;
        
        private string prescriberFullNameField;
        
        private string prescriberPhoneNumberField;
        
        private string prescriberContactNumbersField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientSuffixField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string patientAddressLine1Field;
        
        private string patientAddressLine2Field;
        
        private string patientAddressCityField;
        
        private string patientAddressStateField;
        
        private string patientAddressZipCodeField;
        
        private string patientPhoneNumberField;
        
        private string patientContactNumbersField;
        
        private RxChangeDerivedSchedulesType[] derivedSchedulesField;
        
        private RxChangeDirectivesType[] directivesField;
        
        private string ncpdpMessageBase64Field;
        
        private string assignedToDoctorExternalIdField;
        
        private string assignedByStaffExternalIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        private string spare6Field;
        
        /// <remarks/>
        public NcpdpMessageFormatType FormatType {
            get {
                return this.formatTypeField;
            }
            set {
                this.formatTypeField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpMessageFormatVersion FormatVersion {
            get {
                return this.formatVersionField;
            }
            set {
                this.formatVersionField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpMessageCompressionType CompressionType {
            get {
                return this.compressionTypeField;
            }
            set {
                this.compressionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RxChangeGuid {
            get {
                return this.rxChangeGuidField;
            }
            set {
                this.rxChangeGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalTransactionGuid {
            get {
                return this.originalTransactionGuidField;
            }
            set {
                this.originalTransactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeTransactionType OriginalTransactionType {
            get {
                return this.originalTransactionTypeField;
            }
            set {
                this.originalTransactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeRequestType RxChangeRequest {
            get {
                return this.rxChangeRequestField;
            }
            set {
                this.rxChangeRequestField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpId {
            get {
                return this.ncpdpIdField;
            }
            set {
                this.ncpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberOrderNumber {
            get {
                return this.prescriberOrderNumberField;
            }
            set {
                this.prescriberOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RxReferenceNumber {
            get {
                return this.rxReferenceNumberField;
            }
            set {
                this.rxReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberFullName {
            get {
                return this.prescriberFullNameField;
            }
            set {
                this.prescriberFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberPhoneNumber {
            get {
                return this.prescriberPhoneNumberField;
            }
            set {
                this.prescriberPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberContactNumbers {
            get {
                return this.prescriberContactNumbersField;
            }
            set {
                this.prescriberContactNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientSuffix {
            get {
                return this.patientSuffixField;
            }
            set {
                this.patientSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressLine1 {
            get {
                return this.patientAddressLine1Field;
            }
            set {
                this.patientAddressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressLine2 {
            get {
                return this.patientAddressLine2Field;
            }
            set {
                this.patientAddressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressCity {
            get {
                return this.patientAddressCityField;
            }
            set {
                this.patientAddressCityField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressState {
            get {
                return this.patientAddressStateField;
            }
            set {
                this.patientAddressStateField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressZipCode {
            get {
                return this.patientAddressZipCodeField;
            }
            set {
                this.patientAddressZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientPhoneNumber {
            get {
                return this.patientPhoneNumberField;
            }
            set {
                this.patientPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PatientContactNumbers {
            get {
                return this.patientContactNumbersField;
            }
            set {
                this.patientContactNumbersField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeDerivedSchedulesType[] derivedSchedules {
            get {
                return this.derivedSchedulesField;
            }
            set {
                this.derivedSchedulesField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeDirectivesType[] directives {
            get {
                return this.directivesField;
            }
            set {
                this.directivesField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpMessageBase64 {
            get {
                return this.ncpdpMessageBase64Field;
            }
            set {
                this.ncpdpMessageBase64Field = value;
            }
        }
        
        /// <remarks/>
        public string AssignedToDoctorExternalId {
            get {
                return this.assignedToDoctorExternalIdField;
            }
            set {
                this.assignedToDoctorExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string AssignedByStaffExternalId {
            get {
                return this.assignedByStaffExternalIdField;
            }
            set {
                this.assignedByStaffExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum NcpdpMessageFormatType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        EDIFACT,
        
        /// <remarks/>
        XML,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum NcpdpMessageFormatVersion {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        V106,
        
        /// <remarks/>
        V2017071,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum NcpdpMessageCompressionType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        GZIP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeTransactionType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        NewRx,
        
        /// <remarks/>
        Renewal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeRequestType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        TherapeuticInterchange,
        
        /// <remarks/>
        GenericSubstitution,
        
        /// <remarks/>
        PriorAuthorization,
        
        /// <remarks/>
        DrugUseEvaluation,
        
        /// <remarks/>
        ScriptClarification,
        
        /// <remarks/>
        OutOfStock,
        
        /// <remarks/>
        PrescriberAuthorizationRequired,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DateTimeCompositeType {
        
        private string stringComponentField;
        
        private System.DateTime dateTimeComponentField;
        
        /// <remarks/>
        public string StringComponent {
            get {
                return this.stringComponentField;
            }
            set {
                this.stringComponentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeComponent {
            get {
                return this.dateTimeComponentField;
            }
            set {
                this.dateTimeComponentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class GetRxChangeDetailResult {
        
        private Result resultField;
        
        private RxChangeDetail rxChangeDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeDetail rxChangeDetail {
            get {
                return this.rxChangeDetailField;
            }
            set {
                this.rxChangeDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class Result {
        
        private StatusType statusField;
        
        private string messageField;
        
        private string xmlResponseField;
        
        private int rowCountField;
        
        private int timingField;
        
        /// <remarks/>
        public StatusType Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string XmlResponse {
            get {
                return this.xmlResponseField;
            }
            set {
                this.xmlResponseField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
        
        /// <remarks/>
        public int Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum StatusType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Fail,
        
        /// <remarks/>
        NotFound,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeSummaryV2 {
        
        private string rxChangeGuidField;
        
        private string originalTransactionGuidField;
        
        private RxChangeV2TransactionType originalTransactionTypeField;
        
        private RxChangeV2RequestType rxChangeRequestField;
        
        private DateTimeCompositeType receivedTimestampField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        private string ncpdpIdField;
        
        private string pharmacyStoreNameField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        private string spare6Field;
        
        /// <remarks/>
        public string RxChangeGuid {
            get {
                return this.rxChangeGuidField;
            }
            set {
                this.rxChangeGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalTransactionGuid {
            get {
                return this.originalTransactionGuidField;
            }
            set {
                this.originalTransactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeV2TransactionType OriginalTransactionType {
            get {
                return this.originalTransactionTypeField;
            }
            set {
                this.originalTransactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeV2RequestType RxChangeRequest {
            get {
                return this.rxChangeRequestField;
            }
            set {
                this.rxChangeRequestField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpId {
            get {
                return this.ncpdpIdField;
            }
            set {
                this.ncpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeV2TransactionType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        NewRx,
        
        /// <remarks/>
        Renewal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeV2RequestType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        TherapeuticInterchange,
        
        /// <remarks/>
        GenericSubstitution,
        
        /// <remarks/>
        PriorAuthorization,
        
        /// <remarks/>
        DrugUseEvaluation,
        
        /// <remarks/>
        ScriptClarification,
        
        /// <remarks/>
        OutOfStock,
        
        /// <remarks/>
        PrescriberAuthorizationRequired,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class GetRxChangesSummaryV2Result {
        
        private Result resultField;
        
        private RxChangeSummaryV2[] rxChangeSummaryV2ArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeSummaryV2[] rxChangeSummaryV2Array {
            get {
                return this.rxChangeSummaryV2ArrayField;
            }
            set {
                this.rxChangeSummaryV2ArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeSummary {
        
        private string rxChangeGuidField;
        
        private DateTimeCompositeType receivedTimestampField;
        
        /// <remarks/>
        public string RxChangeGuid {
            get {
                return this.rxChangeGuidField;
            }
            set {
                this.rxChangeGuidField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class GetRxChangesSummaryResult {
        
        private Result resultField;
        
        private RxChangeSummary[] rxChangeSummaryArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeSummary[] rxChangeSummaryArray {
            get {
                return this.rxChangeSummaryArrayField;
            }
            set {
                this.rxChangeSummaryArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxFillDetail {
        
        private NcpdpMessageFormatType formatTypeField;
        
        private NcpdpMessageFormatVersion formatVersionField;
        
        private NcpdpMessageCompressionType compressionTypeField;
        
        private string rxFillGuidField;
        
        private string originalTransactionGuidField;
        
        private RxFillTransactionType originalTransactionTypeField;
        
        private DateTimeCompositeType receivedTimestampField;
        
        private string ncpdpMessageBase64Field;
        
        /// <remarks/>
        public NcpdpMessageFormatType FormatType {
            get {
                return this.formatTypeField;
            }
            set {
                this.formatTypeField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpMessageFormatVersion FormatVersion {
            get {
                return this.formatVersionField;
            }
            set {
                this.formatVersionField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpMessageCompressionType CompressionType {
            get {
                return this.compressionTypeField;
            }
            set {
                this.compressionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RxFillGuid {
            get {
                return this.rxFillGuidField;
            }
            set {
                this.rxFillGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalTransactionGuid {
            get {
                return this.originalTransactionGuidField;
            }
            set {
                this.originalTransactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public RxFillTransactionType OriginalTransactionType {
            get {
                return this.originalTransactionTypeField;
            }
            set {
                this.originalTransactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpMessageBase64 {
            get {
                return this.ncpdpMessageBase64Field;
            }
            set {
                this.ncpdpMessageBase64Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxFillTransactionType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        NewRx,
        
        /// <remarks/>
        Renewal,
        
        /// <remarks/>
        Change,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class GetRxFillDetailResult {
        
        private Result resultField;
        
        private RxFillDetail rxFillDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxFillDetail rxFillDetail {
            get {
                return this.rxFillDetailField;
            }
            set {
                this.rxFillDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxFillSummary {
        
        private string rxFillGuidField;
        
        private DateTimeCompositeType receivedTimestampField;
        
        /// <remarks/>
        public string RxFillGuid {
            get {
                return this.rxFillGuidField;
            }
            set {
                this.rxFillGuidField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class GetRxFillSummaryResult {
        
        private Result resultField;
        
        private RxFillSummary[] rxFillSummaryArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxFillSummary[] rxFillSummaryArray {
            get {
                return this.rxFillSummaryArrayField;
            }
            set {
                this.rxFillSummaryArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CheckCancelRxStatusV2Response {
        
        private string transactionIDField;
        
        private TransmissionStatusType transmissionStatusField;
        
        private NcpdpStatusEnum statusTypeField;
        
        private CancelResponseCodeV2Type responseCodeField;
        
        private CancelResponseCodeDetailV2Type[] responseDenyCodeArrayField;
        
        private CancelResponseCodeDetailV2Type[] responseApproveCodeArrayField;
        
        private string referenceNumberField;
        
        private string noteField;
        
        private DateTimeCompositeType statusTimestampField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionStatusType TransmissionStatus {
            get {
                return this.transmissionStatusField;
            }
            set {
                this.transmissionStatusField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpStatusEnum StatusType {
            get {
                return this.statusTypeField;
            }
            set {
                this.statusTypeField = value;
            }
        }
        
        /// <remarks/>
        public CancelResponseCodeV2Type ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        public CancelResponseCodeDetailV2Type[] ResponseDenyCodeArray {
            get {
                return this.responseDenyCodeArrayField;
            }
            set {
                this.responseDenyCodeArrayField = value;
            }
        }
        
        /// <remarks/>
        public CancelResponseCodeDetailV2Type[] ResponseApproveCodeArray {
            get {
                return this.responseApproveCodeArrayField;
            }
            set {
                this.responseApproveCodeArrayField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType StatusTimestamp {
            get {
                return this.statusTimestampField;
            }
            set {
                this.statusTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum TransmissionStatusType {
        
        /// <remarks/>
        NotSent,
        
        /// <remarks/>
        Sent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum NcpdpStatusEnum {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Status,
        
        /// <remarks/>
        Verify,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum CancelResponseCodeV2Type {
        
        /// <remarks/>
        Accept,
        
        /// <remarks/>
        Deny,
        
        /// <remarks/>
        UnableToProcess,
        
        /// <remarks/>
        Undetermined,
        
        /// <remarks/>
        ApprovedWithChanges,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum CancelResponseCodeDetailV2Type {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        PatientUnknownToThePrescriber,
        
        /// <remarks/>
        PatientNeverUnderPrescriberCare,
        
        /// <remarks/>
        PatientNoLongerUnderPrescriberCare,
        
        /// <remarks/>
        RequestAlreadyRespondedToByOtherMeans,
        
        /// <remarks/>
        UnableToCancelPrescriptionTransferred,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CheckCancelRxStatusV2Result {
        
        private Result resultField;
        
        private CheckCancelRxStatusV2Response cancelRxResponseField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public CheckCancelRxStatusV2Response cancelRxResponse {
            get {
                return this.cancelRxResponseField;
            }
            set {
                this.cancelRxResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CheckCancelRxStatusResponse {
        
        private string transactionIDField;
        
        private TransmissionStatusType transmissionStatusField;
        
        private NcpdpStatusEnum statusTypeField;
        
        private ResponseCodeType responseCodeField;
        
        private CancelResponseCodeType[] responseDenyCodeArrayField;
        
        private CancelResponseCodeType[] responseApproveCodeArrayField;
        
        private string referenceNumberField;
        
        private string noteField;
        
        private DateTimeCompositeType statusTimestampField;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionStatusType TransmissionStatus {
            get {
                return this.transmissionStatusField;
            }
            set {
                this.transmissionStatusField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpStatusEnum StatusType {
            get {
                return this.statusTypeField;
            }
            set {
                this.statusTypeField = value;
            }
        }
        
        /// <remarks/>
        public ResponseCodeType ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        public CancelResponseCodeType[] ResponseDenyCodeArray {
            get {
                return this.responseDenyCodeArrayField;
            }
            set {
                this.responseDenyCodeArrayField = value;
            }
        }
        
        /// <remarks/>
        public CancelResponseCodeType[] ResponseApproveCodeArray {
            get {
                return this.responseApproveCodeArrayField;
            }
            set {
                this.responseApproveCodeArrayField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType StatusTimestamp {
            get {
                return this.statusTimestampField;
            }
            set {
                this.statusTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum ResponseCodeType {
        
        /// <remarks/>
        Accept,
        
        /// <remarks/>
        Deny,
        
        /// <remarks/>
        UnableToProcess,
        
        /// <remarks/>
        Undetermined,
        
        /// <remarks/>
        ApprovedWithChanges,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum CancelResponseCodeType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        PatientUnknownToThePrescriber,
        
        /// <remarks/>
        PatientNeverUnderPrescriberCare,
        
        /// <remarks/>
        PatientNoLongerUnderPrescriberCare,
        
        /// <remarks/>
        PatientHasRequestedRefillTooSoon,
        
        /// <remarks/>
        MedicationNeverPrescribedForThePatient,
        
        /// <remarks/>
        PatientShouldContactPrescriberFirst,
        
        /// <remarks/>
        RefillNotAppropriate,
        
        /// <remarks/>
        PatientHasPickedUpPrescription,
        
        /// <remarks/>
        PatientHasPickedUpPartialFillOfPrescription,
        
        /// <remarks/>
        PatientHasNotPickedUpPrescriptionDrugReturnedToStock,
        
        /// <remarks/>
        ChangeNotAppropriate,
        
        /// <remarks/>
        PatientNeedsAppointment,
        
        /// <remarks/>
        PrescriberNotAssociatedWithThisPracticeOrLocation,
        
        /// <remarks/>
        NoAttemptWillBeMadeToObtainPriorAuthorization,
        
        /// <remarks/>
        DeniedNewPrescriptionToFollow,
        
        /// <remarks/>
        RequestAlreadyRespondedToByOtherMeans,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CheckCancelRxStatusResult {
        
        private Result resultField;
        
        private CheckCancelRxStatusResponse cancelRxResponseField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public CheckCancelRxStatusResponse cancelRxResponse {
            get {
                return this.cancelRxResponseField;
            }
            set {
                this.cancelRxResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class MessageStatusDescription {
        
        private string messageField;
        
        private string endUserMessageField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string EndUserMessage {
            get {
                return this.endUserMessageField;
            }
            set {
                this.endUserMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class SendCancelRxDetail {
        
        private string transactionIDField;
        
        private NcpdpStatusEnum statusTypeField;
        
        private TransmissionStatusType transmissionStatusField;
        
        private MessageStatusDescription messageStatusDescriptionField;
        
        private DateTimeCompositeType statusTimestampField;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpStatusEnum StatusType {
            get {
                return this.statusTypeField;
            }
            set {
                this.statusTypeField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionStatusType TransmissionStatus {
            get {
                return this.transmissionStatusField;
            }
            set {
                this.transmissionStatusField = value;
            }
        }
        
        /// <remarks/>
        public MessageStatusDescription messageStatusDescription {
            get {
                return this.messageStatusDescriptionField;
            }
            set {
                this.messageStatusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType StatusTimestamp {
            get {
                return this.statusTimestampField;
            }
            set {
                this.statusTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class SendCancelRxResult {
        
        private Result resultField;
        
        private SendCancelRxDetail cancelDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public SendCancelRxDetail cancelDetail {
            get {
                return this.cancelDetailField;
            }
            set {
                this.cancelDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DuplicateDrugTherapyDetail {
        
        private string drug1Field;
        
        private string drug1IDField;
        
        private string drug2Field;
        
        private string drug2IDField;
        
        private string drugPairField;
        
        private string duplicateClassDescriptionField;
        
        private string performanceField;
        
        /// <remarks/>
        public string Drug1 {
            get {
                return this.drug1Field;
            }
            set {
                this.drug1Field = value;
            }
        }
        
        /// <remarks/>
        public string Drug1ID {
            get {
                return this.drug1IDField;
            }
            set {
                this.drug1IDField = value;
            }
        }
        
        /// <remarks/>
        public string Drug2 {
            get {
                return this.drug2Field;
            }
            set {
                this.drug2Field = value;
            }
        }
        
        /// <remarks/>
        public string Drug2ID {
            get {
                return this.drug2IDField;
            }
            set {
                this.drug2IDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugPair {
            get {
                return this.drugPairField;
            }
            set {
                this.drugPairField = value;
            }
        }
        
        /// <remarks/>
        public string DuplicateClassDescription {
            get {
                return this.duplicateClassDescriptionField;
            }
            set {
                this.duplicateClassDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Performance {
            get {
                return this.performanceField;
            }
            set {
                this.performanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DuplicateDrugTherapyResult {
        
        private Result resultField;
        
        private DuplicateDrugTherapyDetail[] duplicateDrugTherapyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DuplicateDrugTherapyDetail[] duplicateDrugTherapyDetailArray {
            get {
                return this.duplicateDrugTherapyDetailArrayField;
            }
            set {
                this.duplicateDrugTherapyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchRenewalDetailV2 {
        
        private DateTimeCompositeType batchDetailCreatedTimestampField;
        
        private RxBatchRenewalDetailYesNoType includeInDigitalSigningTransactionField;
        
        private RxBatchRenewalDetailSigningStatusType signingStatusField;
        
        private string signingStatusMessageField;
        
        private string renewalRequestIdentifierField;
        
        private RenewalTransactionDetailStatusType renewalTransmissionStatusField;
        
        private string renewalTransmissionStatusMessageField;
        
        private DateTimeCompositeType renewalTransmissionSentTimestampField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        private string spare6Field;
        
        /// <remarks/>
        public DateTimeCompositeType BatchDetailCreatedTimestamp {
            get {
                return this.batchDetailCreatedTimestampField;
            }
            set {
                this.batchDetailCreatedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchRenewalDetailYesNoType IncludeInDigitalSigningTransaction {
            get {
                return this.includeInDigitalSigningTransactionField;
            }
            set {
                this.includeInDigitalSigningTransactionField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchRenewalDetailSigningStatusType SigningStatus {
            get {
                return this.signingStatusField;
            }
            set {
                this.signingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SigningStatusMessage {
            get {
                return this.signingStatusMessageField;
            }
            set {
                this.signingStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string RenewalRequestIdentifier {
            get {
                return this.renewalRequestIdentifierField;
            }
            set {
                this.renewalRequestIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public RenewalTransactionDetailStatusType RenewalTransmissionStatus {
            get {
                return this.renewalTransmissionStatusField;
            }
            set {
                this.renewalTransmissionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RenewalTransmissionStatusMessage {
            get {
                return this.renewalTransmissionStatusMessageField;
            }
            set {
                this.renewalTransmissionStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType RenewalTransmissionSentTimestamp {
            get {
                return this.renewalTransmissionSentTimestampField;
            }
            set {
                this.renewalTransmissionSentTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxBatchRenewalDetailYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxBatchRenewalDetailSigningStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        NotAttempted,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RenewalTransactionDetailStatusType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Fail,
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Verified,
        
        /// <remarks/>
        OK,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchRenewalResultV2 {
        
        private Result resultField;
        
        private RxBatchSummary rxBatchSummaryField;
        
        private RxBatchRenewalDetailV2[] rxBatchRenewalDetailV2Field;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummary rxBatchSummary {
            get {
                return this.rxBatchSummaryField;
            }
            set {
                this.rxBatchSummaryField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchRenewalDetailV2[] rxBatchRenewalDetailV2 {
            get {
                return this.rxBatchRenewalDetailV2Field;
            }
            set {
                this.rxBatchRenewalDetailV2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchSummary {
        
        private string rxBatchTransactionGuidField;
        
        private string rxBatchTransactionExternalIdField;
        
        private DateTimeCompositeType batchSummaryCreatedTimestampField;
        
        private RxBatchSummaryQueuedStatusType rxBatchSummaryQueuedStatusField;
        
        private string rxBatchSummaryStatusMessageField;
        
        private DigitalSigningTransactionType digitalSigningTransactionField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public string RxBatchTransactionGuid {
            get {
                return this.rxBatchTransactionGuidField;
            }
            set {
                this.rxBatchTransactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string RxBatchTransactionExternalId {
            get {
                return this.rxBatchTransactionExternalIdField;
            }
            set {
                this.rxBatchTransactionExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType BatchSummaryCreatedTimestamp {
            get {
                return this.batchSummaryCreatedTimestampField;
            }
            set {
                this.batchSummaryCreatedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummaryQueuedStatusType RxBatchSummaryQueuedStatus {
            get {
                return this.rxBatchSummaryQueuedStatusField;
            }
            set {
                this.rxBatchSummaryQueuedStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RxBatchSummaryStatusMessage {
            get {
                return this.rxBatchSummaryStatusMessageField;
            }
            set {
                this.rxBatchSummaryStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public DigitalSigningTransactionType DigitalSigningTransaction {
            get {
                return this.digitalSigningTransactionField;
            }
            set {
                this.digitalSigningTransactionField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxBatchSummaryQueuedStatusType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Some,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DigitalSigningTransactionType {
        
        private DigitalSigningYesNoType digitalSigningIsRequiredField;
        
        private DigitalSigningProviderType digitalSigningServiceProviderField;
        
        private SigningTransactionStatusType signingTransactionStatusField;
        
        private string signingTransactionMessageField;
        
        private string digitalSigningUsernameField;
        
        private string digitalSigningServiceNameField;
        
        private string providerTransactionIdField;
        
        private string internalTransactionGuidField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public DigitalSigningYesNoType DigitalSigningIsRequired {
            get {
                return this.digitalSigningIsRequiredField;
            }
            set {
                this.digitalSigningIsRequiredField = value;
            }
        }
        
        /// <remarks/>
        public DigitalSigningProviderType DigitalSigningServiceProvider {
            get {
                return this.digitalSigningServiceProviderField;
            }
            set {
                this.digitalSigningServiceProviderField = value;
            }
        }
        
        /// <remarks/>
        public SigningTransactionStatusType SigningTransactionStatus {
            get {
                return this.signingTransactionStatusField;
            }
            set {
                this.signingTransactionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SigningTransactionMessage {
            get {
                return this.signingTransactionMessageField;
            }
            set {
                this.signingTransactionMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DigitalSigningUsername {
            get {
                return this.digitalSigningUsernameField;
            }
            set {
                this.digitalSigningUsernameField = value;
            }
        }
        
        /// <remarks/>
        public string DigitalSigningServiceName {
            get {
                return this.digitalSigningServiceNameField;
            }
            set {
                this.digitalSigningServiceNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderTransactionId {
            get {
                return this.providerTransactionIdField;
            }
            set {
                this.providerTransactionIdField = value;
            }
        }
        
        /// <remarks/>
        public string InternalTransactionGuid {
            get {
                return this.internalTransactionGuidField;
            }
            set {
                this.internalTransactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DigitalSigningYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DigitalSigningProviderType {
        
        /// <remarks/>
        Provider1,
        
        /// <remarks/>
        Provider2,
        
        /// <remarks/>
        Provider3,
        
        /// <remarks/>
        Provider4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum SigningTransactionStatusType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Waiting,
        
        /// <remarks/>
        Indeterminate,
        
        /// <remarks/>
        ProviderDenied,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchRenewalDetail {
        
        private DateTimeCompositeType batchDetailCreatedTimestampField;
        
        private RxBatchRenewalDetailYesNoType includeInDigitalSigningTransactionField;
        
        private RxBatchRenewalDetailSigningStatusType signingStatusField;
        
        private string signingStatusMessageField;
        
        private string renewalRequestIdentifierField;
        
        /// <remarks/>
        public DateTimeCompositeType BatchDetailCreatedTimestamp {
            get {
                return this.batchDetailCreatedTimestampField;
            }
            set {
                this.batchDetailCreatedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchRenewalDetailYesNoType IncludeInDigitalSigningTransaction {
            get {
                return this.includeInDigitalSigningTransactionField;
            }
            set {
                this.includeInDigitalSigningTransactionField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchRenewalDetailSigningStatusType SigningStatus {
            get {
                return this.signingStatusField;
            }
            set {
                this.signingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SigningStatusMessage {
            get {
                return this.signingStatusMessageField;
            }
            set {
                this.signingStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string RenewalRequestIdentifier {
            get {
                return this.renewalRequestIdentifierField;
            }
            set {
                this.renewalRequestIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchRenewalResult {
        
        private Result resultField;
        
        private RxBatchSummary rxBatchSummaryField;
        
        private RxBatchRenewalDetail[] rxBatchRenewalDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummary rxBatchSummary {
            get {
                return this.rxBatchSummaryField;
            }
            set {
                this.rxBatchSummaryField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchRenewalDetail[] rxBatchRenewalDetail {
            get {
                return this.rxBatchRenewalDetailField;
            }
            set {
                this.rxBatchRenewalDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DigitalSigningReturnDetail {
        
        private DigitalSigningReturnFormatType digitalSigningReturnFormatField;
        
        /// <remarks/>
        public DigitalSigningReturnFormatType DigitalSigningReturnFormat {
            get {
                return this.digitalSigningReturnFormatField;
            }
            set {
                this.digitalSigningReturnFormatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DigitalSigningReturnFormatType {
        
        /// <remarks/>
        NcpdpDigitalSignature,
        
        /// <remarks/>
        NcpdpDrugCoverageStatusCodeSI,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DigitalSigningDetail {
        
        private string partnerExternalIdField;
        
        private DateTimeCompositeType digitalSigningDetailCreatedTimestampField;
        
        private DigitalSigningDetailYesNoType includeInDigitalSigningTransactionField;
        
        private DigitalSigningDetailSigningStatusType signingStatusField;
        
        private string signingStatusMessageField;
        
        private string digitallySignedMessageField;
        
        private string digitallySignedMessageToPostField;
        
        /// <remarks/>
        public string partnerExternalId {
            get {
                return this.partnerExternalIdField;
            }
            set {
                this.partnerExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType DigitalSigningDetailCreatedTimestamp {
            get {
                return this.digitalSigningDetailCreatedTimestampField;
            }
            set {
                this.digitalSigningDetailCreatedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public DigitalSigningDetailYesNoType IncludeInDigitalSigningTransaction {
            get {
                return this.includeInDigitalSigningTransactionField;
            }
            set {
                this.includeInDigitalSigningTransactionField = value;
            }
        }
        
        /// <remarks/>
        public DigitalSigningDetailSigningStatusType SigningStatus {
            get {
                return this.signingStatusField;
            }
            set {
                this.signingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string signingStatusMessage {
            get {
                return this.signingStatusMessageField;
            }
            set {
                this.signingStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string digitallySignedMessage {
            get {
                return this.digitallySignedMessageField;
            }
            set {
                this.digitallySignedMessageField = value;
            }
        }
        
        /// <remarks/>
        public string digitallySignedMessageToPost {
            get {
                return this.digitallySignedMessageToPostField;
            }
            set {
                this.digitallySignedMessageToPostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DigitalSigningDetailYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DigitalSigningDetailSigningStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        NotAttempted,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DigitalSigningBatchResult {
        
        private Result resultField;
        
        private RxBatchSummary rxBatchSummaryField;
        
        private DigitalSigningDetail[] digitalSigningDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummary rxBatchSummary {
            get {
                return this.rxBatchSummaryField;
            }
            set {
                this.rxBatchSummaryField = value;
            }
        }
        
        /// <remarks/>
        public DigitalSigningDetail[] digitalSigningDetail {
            get {
                return this.digitalSigningDetailField;
            }
            set {
                this.digitalSigningDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchDetail {
        
        private string pharmacyNcpdpIdField;
        
        private DateTimeCompositeType batchDetailCreatedTimestampField;
        
        private RxBatchDetailYesNoType includeInDigitalSigningTransactionField;
        
        private SigningStatusType signingStatusField;
        
        private string signingStatusMessageField;
        
        private RxBatchDetailYesNoType isEpcsField;
        
        private string deaScheduleField;
        
        private string prescriberStateScheduleOverrideField;
        
        private string pharmacyStateScheduleOverrideField;
        
        private string sourceDrugIdField;
        
        private string sourceDrugTypeIdField;
        
        private string mappedDrugNameField;
        
        private string mappedDrugIdField;
        
        /// <remarks/>
        public string PharmacyNcpdpId {
            get {
                return this.pharmacyNcpdpIdField;
            }
            set {
                this.pharmacyNcpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType BatchDetailCreatedTimestamp {
            get {
                return this.batchDetailCreatedTimestampField;
            }
            set {
                this.batchDetailCreatedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchDetailYesNoType IncludeInDigitalSigningTransaction {
            get {
                return this.includeInDigitalSigningTransactionField;
            }
            set {
                this.includeInDigitalSigningTransactionField = value;
            }
        }
        
        /// <remarks/>
        public SigningStatusType SigningStatus {
            get {
                return this.signingStatusField;
            }
            set {
                this.signingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SigningStatusMessage {
            get {
                return this.signingStatusMessageField;
            }
            set {
                this.signingStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchDetailYesNoType IsEpcs {
            get {
                return this.isEpcsField;
            }
            set {
                this.isEpcsField = value;
            }
        }
        
        /// <remarks/>
        public string DeaSchedule {
            get {
                return this.deaScheduleField;
            }
            set {
                this.deaScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberStateScheduleOverride {
            get {
                return this.prescriberStateScheduleOverrideField;
            }
            set {
                this.prescriberStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStateScheduleOverride {
            get {
                return this.pharmacyStateScheduleOverrideField;
            }
            set {
                this.pharmacyStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string SourceDrugId {
            get {
                return this.sourceDrugIdField;
            }
            set {
                this.sourceDrugIdField = value;
            }
        }
        
        /// <remarks/>
        public string SourceDrugTypeId {
            get {
                return this.sourceDrugTypeIdField;
            }
            set {
                this.sourceDrugTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string MappedDrugName {
            get {
                return this.mappedDrugNameField;
            }
            set {
                this.mappedDrugNameField = value;
            }
        }
        
        /// <remarks/>
        public string MappedDrugId {
            get {
                return this.mappedDrugIdField;
            }
            set {
                this.mappedDrugIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxBatchDetailYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum SigningStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        NotAttempted,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchPrescriptionDetail {
        
        private RxBatchDetail baseDetailField;
        
        private string orderGuidField;
        
        private string prescriptionExternalIdField;
        
        private string prescriptionGuidField;
        
        private string rxTransactionDetailGuidField;
        
        private RxTransactionDetailStatusType rxTransactionDetailStatusField;
        
        private string rxTransactionDetailStatusMessageField;
        
        /// <remarks/>
        public RxBatchDetail baseDetail {
            get {
                return this.baseDetailField;
            }
            set {
                this.baseDetailField = value;
            }
        }
        
        /// <remarks/>
        public string OrderGuid {
            get {
                return this.orderGuidField;
            }
            set {
                this.orderGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionExternalId {
            get {
                return this.prescriptionExternalIdField;
            }
            set {
                this.prescriptionExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string RxTransactionDetailGuid {
            get {
                return this.rxTransactionDetailGuidField;
            }
            set {
                this.rxTransactionDetailGuidField = value;
            }
        }
        
        /// <remarks/>
        public RxTransactionDetailStatusType RxTransactionDetailStatus {
            get {
                return this.rxTransactionDetailStatusField;
            }
            set {
                this.rxTransactionDetailStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RxTransactionDetailStatusMessage {
            get {
                return this.rxTransactionDetailStatusMessageField;
            }
            set {
                this.rxTransactionDetailStatusMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxTransactionDetailStatusType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Verified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxBatchPrescriptionResult {
        
        private Result resultField;
        
        private RxBatchSummary rxBatchSummaryField;
        
        private RxBatchPrescriptionDetail[] rxBatchPrescriptionDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummary rxBatchSummary {
            get {
                return this.rxBatchSummaryField;
            }
            set {
                this.rxBatchSummaryField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchPrescriptionDetail[] rxBatchPrescriptionDetail {
            get {
                return this.rxBatchPrescriptionDetailField;
            }
            set {
                this.rxBatchPrescriptionDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ClinicalMessagingAddressType {
        
        private string messagingAddressField;
        
        private MessagingProtocolType messagingProtocolField;
        
        private MessagingNetworkType messagingNetworkField;
        
        private MessagingEntityType messagingEntityField;
        
        private string messagingEntityIDField;
        
        /// <remarks/>
        public string messagingAddress {
            get {
                return this.messagingAddressField;
            }
            set {
                this.messagingAddressField = value;
            }
        }
        
        /// <remarks/>
        public MessagingProtocolType MessagingProtocol {
            get {
                return this.messagingProtocolField;
            }
            set {
                this.messagingProtocolField = value;
            }
        }
        
        /// <remarks/>
        public MessagingNetworkType MessagingNetwork {
            get {
                return this.messagingNetworkField;
            }
            set {
                this.messagingNetworkField = value;
            }
        }
        
        /// <remarks/>
        public MessagingEntityType MessagingEntity {
            get {
                return this.messagingEntityField;
            }
            set {
                this.messagingEntityField = value;
            }
        }
        
        /// <remarks/>
        public string messagingEntityID {
            get {
                return this.messagingEntityIDField;
            }
            set {
                this.messagingEntityIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum MessagingProtocolType {
        
        /// <remarks/>
        Direct,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum MessagingNetworkType {
        
        /// <remarks/>
        SureScripts,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum MessagingEntityType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        LicensedPrescriber,
        
        /// <remarks/>
        Staff,
        
        /// <remarks/>
        InterestedParty,
        
        /// <remarks/>
        SupervisingDoctor,
        
        /// <remarks/>
        MidlevelPrescriber,
        
        /// <remarks/>
        Account,
        
        /// <remarks/>
        Location,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RegisterPrescriberDetailV2 {
        
        private string doctorDeaNumberField;
        
        private string doctorNpiField;
        
        private string doctorLastNameField;
        
        private string doctorFirstNameField;
        
        private string doctorIDField;
        
        private string locationNameField;
        
        private string locationIDField;
        
        private string registrationStatusField;
        
        private string failureCodeField;
        
        private string registrationStatusMessageField;
        
        private string networkNameField;
        
        private string networkMaskField;
        
        private string startDateTimeField;
        
        private string stopDateTimeField;
        
        private string serviceLevelMaskField;
        
        private string primaryIdField;
        
        private string secondaryIdField;
        
        private string tertiaryIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string DoctorDeaNumber {
            get {
                return this.doctorDeaNumberField;
            }
            set {
                this.doctorDeaNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorNpi {
            get {
                return this.doctorNpiField;
            }
            set {
                this.doctorNpiField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorLastName {
            get {
                return this.doctorLastNameField;
            }
            set {
                this.doctorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFirstName {
            get {
                return this.doctorFirstNameField;
            }
            set {
                this.doctorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorID {
            get {
                return this.doctorIDField;
            }
            set {
                this.doctorIDField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationID {
            get {
                return this.locationIDField;
            }
            set {
                this.locationIDField = value;
            }
        }
        
        /// <remarks/>
        public string RegistrationStatus {
            get {
                return this.registrationStatusField;
            }
            set {
                this.registrationStatusField = value;
            }
        }
        
        /// <remarks/>
        public string FailureCode {
            get {
                return this.failureCodeField;
            }
            set {
                this.failureCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RegistrationStatusMessage {
            get {
                return this.registrationStatusMessageField;
            }
            set {
                this.registrationStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string NetworkName {
            get {
                return this.networkNameField;
            }
            set {
                this.networkNameField = value;
            }
        }
        
        /// <remarks/>
        public string NetworkMask {
            get {
                return this.networkMaskField;
            }
            set {
                this.networkMaskField = value;
            }
        }
        
        /// <remarks/>
        public string StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string StopDateTime {
            get {
                return this.stopDateTimeField;
            }
            set {
                this.stopDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceLevelMask {
            get {
                return this.serviceLevelMaskField;
            }
            set {
                this.serviceLevelMaskField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryId {
            get {
                return this.primaryIdField;
            }
            set {
                this.primaryIdField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryId {
            get {
                return this.secondaryIdField;
            }
            set {
                this.secondaryIdField = value;
            }
        }
        
        /// <remarks/>
        public string TertiaryId {
            get {
                return this.tertiaryIdField;
            }
            set {
                this.tertiaryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RegisterPrescriberDetailV2Result {
        
        private Result resultField;
        
        private RegisterPrescriberDetailV2[] registerPrescriberDetailV2ArrayField;
        
        private ClinicalMessagingAddressType[] clinicalMessagingAddressArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RegisterPrescriberDetailV2[] registerPrescriberDetailV2Array {
            get {
                return this.registerPrescriberDetailV2ArrayField;
            }
            set {
                this.registerPrescriberDetailV2ArrayField = value;
            }
        }
        
        /// <remarks/>
        public ClinicalMessagingAddressType[] clinicalMessagingAddressArray {
            get {
                return this.clinicalMessagingAddressArrayField;
            }
            set {
                this.clinicalMessagingAddressArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RegistryDetail {
        
        private string transactionIDField;
        
        private string statusField;
        
        private string messageField;
        
        private System.DateTime statusTimestampField;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StatusTimestamp {
            get {
                return this.statusTimestampField;
            }
            set {
                this.statusTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RegistryDetailResult {
        
        private Result resultField;
        
        private RegistryDetail registryDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RegistryDetail registryDetail {
            get {
                return this.registryDetailField;
            }
            set {
                this.registryDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugAllergyDetailV2 {
        
        private string interactionTextField;
        
        private string drugField;
        
        private string drugIDField;
        
        private string drugTypeField;
        
        private string compositeAllergyIdField;
        
        private string sourceField;
        
        private string conceptIdField;
        
        private string conceptTypeField;
        
        private string descriptionField;
        
        private string performanceField;
        
        /// <remarks/>
        public string InteractionText {
            get {
                return this.interactionTextField;
            }
            set {
                this.interactionTextField = value;
            }
        }
        
        /// <remarks/>
        public string Drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugType {
            get {
                return this.drugTypeField;
            }
            set {
                this.drugTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CompositeAllergyId {
            get {
                return this.compositeAllergyIdField;
            }
            set {
                this.compositeAllergyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptId {
            get {
                return this.conceptIdField;
            }
            set {
                this.conceptIdField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptType {
            get {
                return this.conceptTypeField;
            }
            set {
                this.conceptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Performance {
            get {
                return this.performanceField;
            }
            set {
                this.performanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugAllergyDetailResultV2 {
        
        private Result resultField;
        
        private DrugAllergyDetailV2[] drugAllergyDetailArrayV2Field;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugAllergyDetailV2[] drugAllergyDetailArrayV2 {
            get {
                return this.drugAllergyDetailArrayV2Field;
            }
            set {
                this.drugAllergyDetailArrayV2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class MessageTransactionStatusDetail {
        
        private string messageIdField;
        
        private string messageTransactionSourceField;
        
        private string messageTransactionSubSourceField;
        
        private string messageTransactionStateField;
        
        private string messageTimestampField;
        
        private string externalPatientIdField;
        
        private string externalUserIdField;
        
        private string externalUserIdTypeField;
        
        /// <remarks/>
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTransactionSource {
            get {
                return this.messageTransactionSourceField;
            }
            set {
                this.messageTransactionSourceField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTransactionSubSource {
            get {
                return this.messageTransactionSubSourceField;
            }
            set {
                this.messageTransactionSubSourceField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTransactionState {
            get {
                return this.messageTransactionStateField;
            }
            set {
                this.messageTransactionStateField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTimestamp {
            get {
                return this.messageTimestampField;
            }
            set {
                this.messageTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalUserIdType {
            get {
                return this.externalUserIdTypeField;
            }
            set {
                this.externalUserIdTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class MessageTransactionStatusResult {
        
        private Result resultField;
        
        private MessageTransactionStatusDetail messageTransactionStatusDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public MessageTransactionStatusDetail messageTransactionStatusDetail {
            get {
                return this.messageTransactionStatusDetailField;
            }
            set {
                this.messageTransactionStatusDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetailV3 {
        
        private string sourceField;
        
        private string pBMField;
        
        private string planField;
        
        private string cardHolderField;
        
        private string cardHolderIDField;
        
        private string pharmacyBenefitField;
        
        private string mailOrderBenefitField;
        
        private string specialtyPharmacyBenefitField;
        
        private string lTCBenefitField;
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string PBM {
            get {
                return this.pBMField;
            }
            set {
                this.pBMField = value;
            }
        }
        
        /// <remarks/>
        public string Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolder {
            get {
                return this.cardHolderField;
            }
            set {
                this.cardHolderField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolderID {
            get {
                return this.cardHolderIDField;
            }
            set {
                this.cardHolderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyBenefit {
            get {
                return this.pharmacyBenefitField;
            }
            set {
                this.pharmacyBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string MailOrderBenefit {
            get {
                return this.mailOrderBenefitField;
            }
            set {
                this.mailOrderBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialtyPharmacyBenefit {
            get {
                return this.specialtyPharmacyBenefitField;
            }
            set {
                this.specialtyPharmacyBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string LTCBenefit {
            get {
                return this.lTCBenefitField;
            }
            set {
                this.lTCBenefitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetailResultV3 {
        
        private Result resultField;
        
        private string eligibilityGuidField;
        
        private EligibilityDetailV3[] eligibilityDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string eligibilityGuid {
            get {
                return this.eligibilityGuidField;
            }
            set {
                this.eligibilityGuidField = value;
            }
        }
        
        /// <remarks/>
        public EligibilityDetailV3[] eligibilityDetailArray {
            get {
                return this.eligibilityDetailArrayField;
            }
            set {
                this.eligibilityDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetail {
        
        private string sourceField;
        
        private string pBMField;
        
        private string planField;
        
        private string cardHolderField;
        
        private string cardHolderIDField;
        
        private string pharmacyBenefitField;
        
        private string mailOrderBenefitField;
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string PBM {
            get {
                return this.pBMField;
            }
            set {
                this.pBMField = value;
            }
        }
        
        /// <remarks/>
        public string Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolder {
            get {
                return this.cardHolderField;
            }
            set {
                this.cardHolderField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolderID {
            get {
                return this.cardHolderIDField;
            }
            set {
                this.cardHolderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyBenefit {
            get {
                return this.pharmacyBenefitField;
            }
            set {
                this.pharmacyBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string MailOrderBenefit {
            get {
                return this.mailOrderBenefitField;
            }
            set {
                this.mailOrderBenefitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetailResult {
        
        private Result resultField;
        
        private string eligibilityGuidField;
        
        private EligibilityDetail[] eligibilityDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string eligibilityGuid {
            get {
                return this.eligibilityGuidField;
            }
            set {
                this.eligibilityGuidField = value;
            }
        }
        
        /// <remarks/>
        public EligibilityDetail[] eligibilityDetailArray {
            get {
                return this.eligibilityDetailArrayField;
            }
            set {
                this.eligibilityDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class AccountStatusDetailV2 {
        
        private string pendingRxCountField;
        
        private string unreviewedFailedFaxCountField;
        
        private string unansweredRenewalRequestCountField;
        
        private string unreadClinicalMessageCountField;
        
        private string unreviewedLabResultCountField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string PendingRxCount {
            get {
                return this.pendingRxCountField;
            }
            set {
                this.pendingRxCountField = value;
            }
        }
        
        /// <remarks/>
        public string UnreviewedFailedFaxCount {
            get {
                return this.unreviewedFailedFaxCountField;
            }
            set {
                this.unreviewedFailedFaxCountField = value;
            }
        }
        
        /// <remarks/>
        public string UnansweredRenewalRequestCount {
            get {
                return this.unansweredRenewalRequestCountField;
            }
            set {
                this.unansweredRenewalRequestCountField = value;
            }
        }
        
        /// <remarks/>
        public string UnreadClinicalMessageCount {
            get {
                return this.unreadClinicalMessageCountField;
            }
            set {
                this.unreadClinicalMessageCountField = value;
            }
        }
        
        /// <remarks/>
        public string UnreviewedLabResultCount {
            get {
                return this.unreviewedLabResultCountField;
            }
            set {
                this.unreviewedLabResultCountField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class AccountStatusDetailV2Result {
        
        private Result resultField;
        
        private AccountStatusDetailV2 accountStatusDetailV2Field;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public AccountStatusDetailV2 accountStatusDetailV2 {
            get {
                return this.accountStatusDetailV2Field;
            }
            set {
                this.accountStatusDetailV2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CounselingMessageDetail {
        
        private string displayOrderField;
        
        private string professionalMessageField;
        
        private string patientMessageField;
        
        /// <remarks/>
        public string displayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
        
        /// <remarks/>
        public string professionalMessage {
            get {
                return this.professionalMessageField;
            }
            set {
                this.professionalMessageField = value;
            }
        }
        
        /// <remarks/>
        public string patientMessage {
            get {
                return this.patientMessageField;
            }
            set {
                this.patientMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CounselingMessageDetailResult {
        
        private Result resultField;
        
        private CounselingMessageDetail[] counselingMessageDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public CounselingMessageDetail[] counselingMessageDetail {
            get {
                return this.counselingMessageDetailField;
            }
            set {
                this.counselingMessageDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class FormularyCoverageDetailV3 {
        
        private string drugConceptField;
        
        private string formularyStatusField;
        
        private string formularyStatusDescField;
        
        private string therapeuticClassDescField;
        
        private string therapeuticSubClassDescField;
        
        /// <remarks/>
        public string drugConcept {
            get {
                return this.drugConceptField;
            }
            set {
                this.drugConceptField = value;
            }
        }
        
        /// <remarks/>
        public string formularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string formularyStatusDesc {
            get {
                return this.formularyStatusDescField;
            }
            set {
                this.formularyStatusDescField = value;
            }
        }
        
        /// <remarks/>
        public string therapeuticClassDesc {
            get {
                return this.therapeuticClassDescField;
            }
            set {
                this.therapeuticClassDescField = value;
            }
        }
        
        /// <remarks/>
        public string therapeuticSubClassDesc {
            get {
                return this.therapeuticSubClassDescField;
            }
            set {
                this.therapeuticSubClassDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class FormularyCoverageDetailResultV3 {
        
        private Result resultField;
        
        private FormularyCoverageDetailV3[] formularyCoverageDetailV3ArrayField;
        
        private FormularyCoverageDetailV3[] formularyCoverageAlternativesDetailV3ArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public FormularyCoverageDetailV3[] formularyCoverageDetailV3Array {
            get {
                return this.formularyCoverageDetailV3ArrayField;
            }
            set {
                this.formularyCoverageDetailV3ArrayField = value;
            }
        }
        
        /// <remarks/>
        public FormularyCoverageDetailV3[] formularyCoverageAlternativesDetailV3Array {
            get {
                return this.formularyCoverageAlternativesDetailV3ArrayField;
            }
            set {
                this.formularyCoverageAlternativesDetailV3ArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class HealthplanDetail {
        
        private string orgIdField;
        
        private string orgNameField;
        
        private string orgTypeField;
        
        /// <remarks/>
        public string orgId {
            get {
                return this.orgIdField;
            }
            set {
                this.orgIdField = value;
            }
        }
        
        /// <remarks/>
        public string orgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
            }
        }
        
        /// <remarks/>
        public string orgType {
            get {
                return this.orgTypeField;
            }
            set {
                this.orgTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class HealthplanDetailResult {
        
        private Result resultField;
        
        private HealthplanDetail[] healthplanDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public HealthplanDetail[] healthplanDetail {
            get {
                return this.healthplanDetailField;
            }
            set {
                this.healthplanDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyFavoriteDetail {
        
        private string dataProviderField;
        
        private string drugField;
        
        private string drugIDField;
        
        private string drugSubID1Field;
        
        private string drugNameField;
        
        private string drugNameIDField;
        
        private string genericNameField;
        
        private string deaClassCodeField;
        
        private string dosageField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string statusField;
        
        private string therapeuticClassField;
        
        private string touchdateField;
        
        private string formularyCoverageField;
        
        private string formularyTextField;
        
        private string formularySummaryField;
        
        private string formularyMessageField;
        
        private string favoritesListStatusField;
        
        /// <remarks/>
        public string DataProvider {
            get {
                return this.dataProviderField;
            }
            set {
                this.dataProviderField = value;
            }
        }
        
        /// <remarks/>
        public string Drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugSubID1 {
            get {
                return this.drugSubID1Field;
            }
            set {
                this.drugSubID1Field = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNameID {
            get {
                return this.drugNameIDField;
            }
            set {
                this.drugNameIDField = value;
            }
        }
        
        /// <remarks/>
        public string GenericName {
            get {
                return this.genericNameField;
            }
            set {
                this.genericNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeaClassCode {
            get {
                return this.deaClassCodeField;
            }
            set {
                this.deaClassCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TherapeuticClass {
            get {
                return this.therapeuticClassField;
            }
            set {
                this.therapeuticClassField = value;
            }
        }
        
        /// <remarks/>
        public string Touchdate {
            get {
                return this.touchdateField;
            }
            set {
                this.touchdateField = value;
            }
        }
        
        /// <remarks/>
        public string formularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
        
        /// <remarks/>
        public string formularyText {
            get {
                return this.formularyTextField;
            }
            set {
                this.formularyTextField = value;
            }
        }
        
        /// <remarks/>
        public string formularySummary {
            get {
                return this.formularySummaryField;
            }
            set {
                this.formularySummaryField = value;
            }
        }
        
        /// <remarks/>
        public string formularyMessage {
            get {
                return this.formularyMessageField;
            }
            set {
                this.formularyMessageField = value;
            }
        }
        
        /// <remarks/>
        public string favoritesListStatus {
            get {
                return this.favoritesListStatusField;
            }
            set {
                this.favoritesListStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyFavoriteDetailResult {
        
        private Result resultField;
        
        private DrugFormularyFavoriteDetail[] drugFormularyFavoriteDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugFormularyFavoriteDetail[] drugFormularyFavoriteDetail {
            get {
                return this.drugFormularyFavoriteDetailField;
            }
            set {
                this.drugFormularyFavoriteDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailV5 {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string crossStreetField;
        
        private string pharmacyTypeField;
        
        private string pharmacyDetailTypeField;
        
        private string serviceLevelField;
        
        private string statusField;
        
        private string touchDateField;
        
        private string npiField;
        
        private string specialty1Field;
        
        private string specialty2Field;
        
        private string specialty3Field;
        
        private string specialty4Field;
        
        private PharmacyVersionNumberType pharmacyVersionNumberField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyDetailType {
            get {
                return this.pharmacyDetailTypeField;
            }
            set {
                this.pharmacyDetailTypeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLevel {
            get {
                return this.serviceLevelField;
            }
            set {
                this.serviceLevelField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string specialty1 {
            get {
                return this.specialty1Field;
            }
            set {
                this.specialty1Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty2 {
            get {
                return this.specialty2Field;
            }
            set {
                this.specialty2Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty3 {
            get {
                return this.specialty3Field;
            }
            set {
                this.specialty3Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty4 {
            get {
                return this.specialty4Field;
            }
            set {
                this.specialty4Field = value;
            }
        }
        
        /// <remarks/>
        public PharmacyVersionNumberType pharmacyVersionNumber {
            get {
                return this.pharmacyVersionNumberField;
            }
            set {
                this.pharmacyVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum PharmacyVersionNumberType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        UnlistedVersion,
        
        /// <remarks/>
        V42,
        
        /// <remarks/>
        V81,
        
        /// <remarks/>
        V106,
        
        /// <remarks/>
        V106MU2,
        
        /// <remarks/>
        V6,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailResultV5 {
        
        private Result resultField;
        
        private PharmacyDetailV5[] pharmacyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetailV5[] pharmacyDetailArray {
            get {
                return this.pharmacyDetailArrayField;
            }
            set {
                this.pharmacyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailV4 {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string crossStreetField;
        
        private string pharmacyTypeField;
        
        private string pharmacyDetailTypeField;
        
        private string serviceLevelField;
        
        private string statusField;
        
        private string touchDateField;
        
        private string npiField;
        
        private string specialty1Field;
        
        private string specialty2Field;
        
        private string specialty3Field;
        
        private string specialty4Field;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyDetailType {
            get {
                return this.pharmacyDetailTypeField;
            }
            set {
                this.pharmacyDetailTypeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLevel {
            get {
                return this.serviceLevelField;
            }
            set {
                this.serviceLevelField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string specialty1 {
            get {
                return this.specialty1Field;
            }
            set {
                this.specialty1Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty2 {
            get {
                return this.specialty2Field;
            }
            set {
                this.specialty2Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty3 {
            get {
                return this.specialty3Field;
            }
            set {
                this.specialty3Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty4 {
            get {
                return this.specialty4Field;
            }
            set {
                this.specialty4Field = value;
            }
        }
        
        /// <remarks/>
        public string spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailResultV4 {
        
        private Result resultField;
        
        private PharmacyDetailV4[] pharmacyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetailV4[] pharmacyDetailArray {
            get {
                return this.pharmacyDetailArrayField;
            }
            set {
                this.pharmacyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailV2 {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string crossStreetField;
        
        private string pharmacyTypeField;
        
        private string pharmacyDetailTypeField;
        
        private string statusField;
        
        private string touchDateField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyDetailType {
            get {
                return this.pharmacyDetailTypeField;
            }
            set {
                this.pharmacyDetailTypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
        
        /// <remarks/>
        public string spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailResultV2 {
        
        private Result resultField;
        
        private PharmacyDetailV2[] pharmacyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetailV2[] pharmacyDetailArray {
            get {
                return this.pharmacyDetailArrayField;
            }
            set {
                this.pharmacyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDiseaseDetailV2 {
        
        private string drugNameField;
        
        private string iCD9Field;
        
        private string directConditionField;
        
        private string relatedConditionField;
        
        private string severityLevelField;
        
        private string severityLevelTextField;
        
        private string severityLevelShortTextField;
        
        private string diseaseRelationField;
        
        private string diseaseRelationTextField;
        
        private string drugIdField;
        
        private string drugTypeIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9 {
            get {
                return this.iCD9Field;
            }
            set {
                this.iCD9Field = value;
            }
        }
        
        /// <remarks/>
        public string DirectCondition {
            get {
                return this.directConditionField;
            }
            set {
                this.directConditionField = value;
            }
        }
        
        /// <remarks/>
        public string RelatedCondition {
            get {
                return this.relatedConditionField;
            }
            set {
                this.relatedConditionField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevel {
            get {
                return this.severityLevelField;
            }
            set {
                this.severityLevelField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevelText {
            get {
                return this.severityLevelTextField;
            }
            set {
                this.severityLevelTextField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevelShortText {
            get {
                return this.severityLevelShortTextField;
            }
            set {
                this.severityLevelShortTextField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseRelation {
            get {
                return this.diseaseRelationField;
            }
            set {
                this.diseaseRelationField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseRelationText {
            get {
                return this.diseaseRelationTextField;
            }
            set {
                this.diseaseRelationTextField = value;
            }
        }
        
        /// <remarks/>
        public string DrugId {
            get {
                return this.drugIdField;
            }
            set {
                this.drugIdField = value;
            }
        }
        
        /// <remarks/>
        public string DrugTypeId {
            get {
                return this.drugTypeIdField;
            }
            set {
                this.drugTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDiseaseDetailResultV2 {
        
        private Result resultField;
        
        private DrugDiseaseDetailV2[] drugDiseaseDetailV2ArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugDiseaseDetailV2[] drugDiseaseDetailV2Array {
            get {
                return this.drugDiseaseDetailV2ArrayField;
            }
            set {
                this.drugDiseaseDetailV2ArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDiseaseDetail {
        
        private string drugNameField;
        
        private string iCD9Field;
        
        private string directConditionField;
        
        private string relatedConditionField;
        
        private string severityLevelField;
        
        private string severityLevelTextField;
        
        private string severityLevelShortTextField;
        
        private string diseaseRelationField;
        
        private string diseaseRelationTextField;
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9 {
            get {
                return this.iCD9Field;
            }
            set {
                this.iCD9Field = value;
            }
        }
        
        /// <remarks/>
        public string DirectCondition {
            get {
                return this.directConditionField;
            }
            set {
                this.directConditionField = value;
            }
        }
        
        /// <remarks/>
        public string RelatedCondition {
            get {
                return this.relatedConditionField;
            }
            set {
                this.relatedConditionField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevel {
            get {
                return this.severityLevelField;
            }
            set {
                this.severityLevelField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevelText {
            get {
                return this.severityLevelTextField;
            }
            set {
                this.severityLevelTextField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevelShortText {
            get {
                return this.severityLevelShortTextField;
            }
            set {
                this.severityLevelShortTextField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseRelation {
            get {
                return this.diseaseRelationField;
            }
            set {
                this.diseaseRelationField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseRelationText {
            get {
                return this.diseaseRelationTextField;
            }
            set {
                this.diseaseRelationTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDiseaseDetailResult {
        
        private Result resultField;
        
        private DrugDiseaseDetail[] drugDiseaseDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugDiseaseDetail[] drugDiseaseDetailArray {
            get {
                return this.drugDiseaseDetailArrayField;
            }
            set {
                this.drugDiseaseDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DownloadDetail {
        
        private string latestDownloadMonthField;
        
        private string latestDownloadDayField;
        
        private string latestDownloadYearField;
        
        private string latestDownloadSizeField;
        
        private string latestDownloadUrlField;
        
        private string cchitDrugDatabaseDateField;
        
        private string commentsField;
        
        /// <remarks/>
        public string LatestDownloadMonth {
            get {
                return this.latestDownloadMonthField;
            }
            set {
                this.latestDownloadMonthField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadDay {
            get {
                return this.latestDownloadDayField;
            }
            set {
                this.latestDownloadDayField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadYear {
            get {
                return this.latestDownloadYearField;
            }
            set {
                this.latestDownloadYearField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadSize {
            get {
                return this.latestDownloadSizeField;
            }
            set {
                this.latestDownloadSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadUrl {
            get {
                return this.latestDownloadUrlField;
            }
            set {
                this.latestDownloadUrlField = value;
            }
        }
        
        /// <remarks/>
        public string CchitDrugDatabaseDate {
            get {
                return this.cchitDrugDatabaseDateField;
            }
            set {
                this.cchitDrugDatabaseDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DownloadDetailResult {
        
        private Result resultField;
        
        private DownloadDetail downloadDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DownloadDetail downloadDetail {
            get {
                return this.downloadDetailField;
            }
            set {
                this.downloadDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugHistoryDetailV3 {
        
        private string drugInfoField;
        
        private string drugNdcField;
        
        private string doctorLastNameField;
        
        private string doctorFirstNameField;
        
        private string doctorContactNumberField;
        
        private string pharmacyNameField;
        
        private string pharmacyContactNumberField;
        
        private string fillDateField;
        
        private string sourceField;
        
        private string healthplanNameField;
        
        private string drugIdField;
        
        private string drugQuantityField;
        
        private DrugHistorySourceType drugHistorySourceField;
        
        private DrugHistoryDxType drugHistoryDxField;
        
        private string primaryDxCodeField;
        
        private string primaryDxDescriptionField;
        
        private string secondaryDxCodeField;
        
        private string secondaryDxDescriptionField;
        
        private DrugHistorySourceType drugHistorySource2Field;
        
        private DrugHistoryDxType drugHistoryDx2Field;
        
        private string primaryDxCode2Field;
        
        private string primaryDxDescription2Field;
        
        private string secondaryDxCode2Field;
        
        private string secondaryDxDescription2Field;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        private string spare6Field;
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNdc {
            get {
                return this.drugNdcField;
            }
            set {
                this.drugNdcField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorLastName {
            get {
                return this.doctorLastNameField;
            }
            set {
                this.doctorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFirstName {
            get {
                return this.doctorFirstNameField;
            }
            set {
                this.doctorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorContactNumber {
            get {
                return this.doctorContactNumberField;
            }
            set {
                this.doctorContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyContactNumber {
            get {
                return this.pharmacyContactNumberField;
            }
            set {
                this.pharmacyContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FillDate {
            get {
                return this.fillDateField;
            }
            set {
                this.fillDateField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanName {
            get {
                return this.healthplanNameField;
            }
            set {
                this.healthplanNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugId {
            get {
                return this.drugIdField;
            }
            set {
                this.drugIdField = value;
            }
        }
        
        /// <remarks/>
        public string DrugQuantity {
            get {
                return this.drugQuantityField;
            }
            set {
                this.drugQuantityField = value;
            }
        }
        
        /// <remarks/>
        public DrugHistorySourceType DrugHistorySource {
            get {
                return this.drugHistorySourceField;
            }
            set {
                this.drugHistorySourceField = value;
            }
        }
        
        /// <remarks/>
        public DrugHistoryDxType DrugHistoryDx {
            get {
                return this.drugHistoryDxField;
            }
            set {
                this.drugHistoryDxField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryDxCode {
            get {
                return this.primaryDxCodeField;
            }
            set {
                this.primaryDxCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryDxDescription {
            get {
                return this.primaryDxDescriptionField;
            }
            set {
                this.primaryDxDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryDxCode {
            get {
                return this.secondaryDxCodeField;
            }
            set {
                this.secondaryDxCodeField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryDxDescription {
            get {
                return this.secondaryDxDescriptionField;
            }
            set {
                this.secondaryDxDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public DrugHistorySourceType DrugHistorySource2 {
            get {
                return this.drugHistorySource2Field;
            }
            set {
                this.drugHistorySource2Field = value;
            }
        }
        
        /// <remarks/>
        public DrugHistoryDxType DrugHistoryDx2 {
            get {
                return this.drugHistoryDx2Field;
            }
            set {
                this.drugHistoryDx2Field = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryDxCode2 {
            get {
                return this.primaryDxCode2Field;
            }
            set {
                this.primaryDxCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryDxDescription2 {
            get {
                return this.primaryDxDescription2Field;
            }
            set {
                this.primaryDxDescription2Field = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryDxCode2 {
            get {
                return this.secondaryDxCode2Field;
            }
            set {
                this.secondaryDxCode2Field = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryDxDescription2 {
            get {
                return this.secondaryDxDescription2Field;
            }
            set {
                this.secondaryDxDescription2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DrugHistorySourceType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Prescriber,
        
        /// <remarks/>
        PharmacyInferred,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DrugHistoryDxType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        ICD10,
        
        /// <remarks/>
        ICD11,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugHistoryDetailV3Result {
        
        private Result resultField;
        
        private DrugHistoryDetailV3[] drugHistoryDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugHistoryDetailV3[] drugHistoryDetailArray {
            get {
                return this.drugHistoryDetailArrayField;
            }
            set {
                this.drugHistoryDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugHistoryDetail {
        
        private string drugInfoField;
        
        private string drugNdcField;
        
        private string doctorLastNameField;
        
        private string doctorFirstNameField;
        
        private string doctorContactNumberField;
        
        private string pharmacyNameField;
        
        private string pharmacyContactNumberField;
        
        private string fillDateField;
        
        private string sourceField;
        
        private string healthplanNameField;
        
        private string drugIdField;
        
        private string drugQuantityField;
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNdc {
            get {
                return this.drugNdcField;
            }
            set {
                this.drugNdcField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorLastName {
            get {
                return this.doctorLastNameField;
            }
            set {
                this.doctorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFirstName {
            get {
                return this.doctorFirstNameField;
            }
            set {
                this.doctorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorContactNumber {
            get {
                return this.doctorContactNumberField;
            }
            set {
                this.doctorContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyContactNumber {
            get {
                return this.pharmacyContactNumberField;
            }
            set {
                this.pharmacyContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FillDate {
            get {
                return this.fillDateField;
            }
            set {
                this.fillDateField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanName {
            get {
                return this.healthplanNameField;
            }
            set {
                this.healthplanNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugId {
            get {
                return this.drugIdField;
            }
            set {
                this.drugIdField = value;
            }
        }
        
        /// <remarks/>
        public string DrugQuantity {
            get {
                return this.drugQuantityField;
            }
            set {
                this.drugQuantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugHistoryDetailResult {
        
        private Result resultField;
        
        private DrugHistoryDetail[] drugHistoryDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugHistoryDetail[] drugHistoryDetailArray {
            get {
                return this.drugHistoryDetailArrayField;
            }
            set {
                this.drugHistoryDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDetail {
        
        private string dataProviderField;
        
        private string drugField;
        
        private string drugIDField;
        
        private string drugSubID1Field;
        
        private string drugNameField;
        
        private string drugNameIDField;
        
        private string genericNameField;
        
        private string deaClassCodeField;
        
        private string dosageField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string statusField;
        
        private string therapeuticClassField;
        
        private string deaGenericNamedCodeField;
        
        private string deaGenericNamedDescriptionField;
        
        private string deaLegendCodeField;
        
        private string deaLegendDescriptionField;
        
        private string touchdateField;
        
        /// <remarks/>
        public string DataProvider {
            get {
                return this.dataProviderField;
            }
            set {
                this.dataProviderField = value;
            }
        }
        
        /// <remarks/>
        public string Drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugSubID1 {
            get {
                return this.drugSubID1Field;
            }
            set {
                this.drugSubID1Field = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNameID {
            get {
                return this.drugNameIDField;
            }
            set {
                this.drugNameIDField = value;
            }
        }
        
        /// <remarks/>
        public string GenericName {
            get {
                return this.genericNameField;
            }
            set {
                this.genericNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeaClassCode {
            get {
                return this.deaClassCodeField;
            }
            set {
                this.deaClassCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TherapeuticClass {
            get {
                return this.therapeuticClassField;
            }
            set {
                this.therapeuticClassField = value;
            }
        }
        
        /// <remarks/>
        public string DeaGenericNamedCode {
            get {
                return this.deaGenericNamedCodeField;
            }
            set {
                this.deaGenericNamedCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeaGenericNamedDescription {
            get {
                return this.deaGenericNamedDescriptionField;
            }
            set {
                this.deaGenericNamedDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DeaLegendCode {
            get {
                return this.deaLegendCodeField;
            }
            set {
                this.deaLegendCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeaLegendDescription {
            get {
                return this.deaLegendDescriptionField;
            }
            set {
                this.deaLegendDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Touchdate {
            get {
                return this.touchdateField;
            }
            set {
                this.touchdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyDetail {
        
        private DrugDetail drugDetailField;
        
        private string formularyCoverageField;
        
        /// <remarks/>
        public DrugDetail drugDetail {
            get {
                return this.drugDetailField;
            }
            set {
                this.drugDetailField = value;
            }
        }
        
        /// <remarks/>
        public string formularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyDetailResult {
        
        private Result resultField;
        
        private DrugFormularyDetail[] drugFormularyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugFormularyDetail[] drugFormularyDetailArray {
            get {
                return this.drugFormularyDetailArrayField;
            }
            set {
                this.drugFormularyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalResponseDetail {
        
        private string renewalRequestIdentifierField;
        
        private string statusField;
        
        private string messageField;
        
        private string sentTimestampField;
        
        /// <remarks/>
        public string RenewalRequestIdentifier {
            get {
                return this.renewalRequestIdentifierField;
            }
            set {
                this.renewalRequestIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string SentTimestamp {
            get {
                return this.sentTimestampField;
            }
            set {
                this.sentTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalResponseDetailResult {
        
        private Result resultField;
        
        private RenewalResponseDetail renewalResponseDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalResponseDetail renewalResponseDetail {
            get {
                return this.renewalResponseDetailField;
            }
            set {
                this.renewalResponseDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DirectivesType {
        
        private RenewalDigitalSigningYesNoType digitalSigningIsRequiredField;
        
        private RenewalDigitalSigningProviderType digitalSigningServiceProviderField;
        
        private RenewalDigitalSigningYesNoType schedulePreventsElecTransmissionField;
        
        private string statusMessageField;
        
        /// <remarks/>
        public RenewalDigitalSigningYesNoType DigitalSigningIsRequired {
            get {
                return this.digitalSigningIsRequiredField;
            }
            set {
                this.digitalSigningIsRequiredField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDigitalSigningProviderType DigitalSigningServiceProvider {
            get {
                return this.digitalSigningServiceProviderField;
            }
            set {
                this.digitalSigningServiceProviderField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDigitalSigningYesNoType SchedulePreventsElecTransmission {
            get {
                return this.schedulePreventsElecTransmissionField;
            }
            set {
                this.schedulePreventsElecTransmissionField = value;
            }
        }
        
        /// <remarks/>
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                this.statusMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RenewalDigitalSigningYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RenewalDigitalSigningProviderType {
        
        /// <remarks/>
        Provider1,
        
        /// <remarks/>
        Provider2,
        
        /// <remarks/>
        Provider3,
        
        /// <remarks/>
        Provider4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DerivedSchedulesType {
        
        private string prescriberStateScheduleOverrideField;
        
        private string pharmacyStateScheduleOverrideField;
        
        private string dispensedPrescriberStateScheduleOverrideField;
        
        private string dispensedPharmacyStateScheduleOverrideField;
        
        /// <remarks/>
        public string PrescriberStateScheduleOverride {
            get {
                return this.prescriberStateScheduleOverrideField;
            }
            set {
                this.prescriberStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStateScheduleOverride {
            get {
                return this.pharmacyStateScheduleOverrideField;
            }
            set {
                this.pharmacyStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPrescriberStateScheduleOverride {
            get {
                return this.dispensedPrescriberStateScheduleOverrideField;
            }
            set {
                this.dispensedPrescriberStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPharmacyStateScheduleOverride {
            get {
                return this.dispensedPharmacyStateScheduleOverrideField;
            }
            set {
                this.dispensedPharmacyStateScheduleOverrideField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailResultV5 {
        
        private Result resultField;
        
        private RenewalDetailV4 renewalDetailField;
        
        private DerivedSchedulesType derivedSchedulesField;
        
        private DirectivesType directivesField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetailV4 renewalDetail {
            get {
                return this.renewalDetailField;
            }
            set {
                this.renewalDetailField = value;
            }
        }
        
        /// <remarks/>
        public DerivedSchedulesType derivedSchedules {
            get {
                return this.derivedSchedulesField;
            }
            set {
                this.derivedSchedulesField = value;
            }
        }
        
        /// <remarks/>
        public DirectivesType directives {
            get {
                return this.directivesField;
            }
            set {
                this.directivesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailV4 {
        
        private string formatTypeField;
        
        private string formatVersionField;
        
        private string compressionTypeField;
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        private string ncpdpIdField;
        
        private string prescriberOrderNumberField;
        
        private string rxReferenceNumberField;
        
        private string locationNameField;
        
        private string prescriberFullNameField;
        
        private string prescriberPhoneNumberField;
        
        private string prescriberContactNumbersField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientSuffixField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string patientAddressLine1Field;
        
        private string patientAddressLine2Field;
        
        private string patientAddressCityField;
        
        private string patientAddressStateField;
        
        private string patientAddressZipCodeField;
        
        private string patientPhoneNumberField;
        
        private string patientContactNumbersField;
        
        private string nDCField;
        
        private string drugInfoField;
        
        private string numberOfRefillsField;
        
        private string refillQualifierField;
        
        private string quantityField;
        
        private string quantityQualifierField;
        
        private string potencyUnitCodeField;
        
        private string sigField;
        
        private string pharmacistMessageField;
        
        private string substitutionAllowedField;
        
        private string writtenDateField;
        
        private string lastFillDateField;
        
        private string diagnosisCodesField;
        
        private string priorAuthorizationNumberField;
        
        private string priorAuthorizationQualifierField;
        
        private string daysSupplyField;
        
        private string deaScheduleField;
        
        private string stateDeaScheduleField;
        
        private string dispensedNDCField;
        
        private string dispensedDrugInfoField;
        
        private string dispensedNumberOfRefillsField;
        
        private string dispensedRefillQualifierField;
        
        private string dispensedQuantityField;
        
        private string dispensedQuantityQualifierField;
        
        private string dispensedPotencyUnitCodeField;
        
        private string dispensedSigField;
        
        private string dispensedPharmacistMessageField;
        
        private string dispensedSubstitutionAllowedField;
        
        private string dispensedWrittenDateField;
        
        private string dispensedLastFillDateField;
        
        private string dispensedDiagnosisCodesField;
        
        private string dispensedPriorAuthorizationNumberField;
        
        private string dispensedPriorAuthorizationQualifierField;
        
        private string dispensedDaysSupplyField;
        
        private string dispensedDeaScheduleField;
        
        private string dispensedStateDeaScheduleField;
        
        private string assignedToDoctorExternalIdField;
        
        private string assignedByStaffExternalIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        private string spare6Field;
        
        /// <remarks/>
        public string FormatType {
            get {
                return this.formatTypeField;
            }
            set {
                this.formatTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FormatVersion {
            get {
                return this.formatVersionField;
            }
            set {
                this.formatVersionField = value;
            }
        }
        
        /// <remarks/>
        public string CompressionType {
            get {
                return this.compressionTypeField;
            }
            set {
                this.compressionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpId {
            get {
                return this.ncpdpIdField;
            }
            set {
                this.ncpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberOrderNumber {
            get {
                return this.prescriberOrderNumberField;
            }
            set {
                this.prescriberOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RxReferenceNumber {
            get {
                return this.rxReferenceNumberField;
            }
            set {
                this.rxReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberFullName {
            get {
                return this.prescriberFullNameField;
            }
            set {
                this.prescriberFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberPhoneNumber {
            get {
                return this.prescriberPhoneNumberField;
            }
            set {
                this.prescriberPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberContactNumbers {
            get {
                return this.prescriberContactNumbersField;
            }
            set {
                this.prescriberContactNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientSuffix {
            get {
                return this.patientSuffixField;
            }
            set {
                this.patientSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressLine1 {
            get {
                return this.patientAddressLine1Field;
            }
            set {
                this.patientAddressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressLine2 {
            get {
                return this.patientAddressLine2Field;
            }
            set {
                this.patientAddressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressCity {
            get {
                return this.patientAddressCityField;
            }
            set {
                this.patientAddressCityField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressState {
            get {
                return this.patientAddressStateField;
            }
            set {
                this.patientAddressStateField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressZipCode {
            get {
                return this.patientAddressZipCodeField;
            }
            set {
                this.patientAddressZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientPhoneNumber {
            get {
                return this.patientPhoneNumberField;
            }
            set {
                this.patientPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PatientContactNumbers {
            get {
                return this.patientContactNumbersField;
            }
            set {
                this.patientContactNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string NDC {
            get {
                return this.nDCField;
            }
            set {
                this.nDCField = value;
            }
        }
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfRefills {
            get {
                return this.numberOfRefillsField;
            }
            set {
                this.numberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string RefillQualifier {
            get {
                return this.refillQualifierField;
            }
            set {
                this.refillQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string QuantityQualifier {
            get {
                return this.quantityQualifierField;
            }
            set {
                this.quantityQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string PotencyUnitCode {
            get {
                return this.potencyUnitCodeField;
            }
            set {
                this.potencyUnitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacistMessage {
            get {
                return this.pharmacistMessageField;
            }
            set {
                this.pharmacistMessageField = value;
            }
        }
        
        /// <remarks/>
        public string SubstitutionAllowed {
            get {
                return this.substitutionAllowedField;
            }
            set {
                this.substitutionAllowedField = value;
            }
        }
        
        /// <remarks/>
        public string WrittenDate {
            get {
                return this.writtenDateField;
            }
            set {
                this.writtenDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastFillDate {
            get {
                return this.lastFillDateField;
            }
            set {
                this.lastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string DiagnosisCodes {
            get {
                return this.diagnosisCodesField;
            }
            set {
                this.diagnosisCodesField = value;
            }
        }
        
        /// <remarks/>
        public string PriorAuthorizationNumber {
            get {
                return this.priorAuthorizationNumberField;
            }
            set {
                this.priorAuthorizationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PriorAuthorizationQualifier {
            get {
                return this.priorAuthorizationQualifierField;
            }
            set {
                this.priorAuthorizationQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public string DeaSchedule {
            get {
                return this.deaScheduleField;
            }
            set {
                this.deaScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string StateDeaSchedule {
            get {
                return this.stateDeaScheduleField;
            }
            set {
                this.stateDeaScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedNDC {
            get {
                return this.dispensedNDCField;
            }
            set {
                this.dispensedNDCField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedDrugInfo {
            get {
                return this.dispensedDrugInfoField;
            }
            set {
                this.dispensedDrugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedNumberOfRefills {
            get {
                return this.dispensedNumberOfRefillsField;
            }
            set {
                this.dispensedNumberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedRefillQualifier {
            get {
                return this.dispensedRefillQualifierField;
            }
            set {
                this.dispensedRefillQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedQuantity {
            get {
                return this.dispensedQuantityField;
            }
            set {
                this.dispensedQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedQuantityQualifier {
            get {
                return this.dispensedQuantityQualifierField;
            }
            set {
                this.dispensedQuantityQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPotencyUnitCode {
            get {
                return this.dispensedPotencyUnitCodeField;
            }
            set {
                this.dispensedPotencyUnitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedSig {
            get {
                return this.dispensedSigField;
            }
            set {
                this.dispensedSigField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPharmacistMessage {
            get {
                return this.dispensedPharmacistMessageField;
            }
            set {
                this.dispensedPharmacistMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedSubstitutionAllowed {
            get {
                return this.dispensedSubstitutionAllowedField;
            }
            set {
                this.dispensedSubstitutionAllowedField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedWrittenDate {
            get {
                return this.dispensedWrittenDateField;
            }
            set {
                this.dispensedWrittenDateField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedLastFillDate {
            get {
                return this.dispensedLastFillDateField;
            }
            set {
                this.dispensedLastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedDiagnosisCodes {
            get {
                return this.dispensedDiagnosisCodesField;
            }
            set {
                this.dispensedDiagnosisCodesField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPriorAuthorizationNumber {
            get {
                return this.dispensedPriorAuthorizationNumberField;
            }
            set {
                this.dispensedPriorAuthorizationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPriorAuthorizationQualifier {
            get {
                return this.dispensedPriorAuthorizationQualifierField;
            }
            set {
                this.dispensedPriorAuthorizationQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedDaysSupply {
            get {
                return this.dispensedDaysSupplyField;
            }
            set {
                this.dispensedDaysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedDeaSchedule {
            get {
                return this.dispensedDeaScheduleField;
            }
            set {
                this.dispensedDeaScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedStateDeaSchedule {
            get {
                return this.dispensedStateDeaScheduleField;
            }
            set {
                this.dispensedStateDeaScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string AssignedToDoctorExternalId {
            get {
                return this.assignedToDoctorExternalIdField;
            }
            set {
                this.assignedToDoctorExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string AssignedByStaffExternalId {
            get {
                return this.assignedByStaffExternalIdField;
            }
            set {
                this.assignedByStaffExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailResultV4 {
        
        private Result resultField;
        
        private RenewalDetailV4 renewalDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetailV4 renewalDetail {
            get {
                return this.renewalDetailField;
            }
            set {
                this.renewalDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PrescriptionRenewalRequestType {
        
        private string pharmacyIdentifierField;
        
        private string drugNDCField;
        
        private string drugField;
        
        private string dispenseNumberField;
        
        private string dosageField;
        
        private string lastFillDateField;
        
        private string writtenDateField;
        
        private string daysSupplyField;
        
        private DrugSubstitutionType substitutionField;
        
        private string refillsField;
        
        private string pharmacistMessageField;
        
        private string idField;
        
        /// <remarks/>
        public string pharmacyIdentifier {
            get {
                return this.pharmacyIdentifierField;
            }
            set {
                this.pharmacyIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string drugNDC {
            get {
                return this.drugNDCField;
            }
            set {
                this.drugNDCField = value;
            }
        }
        
        /// <remarks/>
        public string drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string dispenseNumber {
            get {
                return this.dispenseNumberField;
            }
            set {
                this.dispenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public string lastFillDate {
            get {
                return this.lastFillDateField;
            }
            set {
                this.lastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string writtenDate {
            get {
                return this.writtenDateField;
            }
            set {
                this.writtenDateField = value;
            }
        }
        
        /// <remarks/>
        public string daysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public DrugSubstitutionType substitution {
            get {
                return this.substitutionField;
            }
            set {
                this.substitutionField = value;
            }
        }
        
        /// <remarks/>
        public string refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacistMessage {
            get {
                return this.pharmacistMessageField;
            }
            set {
                this.pharmacistMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DrugSubstitutionType {
        
        /// <remarks/>
        DispenseAsWritten,
        
        /// <remarks/>
        SubstitutionAllowed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientRxHealthplanType {
        
        private string rxBinField;
        
        private string rxPcnField;
        
        private string rxGroupField;
        
        private string rxMemberIdField;
        
        private string rxHealthplanNameField;
        
        private string rxHealthplanGroupIdField;
        
        /// <remarks/>
        public string rxBin {
            get {
                return this.rxBinField;
            }
            set {
                this.rxBinField = value;
            }
        }
        
        /// <remarks/>
        public string rxPcn {
            get {
                return this.rxPcnField;
            }
            set {
                this.rxPcnField = value;
            }
        }
        
        /// <remarks/>
        public string rxGroup {
            get {
                return this.rxGroupField;
            }
            set {
                this.rxGroupField = value;
            }
        }
        
        /// <remarks/>
        public string rxMemberId {
            get {
                return this.rxMemberIdField;
            }
            set {
                this.rxMemberIdField = value;
            }
        }
        
        /// <remarks/>
        public string rxHealthplanName {
            get {
                return this.rxHealthplanNameField;
            }
            set {
                this.rxHealthplanNameField = value;
            }
        }
        
        /// <remarks/>
        public string rxHealthplanGroupId {
            get {
                return this.rxHealthplanGroupIdField;
            }
            set {
                this.rxHealthplanGroupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientInsuredType {
        
        private RelationshipType patientRelationshipField;
        
        private PriorityType priorityCodeField;
        
        private string policyNumberField;
        
        private string groupNumberField;
        
        private PersonNameType insuredNameField;
        
        private AddressType insuredAddressField;
        
        private string insuredDobField;
        
        private GenderType insuredGenderField;
        
        private bool insuredGenderFieldSpecified;
        
        private ContactType insuredContactField;
        
        /// <remarks/>
        public RelationshipType patientRelationship {
            get {
                return this.patientRelationshipField;
            }
            set {
                this.patientRelationshipField = value;
            }
        }
        
        /// <remarks/>
        public PriorityType priorityCode {
            get {
                return this.priorityCodeField;
            }
            set {
                this.priorityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string policyNumber {
            get {
                return this.policyNumberField;
            }
            set {
                this.policyNumberField = value;
            }
        }
        
        /// <remarks/>
        public string groupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        public PersonNameType InsuredName {
            get {
                return this.insuredNameField;
            }
            set {
                this.insuredNameField = value;
            }
        }
        
        /// <remarks/>
        public AddressType InsuredAddress {
            get {
                return this.insuredAddressField;
            }
            set {
                this.insuredAddressField = value;
            }
        }
        
        /// <remarks/>
        public string insuredDob {
            get {
                return this.insuredDobField;
            }
            set {
                this.insuredDobField = value;
            }
        }
        
        /// <remarks/>
        public GenderType insuredGender {
            get {
                return this.insuredGenderField;
            }
            set {
                this.insuredGenderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool insuredGenderSpecified {
            get {
                return this.insuredGenderFieldSpecified;
            }
            set {
                this.insuredGenderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ContactType InsuredContact {
            get {
                return this.insuredContactField;
            }
            set {
                this.insuredContactField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum RelationshipType {
        
        /// <remarks/>
        Self,
        
        /// <remarks/>
        Spouse,
        
        /// <remarks/>
        Child,
        
        /// <remarks/>
        Employer,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PriorityType {
        
        /// <remarks/>
        Primary,
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Tertiary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PersonNameType {
        
        private string lastField;
        
        private string firstField;
        
        private string middleField;
        
        private PersonNamePrefix prefixField;
        
        private bool prefixFieldSpecified;
        
        private PersonNameSuffix suffixField;
        
        private bool suffixFieldSpecified;
        
        /// <remarks/>
        public string last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
            }
        }
        
        /// <remarks/>
        public string first {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        public string middle {
            get {
                return this.middleField;
            }
            set {
                this.middleField = value;
            }
        }
        
        /// <remarks/>
        public PersonNamePrefix prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prefixSpecified {
            get {
                return this.prefixFieldSpecified;
            }
            set {
                this.prefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PersonNameSuffix suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suffixSpecified {
            get {
                return this.suffixFieldSpecified;
            }
            set {
                this.suffixFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PersonNamePrefix {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ms.")]
        Ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ms")]
        Ms1,
        
        /// <remarks/>
        Miss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mr.")]
        Mr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mr")]
        Mr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mrs.")]
        Mrs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mrs")]
        Mrs1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dr.")]
        Dr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dr")]
        Dr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sr.")]
        Sr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sr")]
        Sr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sra.")]
        Sra,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sra")]
        Sra1,
        
        /// <remarks/>
        Fr,
        
        /// <remarks/>
        Rev,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PersonNameSuffix {
        
        /// <remarks/>
        DDS,
        
        /// <remarks/>
        DO,
        
        /// <remarks/>
        Jr,
        
        /// <remarks/>
        LVN,
        
        /// <remarks/>
        MD,
        
        /// <remarks/>
        NP,
        
        /// <remarks/>
        PA,
        
        /// <remarks/>
        RN,
        
        /// <remarks/>
        Sr,
        
        /// <remarks/>
        I,
        
        /// <remarks/>
        II,
        
        /// <remarks/>
        III,
        
        /// <remarks/>
        PhD,
        
        /// <remarks/>
        PharmD,
        
        /// <remarks/>
        RPh,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        OD,
        
        /// <remarks/>
        CNP,
        
        /// <remarks/>
        CNM,
        
        /// <remarks/>
        RPAC,
        
        /// <remarks/>
        FACC,
        
        /// <remarks/>
        FACP,
        
        /// <remarks/>
        LPN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Jr.")]
        Jr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sr.")]
        Sr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Esq.")]
        Esq,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Esq")]
        Esq1,
        
        /// <remarks/>
        IV,
        
        /// <remarks/>
        DPM,
        
        /// <remarks/>
        PAC,
        
        /// <remarks/>
        CNS,
        
        /// <remarks/>
        RD,
        
        /// <remarks/>
        CRNP,
        
        /// <remarks/>
        FNP,
        
        /// <remarks/>
        ANP,
        
        /// <remarks/>
        GNP,
        
        /// <remarks/>
        PNP,
        
        /// <remarks/>
        APRN,
        
        /// <remarks/>
        ARNP,
        
        /// <remarks/>
        ABOC,
        
        /// <remarks/>
        JR,
        
        /// <remarks/>
        SR,
        
        /// <remarks/>
        PHD,
        
        /// <remarks/>
        PHARMD,
        
        /// <remarks/>
        RPH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("JR.")]
        JR1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SR.")]
        SR1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ESQ.")]
        ESQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ESQ")]
        ESQ1,
        
        /// <remarks/>
        NB,
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        VI,
        
        /// <remarks/>
        DMD,
        
        /// <remarks/>
        ND,
        
        /// <remarks/>
        DNP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("FNP-BC")]
        FNPBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PMHNP-BC")]
        PMHNPBC,
        
        /// <remarks/>
        DVM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AddressType {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string zip4Field;
        
        private string countryField;
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string zip4 {
            get {
                return this.zip4Field;
            }
            set {
                this.zip4Field = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum GenderType {
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        U,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class ContactType {
        
        private string homeTelephoneField;
        
        private string workTelephoneField;
        
        private string cellularTelephoneField;
        
        private string pagerTelephoneField;
        
        private string faxField;
        
        private string emailField;
        
        private string backOfficeTelephoneField;
        
        private string backOfficeFaxField;
        
        /// <remarks/>
        public string homeTelephone {
            get {
                return this.homeTelephoneField;
            }
            set {
                this.homeTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string workTelephone {
            get {
                return this.workTelephoneField;
            }
            set {
                this.workTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string cellularTelephone {
            get {
                return this.cellularTelephoneField;
            }
            set {
                this.cellularTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string pagerTelephone {
            get {
                return this.pagerTelephoneField;
            }
            set {
                this.pagerTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string backOfficeTelephone {
            get {
                return this.backOfficeTelephoneField;
            }
            set {
                this.backOfficeTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string backOfficeFax {
            get {
                return this.backOfficeFaxField;
            }
            set {
                this.backOfficeFaxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PayorType {
        
        private string payorNameField;
        
        private AddressType payorAddressField;
        
        private InsuranceServiceProviderType insuranceServiceProviderField;
        
        private bool insuranceServiceProviderFieldSpecified;
        
        private string payorGroupNumberField;
        
        /// <remarks/>
        public string payorName {
            get {
                return this.payorNameField;
            }
            set {
                this.payorNameField = value;
            }
        }
        
        /// <remarks/>
        public AddressType PayorAddress {
            get {
                return this.payorAddressField;
            }
            set {
                this.payorAddressField = value;
            }
        }
        
        /// <remarks/>
        public InsuranceServiceProviderType insuranceServiceProvider {
            get {
                return this.insuranceServiceProviderField;
            }
            set {
                this.insuranceServiceProviderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool insuranceServiceProviderSpecified {
            get {
                return this.insuranceServiceProviderFieldSpecified;
            }
            set {
                this.insuranceServiceProviderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string payorGroupNumber {
            get {
                return this.payorGroupNumberField;
            }
            set {
                this.payorGroupNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum InsuranceServiceProviderType {
        
        /// <remarks/>
        Medicare,
        
        /// <remarks/>
        Medicaid,
        
        /// <remarks/>
        BCBS,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientPayorAndInsuredType {
        
        private PayorType payorField;
        
        private PatientInsuredType insuredField;
        
        private string idField;
        
        /// <remarks/>
        public PayorType payor {
            get {
                return this.payorField;
            }
            set {
                this.payorField = value;
            }
        }
        
        /// <remarks/>
        public PatientInsuredType insured {
            get {
                return this.insuredField;
            }
            set {
                this.insuredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientGuarantorType {
        
        private PersonNameType guarantorNameField;
        
        private string guarantorDobField;
        
        private GenderType guarantorGenderField;
        
        private AddressType guarantorAddressField;
        
        private ContactType guarantorContactField;
        
        private RelationshipType guarantorRelationshipField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType GuarantorName {
            get {
                return this.guarantorNameField;
            }
            set {
                this.guarantorNameField = value;
            }
        }
        
        /// <remarks/>
        public string guarantorDob {
            get {
                return this.guarantorDobField;
            }
            set {
                this.guarantorDobField = value;
            }
        }
        
        /// <remarks/>
        public GenderType guarantorGender {
            get {
                return this.guarantorGenderField;
            }
            set {
                this.guarantorGenderField = value;
            }
        }
        
        /// <remarks/>
        public AddressType GuarantorAddress {
            get {
                return this.guarantorAddressField;
            }
            set {
                this.guarantorAddressField = value;
            }
        }
        
        /// <remarks/>
        public ContactType GuarantorContact {
            get {
                return this.guarantorContactField;
            }
            set {
                this.guarantorContactField = value;
            }
        }
        
        /// <remarks/>
        public RelationshipType guarantorRelationship {
            get {
                return this.guarantorRelationshipField;
            }
            set {
                this.guarantorRelationshipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientPharmacyType {
        
        private string pharmacyIdentifierField;
        
        /// <remarks/>
        public string pharmacyIdentifier {
            get {
                return this.pharmacyIdentifierField;
            }
            set {
                this.pharmacyIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientFormularyType {
        
        private string eligibilityGuidField;
        
        private string eligibilityIndexField;
        
        private string drugIdentifierField;
        
        private DrugDatabaseType drugIdentifierTypeField;
        
        private bool drugIdentifierTypeFieldSpecified;
        
        private string statusDisplayedField;
        
        /// <remarks/>
        public string eligibilityGuid {
            get {
                return this.eligibilityGuidField;
            }
            set {
                this.eligibilityGuidField = value;
            }
        }
        
        /// <remarks/>
        public string eligibilityIndex {
            get {
                return this.eligibilityIndexField;
            }
            set {
                this.eligibilityIndexField = value;
            }
        }
        
        /// <remarks/>
        public string drugIdentifier {
            get {
                return this.drugIdentifierField;
            }
            set {
                this.drugIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public DrugDatabaseType drugIdentifierType {
            get {
                return this.drugIdentifierTypeField;
            }
            set {
                this.drugIdentifierTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool drugIdentifierTypeSpecified {
            get {
                return this.drugIdentifierTypeFieldSpecified;
            }
            set {
                this.drugIdentifierTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string statusDisplayed {
            get {
                return this.statusDisplayedField;
            }
            set {
                this.statusDisplayedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DrugDatabaseType {
        
        /// <remarks/>
        FDA,
        
        /// <remarks/>
        FDB,
        
        /// <remarks/>
        RXNORM,
        
        /// <remarks/>
        Z,
        
        /// <remarks/>
        Y,
        
        /// <remarks/>
        MULTUM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientAllergyFreeformType {
        
        private string allergyNameField;
        
        private AllergySeverityType allergySeverityTypeIDField;
        
        private bool allergySeverityTypeIDFieldSpecified;
        
        private string allergyCommentField;
        
        private string idField;
        
        /// <remarks/>
        public string allergyName {
            get {
                return this.allergyNameField;
            }
            set {
                this.allergyNameField = value;
            }
        }
        
        /// <remarks/>
        public AllergySeverityType allergySeverityTypeID {
            get {
                return this.allergySeverityTypeIDField;
            }
            set {
                this.allergySeverityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allergySeverityTypeIDSpecified {
            get {
                return this.allergySeverityTypeIDFieldSpecified;
            }
            set {
                this.allergySeverityTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string allergyComment {
            get {
                return this.allergyCommentField;
            }
            set {
                this.allergyCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum AllergySeverityType {
        
        /// <remarks/>
        Unspecified,
        
        /// <remarks/>
        Mild,
        
        /// <remarks/>
        Moderate,
        
        /// <remarks/>
        Severe,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientHealthplanFreeformType {
        
        private string healthplanNameField;
        
        /// <remarks/>
        public string healthplanName {
            get {
                return this.healthplanNameField;
            }
            set {
                this.healthplanNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientIdentifierType {
        
        private string patientIDField;
        
        private string patientIDTypeField;
        
        /// <remarks/>
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string patientIDType {
            get {
                return this.patientIDTypeField;
            }
            set {
                this.patientIDTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientDiagnosisType {
        
        private string diagnosisIDField;
        
        private DiagnosisType diagnosisTypeField;
        
        private string onsetDateField;
        
        private string diagnosisNameField;
        
        private string recordedDateField;
        
        /// <remarks/>
        public string diagnosisID {
            get {
                return this.diagnosisIDField;
            }
            set {
                this.diagnosisIDField = value;
            }
        }
        
        /// <remarks/>
        public DiagnosisType diagnosisType {
            get {
                return this.diagnosisTypeField;
            }
            set {
                this.diagnosisTypeField = value;
            }
        }
        
        /// <remarks/>
        public string onsetDate {
            get {
                return this.onsetDateField;
            }
            set {
                this.onsetDateField = value;
            }
        }
        
        /// <remarks/>
        public string diagnosisName {
            get {
                return this.diagnosisNameField;
            }
            set {
                this.diagnosisNameField = value;
            }
        }
        
        /// <remarks/>
        public string recordedDate {
            get {
                return this.recordedDateField;
            }
            set {
                this.recordedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DiagnosisType {
        
        /// <remarks/>
        ICD9,
        
        /// <remarks/>
        ICD9CM,
        
        /// <remarks/>
        ICD10,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientHealthplanType {
        
        private string healthplanIDField;
        
        private HealthplanType healthplanTypeIDField;
        
        private string groupField;
        
        /// <remarks/>
        public string healthplanID {
            get {
                return this.healthplanIDField;
            }
            set {
                this.healthplanIDField = value;
            }
        }
        
        /// <remarks/>
        public HealthplanType healthplanTypeID {
            get {
                return this.healthplanTypeIDField;
            }
            set {
                this.healthplanTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum HealthplanType {
        
        /// <remarks/>
        Summary,
        
        /// <remarks/>
        Detail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientAllergyType {
        
        private string allergyIDField;
        
        private DrugDatabaseType allergyTypeIDField;
        
        private AllergySeverityType allergySeverityTypeIDField;
        
        private bool allergySeverityTypeIDFieldSpecified;
        
        private string allergyCommentField;
        
        private string conceptIDField;
        
        private string conceptTypeField;
        
        private string onsetDateField;
        
        private DrugSubType allergySubTypeIDField;
        
        private bool allergySubTypeIDFieldSpecified;
        
        private string allergyNameField;
        
        /// <remarks/>
        public string allergyID {
            get {
                return this.allergyIDField;
            }
            set {
                this.allergyIDField = value;
            }
        }
        
        /// <remarks/>
        public DrugDatabaseType allergyTypeID {
            get {
                return this.allergyTypeIDField;
            }
            set {
                this.allergyTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public AllergySeverityType allergySeverityTypeID {
            get {
                return this.allergySeverityTypeIDField;
            }
            set {
                this.allergySeverityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allergySeverityTypeIDSpecified {
            get {
                return this.allergySeverityTypeIDFieldSpecified;
            }
            set {
                this.allergySeverityTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string allergyComment {
            get {
                return this.allergyCommentField;
            }
            set {
                this.allergyCommentField = value;
            }
        }
        
        /// <remarks/>
        public string conceptID {
            get {
                return this.conceptIDField;
            }
            set {
                this.conceptIDField = value;
            }
        }
        
        /// <remarks/>
        public string conceptType {
            get {
                return this.conceptTypeField;
            }
            set {
                this.conceptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string onsetDate {
            get {
                return this.onsetDateField;
            }
            set {
                this.onsetDateField = value;
            }
        }
        
        /// <remarks/>
        public DrugSubType allergySubTypeID {
            get {
                return this.allergySubTypeIDField;
            }
            set {
                this.allergySubTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allergySubTypeIDSpecified {
            get {
                return this.allergySubTypeIDFieldSpecified;
            }
            set {
                this.allergySubTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string allergyName {
            get {
                return this.allergyNameField;
            }
            set {
                this.allergyNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DrugSubType {
        
        /// <remarks/>
        SCD,
        
        /// <remarks/>
        SBD,
        
        /// <remarks/>
        BPK,
        
        /// <remarks/>
        GPK,
        
        /// <remarks/>
        IN,
        
        /// <remarks/>
        MIN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientCharacteristicsType {
        
        private string dobField;
        
        private GenderType genderField;
        
        private bool genderFieldSpecified;
        
        private string heightField;
        
        private string heightUnitsField;
        
        private string weightField;
        
        private WeightUnitType weightUnitsField;
        
        private bool weightUnitsFieldSpecified;
        
        private LanguageType languageField;
        
        private bool languageFieldSpecified;
        
        private HeightUnitType heightUnitsCodifiedField;
        
        private bool heightUnitsCodifiedFieldSpecified;
        
        private string heightObservedDateField;
        
        private string weightObservedDateField;
        
        private WeightUnitV2Type weightUnitsCodifiedField;
        
        private bool weightUnitsCodifiedFieldSpecified;
        
        /// <remarks/>
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        public GenderType gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool genderSpecified {
            get {
                return this.genderFieldSpecified;
            }
            set {
                this.genderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public string heightUnits {
            get {
                return this.heightUnitsField;
            }
            set {
                this.heightUnitsField = value;
            }
        }
        
        /// <remarks/>
        public string weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public WeightUnitType weightUnits {
            get {
                return this.weightUnitsField;
            }
            set {
                this.weightUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weightUnitsSpecified {
            get {
                return this.weightUnitsFieldSpecified;
            }
            set {
                this.weightUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LanguageType language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool languageSpecified {
            get {
                return this.languageFieldSpecified;
            }
            set {
                this.languageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public HeightUnitType heightUnitsCodified {
            get {
                return this.heightUnitsCodifiedField;
            }
            set {
                this.heightUnitsCodifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heightUnitsCodifiedSpecified {
            get {
                return this.heightUnitsCodifiedFieldSpecified;
            }
            set {
                this.heightUnitsCodifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string heightObservedDate {
            get {
                return this.heightObservedDateField;
            }
            set {
                this.heightObservedDateField = value;
            }
        }
        
        /// <remarks/>
        public string weightObservedDate {
            get {
                return this.weightObservedDateField;
            }
            set {
                this.weightObservedDateField = value;
            }
        }
        
        /// <remarks/>
        public WeightUnitV2Type weightUnitsCodified {
            get {
                return this.weightUnitsCodifiedField;
            }
            set {
                this.weightUnitsCodifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weightUnitsCodifiedSpecified {
            get {
                return this.weightUnitsCodifiedFieldSpecified;
            }
            set {
                this.weightUnitsCodifiedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum WeightUnitType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
        
        /// <remarks/>
        lb,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lb.")]
        lb1,
        
        /// <remarks/>
        lbs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbs.")]
        lbs1,
        
        /// <remarks/>
        LB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LB.")]
        LB1,
        
        /// <remarks/>
        LBS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LBS.")]
        LBS1,
        
        /// <remarks/>
        kg,
        
        /// <remarks/>
        kgs,
        
        /// <remarks/>
        KG,
        
        /// <remarks/>
        KGS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum LanguageType {
        
        /// <remarks/>
        Arabic,
        
        /// <remarks/>
        Chinese,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Chinese (Simplified)")]
        ChineseSimplified,
        
        /// <remarks/>
        Creole,
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        French,
        
        /// <remarks/>
        German,
        
        /// <remarks/>
        Greek,
        
        /// <remarks/>
        Italian,
        
        /// <remarks/>
        Japanese,
        
        /// <remarks/>
        Korean,
        
        /// <remarks/>
        Polish,
        
        /// <remarks/>
        Portuguese,
        
        /// <remarks/>
        Russian,
        
        /// <remarks/>
        Spanish,
        
        /// <remarks/>
        Tagalog,
        
        /// <remarks/>
        Turkish,
        
        /// <remarks/>
        Vietnamese,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum HeightUnitType {
        
        /// <remarks/>
        IN,
        
        /// <remarks/>
        IN_I,
        
        /// <remarks/>
        CM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum WeightUnitV2Type {
        
        /// <remarks/>
        LB,
        
        /// <remarks/>
        LBS,
        
        /// <remarks/>
        KG,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AddressOptionalType {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string zip4Field;
        
        private string countryField;
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string zip4 {
            get {
                return this.zip4Field;
            }
            set {
                this.zip4Field = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientType {
        
        private PersonNameType patientNameField;
        
        private string medicalRecordNumberField;
        
        private string socialSecurityNumberField;
        
        private string memoField;
        
        private AddressOptionalType patientAddressField;
        
        private ContactType patientContactField;
        
        private PatientCharacteristicsType patientCharacteristicsField;
        
        private PatientAllergyType[] patientAllergiesField;
        
        private PatientHealthplanType[] patientHealthplansField;
        
        private PatientDiagnosisType[] patientDiagnosisField;
        
        private string patientDiagnosisSearchField;
        
        private PatientIdentifierType[] patientIdentifierField;
        
        private PatientHealthplanFreeformType[] patientFreeformHealthplansField;
        
        private string episodeIdentifierField;
        
        private string encounterIdentifierField;
        
        private PatientAllergyFreeformType[] patientFreeformAllergyField;
        
        private PatientFormularyType patientFormularyField;
        
        private PatientPharmacyType[] patientPharmaciesField;
        
        private string drugSetIDField;
        
        private PatientGuarantorType patientGuarantorField;
        
        private PatientPayorAndInsuredType[] patientPayorAndInsuredField;
        
        private PatientRxHealthplanType patientRxHealthplanField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string medicalRecordNumber {
            get {
                return this.medicalRecordNumberField;
            }
            set {
                this.medicalRecordNumberField = value;
            }
        }
        
        /// <remarks/>
        public string socialSecurityNumber {
            get {
                return this.socialSecurityNumberField;
            }
            set {
                this.socialSecurityNumberField = value;
            }
        }
        
        /// <remarks/>
        public string memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        public AddressOptionalType PatientAddress {
            get {
                return this.patientAddressField;
            }
            set {
                this.patientAddressField = value;
            }
        }
        
        /// <remarks/>
        public ContactType PatientContact {
            get {
                return this.patientContactField;
            }
            set {
                this.patientContactField = value;
            }
        }
        
        /// <remarks/>
        public PatientCharacteristicsType PatientCharacteristics {
            get {
                return this.patientCharacteristicsField;
            }
            set {
                this.patientCharacteristicsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientAllergies")]
        public PatientAllergyType[] PatientAllergies {
            get {
                return this.patientAllergiesField;
            }
            set {
                this.patientAllergiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientHealthplans")]
        public PatientHealthplanType[] PatientHealthplans {
            get {
                return this.patientHealthplansField;
            }
            set {
                this.patientHealthplansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientDiagnosis")]
        public PatientDiagnosisType[] PatientDiagnosis {
            get {
                return this.patientDiagnosisField;
            }
            set {
                this.patientDiagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDiagnosisSearch {
            get {
                return this.patientDiagnosisSearchField;
            }
            set {
                this.patientDiagnosisSearchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientIdentifier")]
        public PatientIdentifierType[] PatientIdentifier {
            get {
                return this.patientIdentifierField;
            }
            set {
                this.patientIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientFreeformHealthplans")]
        public PatientHealthplanFreeformType[] PatientFreeformHealthplans {
            get {
                return this.patientFreeformHealthplansField;
            }
            set {
                this.patientFreeformHealthplansField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeIdentifier {
            get {
                return this.episodeIdentifierField;
            }
            set {
                this.episodeIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string EncounterIdentifier {
            get {
                return this.encounterIdentifierField;
            }
            set {
                this.encounterIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientFreeformAllergy")]
        public PatientAllergyFreeformType[] PatientFreeformAllergy {
            get {
                return this.patientFreeformAllergyField;
            }
            set {
                this.patientFreeformAllergyField = value;
            }
        }
        
        /// <remarks/>
        public PatientFormularyType PatientFormulary {
            get {
                return this.patientFormularyField;
            }
            set {
                this.patientFormularyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientPharmacies")]
        public PatientPharmacyType[] PatientPharmacies {
            get {
                return this.patientPharmaciesField;
            }
            set {
                this.patientPharmaciesField = value;
            }
        }
        
        /// <remarks/>
        public string DrugSetID {
            get {
                return this.drugSetIDField;
            }
            set {
                this.drugSetIDField = value;
            }
        }
        
        /// <remarks/>
        public PatientGuarantorType PatientGuarantor {
            get {
                return this.patientGuarantorField;
            }
            set {
                this.patientGuarantorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientPayorAndInsured")]
        public PatientPayorAndInsuredType[] PatientPayorAndInsured {
            get {
                return this.patientPayorAndInsuredField;
            }
            set {
                this.patientPayorAndInsuredField = value;
            }
        }
        
        /// <remarks/>
        public PatientRxHealthplanType PatientRxHealthplan {
            get {
                return this.patientRxHealthplanField;
            }
            set {
                this.patientRxHealthplanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class StaffType {
        
        private PersonNameType staffNameField;
        
        private string licenseField;
        
        private string npiField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType StaffName {
            get {
                return this.staffNameField;
            }
            set {
                this.staffNameField = value;
            }
        }
        
        /// <remarks/>
        public string license {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class LicensedPrescriberType {
        
        private PersonNameType licensedPrescriberNameField;
        
        private string deaField;
        
        private PrescriberStatus prescriberStatusField;
        
        private bool prescriberStatusFieldSpecified;
        
        private string upinField;
        
        private string licenseStateField;
        
        private string licenseNumberField;
        
        private PrescriberNetwork prescriberNetworkField;
        
        private bool prescriberNetworkFieldSpecified;
        
        private string prescriberStartDateTimeField;
        
        private string prescriberStopDateTimeField;
        
        private string npiField;
        
        private string freeformCredentialsField;
        
        private string prescriberServiceLevelMaskField;
        
        private string locationDeaField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType LicensedPrescriberName {
            get {
                return this.licensedPrescriberNameField;
            }
            set {
                this.licensedPrescriberNameField = value;
            }
        }
        
        /// <remarks/>
        public string dea {
            get {
                return this.deaField;
            }
            set {
                this.deaField = value;
            }
        }
        
        /// <remarks/>
        public PrescriberStatus prescriberStatus {
            get {
                return this.prescriberStatusField;
            }
            set {
                this.prescriberStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prescriberStatusSpecified {
            get {
                return this.prescriberStatusFieldSpecified;
            }
            set {
                this.prescriberStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string upin {
            get {
                return this.upinField;
            }
            set {
                this.upinField = value;
            }
        }
        
        /// <remarks/>
        public string licenseState {
            get {
                return this.licenseStateField;
            }
            set {
                this.licenseStateField = value;
            }
        }
        
        /// <remarks/>
        public string licenseNumber {
            get {
                return this.licenseNumberField;
            }
            set {
                this.licenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public PrescriberNetwork prescriberNetwork {
            get {
                return this.prescriberNetworkField;
            }
            set {
                this.prescriberNetworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prescriberNetworkSpecified {
            get {
                return this.prescriberNetworkFieldSpecified;
            }
            set {
                this.prescriberNetworkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string prescriberStartDateTime {
            get {
                return this.prescriberStartDateTimeField;
            }
            set {
                this.prescriberStartDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string prescriberStopDateTime {
            get {
                return this.prescriberStopDateTimeField;
            }
            set {
                this.prescriberStopDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string freeformCredentials {
            get {
                return this.freeformCredentialsField;
            }
            set {
                this.freeformCredentialsField = value;
            }
        }
        
        /// <remarks/>
        public string prescriberServiceLevelMask {
            get {
                return this.prescriberServiceLevelMaskField;
            }
            set {
                this.prescriberServiceLevelMaskField = value;
            }
        }
        
        /// <remarks/>
        public string locationDea {
            get {
                return this.locationDeaField;
            }
            set {
                this.locationDeaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PrescriberStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PrescriberNetwork {
        
        /// <remarks/>
        SureScripts,
        
        /// <remarks/>
        RxHub,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class LocationType {
        
        private string locationNameField;
        
        private string locationShortNameField;
        
        private AddressType locationAddressField;
        
        private string primaryPhoneNumberField;
        
        private string primaryFaxNumberField;
        
        private string pharmacyContactNumberField;
        
        private string idField;
        
        /// <remarks/>
        public string locationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string locationShortName {
            get {
                return this.locationShortNameField;
            }
            set {
                this.locationShortNameField = value;
            }
        }
        
        /// <remarks/>
        public AddressType LocationAddress {
            get {
                return this.locationAddressField;
            }
            set {
                this.locationAddressField = value;
            }
        }
        
        /// <remarks/>
        public string primaryPhoneNumber {
            get {
                return this.primaryPhoneNumberField;
            }
            set {
                this.primaryPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string primaryFaxNumber {
            get {
                return this.primaryFaxNumberField;
            }
            set {
                this.primaryFaxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyContactNumber {
            get {
                return this.pharmacyContactNumberField;
            }
            set {
                this.pharmacyContactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AccountNotificationType {
        
        private NotificationMessageType notificationMessageField;
        
        private string notificationUrlField;
        
        /// <remarks/>
        public NotificationMessageType NotificationMessage {
            get {
                return this.notificationMessageField;
            }
            set {
                this.notificationMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notificationUrl {
            get {
                return this.notificationUrlField;
            }
            set {
                this.notificationUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum NotificationMessageType {
        
        /// <remarks/>
        RxBatchSigningComplete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AccountType {
        
        private string accountNameField;
        
        private string siteIDField;
        
        private AddressType accountAddressField;
        
        private string accountPrimaryPhoneNumberField;
        
        private string accountPrimaryFaxNumberField;
        
        private AccountNotificationType[] accountNotificationField;
        
        private string idField;
        
        /// <remarks/>
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public AddressType AccountAddress {
            get {
                return this.accountAddressField;
            }
            set {
                this.accountAddressField = value;
            }
        }
        
        /// <remarks/>
        public string accountPrimaryPhoneNumber {
            get {
                return this.accountPrimaryPhoneNumberField;
            }
            set {
                this.accountPrimaryPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string accountPrimaryFaxNumber {
            get {
                return this.accountPrimaryFaxNumberField;
            }
            set {
                this.accountPrimaryFaxNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccountNotification")]
        public AccountNotificationType[] AccountNotification {
            get {
                return this.accountNotificationField;
            }
            set {
                this.accountNotificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class CredentialsType {
        
        private string partnerNameField;
        
        private string nameField;
        
        private string passwordField;
        
        private string productNameField;
        
        private string productVersionField;
        
        /// <remarks/>
        public string partnerName {
            get {
                return this.partnerNameField;
            }
            set {
                this.partnerNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string productVersion {
            get {
                return this.productVersionField;
            }
            set {
                this.productVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class NCRenewal {
        
        private CredentialsType credentialsField;
        
        private AccountType accountField;
        
        private LocationType locationField;
        
        private LicensedPrescriberType licensedPrescriberField;
        
        private StaffType staffField;
        
        private PatientType patientField;
        
        private PrescriptionRenewalRequestType prescriptionRenewalRequestField;
        
        /// <remarks/>
        public CredentialsType Credentials {
            get {
                return this.credentialsField;
            }
            set {
                this.credentialsField = value;
            }
        }
        
        /// <remarks/>
        public AccountType Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public LocationType Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public LicensedPrescriberType LicensedPrescriber {
            get {
                return this.licensedPrescriberField;
            }
            set {
                this.licensedPrescriberField = value;
            }
        }
        
        /// <remarks/>
        public StaffType Staff {
            get {
                return this.staffField;
            }
            set {
                this.staffField = value;
            }
        }
        
        /// <remarks/>
        public PatientType Patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionRenewalRequestType PrescriptionRenewalRequest {
            get {
                return this.prescriptionRenewalRequestField;
            }
            set {
                this.prescriptionRenewalRequestField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetail {
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private NCRenewal renewalField;
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public NCRenewal renewal {
            get {
                return this.renewalField;
            }
            set {
                this.renewalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailResult {
        
        private Result resultField;
        
        private RenewalDetail renewalDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetail renewalDetail {
            get {
                return this.renewalDetailField;
            }
            set {
                this.renewalDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryV4 {
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalListSummaryResultV4 {
        
        private Result resultField;
        
        private RenewalSummaryV4[] renewalListDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalSummaryV4[] renewalListDetailArray {
            get {
                return this.renewalListDetailArrayField;
            }
            set {
                this.renewalListDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalListDetailResultV4 {
        
        private Result resultField;
        
        private RenewalDetailV4[] renewalListDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetailV4[] renewalListDetailArray {
            get {
                return this.renewalListDetailArrayField;
            }
            set {
                this.renewalListDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryV2 {
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        private string locationNameField;
        
        private string doctorFullNameField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string drugInfoField;
        
        private string numberOfRefillsField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        private string quantityField;
        
        private string sigField;
        
        private string ncpdpIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFullName {
            get {
                return this.doctorFullNameField;
            }
            set {
                this.doctorFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfRefills {
            get {
                return this.numberOfRefillsField;
            }
            set {
                this.numberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string Sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpId {
            get {
                return this.ncpdpIdField;
            }
            set {
                this.ncpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryResultV2 {
        
        private Result resultField;
        
        private RenewalSummaryV2[] renewalSummaryArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalSummaryV2[] renewalSummaryArray {
            get {
                return this.renewalSummaryArrayField;
            }
            set {
                this.renewalSummaryArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummary {
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        private string locationNameField;
        
        private string doctorFullNameField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string drugInfoField;
        
        private string numberOfRefillsField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFullName {
            get {
                return this.doctorFullNameField;
            }
            set {
                this.doctorFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfRefills {
            get {
                return this.numberOfRefillsField;
            }
            set {
                this.numberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryResult {
        
        private Result resultField;
        
        private RenewalSummary[] renewalSummaryArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalSummary[] renewalSummaryArray {
            get {
                return this.renewalSummaryArrayField;
            }
            set {
                this.renewalSummaryArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetail {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string pharmacyTypeField;
        
        private string statusField;
        
        private string touchDateField;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TransmissionDetail {
        
        private TransmissionMethodType transmissionMethodField;
        
        private string transmissionNetworkField;
        
        private System.Guid transactionGuidField;
        
        private System.Guid transactionDetailGuidField;
        
        private System.DateTime timestampField;
        
        private string userIdField;
        
        private string statusMessageField;
        
        private string detailMessageField;
        
        private string detailXmlResponseField;
        
        private PharmacyDetail pharmacyDetailField;
        
        /// <remarks/>
        public TransmissionMethodType TransmissionMethod {
            get {
                return this.transmissionMethodField;
            }
            set {
                this.transmissionMethodField = value;
            }
        }
        
        /// <remarks/>
        public string TransmissionNetwork {
            get {
                return this.transmissionNetworkField;
            }
            set {
                this.transmissionNetworkField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionGuid {
            get {
                return this.transactionGuidField;
            }
            set {
                this.transactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionDetailGuid {
            get {
                return this.transactionDetailGuidField;
            }
            set {
                this.transactionDetailGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string StatusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                this.statusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailMessage {
            get {
                return this.detailMessageField;
            }
            set {
                this.detailMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailXmlResponse {
            get {
                return this.detailXmlResponseField;
            }
            set {
                this.detailXmlResponseField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetail pharmacyDetail {
            get {
                return this.pharmacyDetailField;
            }
            set {
                this.pharmacyDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum TransmissionMethodType {
        
        /// <remarks/>
        Print,
        
        /// <remarks/>
        Fax,
        
        /// <remarks/>
        Electronic,
        
        /// <remarks/>
        HandWritten,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TransmissionSummary {
        
        private string externalIdField;
        
        private System.Guid prescriptionGuidField;
        
        private string prescriptionStatusField;
        
        private string prescriptionSubStatusField;
        
        private string prescriptionArchiveField;
        
        private string summaryMessageField;
        
        private string summaryXmlResponseField;
        
        private int transmissionDetailCountField;
        
        private PatientDrugDetail5 drugDetailField;
        
        private TransmissionDetail[] transmissionDetailArrayField;
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionStatus {
            get {
                return this.prescriptionStatusField;
            }
            set {
                this.prescriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionSubStatus {
            get {
                return this.prescriptionSubStatusField;
            }
            set {
                this.prescriptionSubStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionArchive {
            get {
                return this.prescriptionArchiveField;
            }
            set {
                this.prescriptionArchiveField = value;
            }
        }
        
        /// <remarks/>
        public string SummaryMessage {
            get {
                return this.summaryMessageField;
            }
            set {
                this.summaryMessageField = value;
            }
        }
        
        /// <remarks/>
        public string SummaryXmlResponse {
            get {
                return this.summaryXmlResponseField;
            }
            set {
                this.summaryXmlResponseField = value;
            }
        }
        
        /// <remarks/>
        public int TransmissionDetailCount {
            get {
                return this.transmissionDetailCountField;
            }
            set {
                this.transmissionDetailCountField = value;
            }
        }
        
        /// <remarks/>
        public PatientDrugDetail5 drugDetail {
            get {
                return this.drugDetailField;
            }
            set {
                this.drugDetailField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionDetail[] transmissionDetailArray {
            get {
                return this.transmissionDetailArrayField;
            }
            set {
                this.transmissionDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetail5 {
        
        private string accountNameField;
        
        private string externalAccountIDField;
        
        private string siteIDField;
        
        private string fullNameField;
        
        private string externalPatientIDField;
        
        private string prescriptionDateField;
        
        private string drugIDField;
        
        private string drugTypeIDField;
        
        private string drugNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string dosageNumberDescriptionField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string dosageFrequencyDescriptionField;
        
        private string dispenseField;
        
        private string takeAsNeededField;
        
        private string dispenseAsWrittenField;
        
        private string refillsField;
        
        private string statusField;
        
        private string subStatusField;
        
        private string archiveStatusField;
        
        private string prescriptionGuidField;
        
        private string orderGuidField;
        
        private string prescriptionNotesField;
        
        private string externalPhysicianIDField;
        
        private string physicianNameField;
        
        private string dateMovedToPreviousMedicationsField;
        
        private string healthPlanIDField;
        
        private string healthplanTypeIDField;
        
        private string formularyCoverageField;
        
        private string formularyStatusField;
        
        private string patientIDField;
        
        private string patientIDTypeField;
        
        private string externalPrescriptionIDField;
        
        private string episodeIdentifierField;
        
        private string encounterIdentifierField;
        
        private string externalSourceField;
        
        private ExternalDrugOverride externalDrugOverrideField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalAccountID {
            get {
                return this.externalAccountIDField;
            }
            set {
                this.externalAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientID {
            get {
                return this.externalPatientIDField;
            }
            set {
                this.externalPatientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionDate {
            get {
                return this.prescriptionDateField;
            }
            set {
                this.prescriptionDateField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugTypeID {
            get {
                return this.drugTypeIDField;
            }
            set {
                this.drugTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string DosageNumberDescription {
            get {
                return this.dosageNumberDescriptionField;
            }
            set {
                this.dosageNumberDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFrequencyDescription {
            get {
                return this.dosageFrequencyDescriptionField;
            }
            set {
                this.dosageFrequencyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Dispense {
            get {
                return this.dispenseField;
            }
            set {
                this.dispenseField = value;
            }
        }
        
        /// <remarks/>
        public string TakeAsNeeded {
            get {
                return this.takeAsNeededField;
            }
            set {
                this.takeAsNeededField = value;
            }
        }
        
        /// <remarks/>
        public string DispenseAsWritten {
            get {
                return this.dispenseAsWrittenField;
            }
            set {
                this.dispenseAsWrittenField = value;
            }
        }
        
        /// <remarks/>
        public string Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string SubStatus {
            get {
                return this.subStatusField;
            }
            set {
                this.subStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ArchiveStatus {
            get {
                return this.archiveStatusField;
            }
            set {
                this.archiveStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OrderGuid {
            get {
                return this.orderGuidField;
            }
            set {
                this.orderGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionNotes {
            get {
                return this.prescriptionNotesField;
            }
            set {
                this.prescriptionNotesField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPhysicianID {
            get {
                return this.externalPhysicianIDField;
            }
            set {
                this.externalPhysicianIDField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicianName {
            get {
                return this.physicianNameField;
            }
            set {
                this.physicianNameField = value;
            }
        }
        
        /// <remarks/>
        public string DateMovedToPreviousMedications {
            get {
                return this.dateMovedToPreviousMedicationsField;
            }
            set {
                this.dateMovedToPreviousMedicationsField = value;
            }
        }
        
        /// <remarks/>
        public string HealthPlanID {
            get {
                return this.healthPlanIDField;
            }
            set {
                this.healthPlanIDField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanTypeID {
            get {
                return this.healthplanTypeIDField;
            }
            set {
                this.healthplanTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientIDType {
            get {
                return this.patientIDTypeField;
            }
            set {
                this.patientIDTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionID {
            get {
                return this.externalPrescriptionIDField;
            }
            set {
                this.externalPrescriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeIdentifier {
            get {
                return this.episodeIdentifierField;
            }
            set {
                this.episodeIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string EncounterIdentifier {
            get {
                return this.encounterIdentifierField;
            }
            set {
                this.encounterIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalSource {
            get {
                return this.externalSourceField;
            }
            set {
                this.externalSourceField = value;
            }
        }
        
        /// <remarks/>
        public ExternalDrugOverride ExternalDrugOverride {
            get {
                return this.externalDrugOverrideField;
            }
            set {
                this.externalDrugOverrideField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ExternalDrugOverride {
        
        private string externalDrugConceptField;
        
        private string externalDrugNameField;
        
        private string externalDrugStrengthField;
        
        private string externalDrugStrengthUOMField;
        
        private string externalDrugStrengthWithUOMField;
        
        private string externalDrugDosageFormField;
        
        private string externalDrugRouteField;
        
        private string externalDrugIdentifierField;
        
        private string externalDrugIdentifierTypeField;
        
        private string externalDrugScheduleField;
        
        private string externalDrugOverTheCounterField;
        
        /// <remarks/>
        public string externalDrugConcept {
            get {
                return this.externalDrugConceptField;
            }
            set {
                this.externalDrugConceptField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugName {
            get {
                return this.externalDrugNameField;
            }
            set {
                this.externalDrugNameField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugStrength {
            get {
                return this.externalDrugStrengthField;
            }
            set {
                this.externalDrugStrengthField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugStrengthUOM {
            get {
                return this.externalDrugStrengthUOMField;
            }
            set {
                this.externalDrugStrengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugStrengthWithUOM {
            get {
                return this.externalDrugStrengthWithUOMField;
            }
            set {
                this.externalDrugStrengthWithUOMField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugDosageForm {
            get {
                return this.externalDrugDosageFormField;
            }
            set {
                this.externalDrugDosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugRoute {
            get {
                return this.externalDrugRouteField;
            }
            set {
                this.externalDrugRouteField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugIdentifier {
            get {
                return this.externalDrugIdentifierField;
            }
            set {
                this.externalDrugIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugIdentifierType {
            get {
                return this.externalDrugIdentifierTypeField;
            }
            set {
                this.externalDrugIdentifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugSchedule {
            get {
                return this.externalDrugScheduleField;
            }
            set {
                this.externalDrugScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugOverTheCounter {
            get {
                return this.externalDrugOverTheCounterField;
            }
            set {
                this.externalDrugOverTheCounterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TransmissionSummaryResult {
        
        private Result resultField;
        
        private TransmissionSummary[] transmissionSummaryDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionSummary[] transmissionSummaryDetailArray {
            get {
                return this.transmissionSummaryDetailArrayField;
            }
            set {
                this.transmissionSummaryDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyLogDetail {
        
        private string compositeAllergyIdField;
        
        private string allergySourceIdField;
        
        private string conceptTypeField;
        
        private string allergyNameField;
        
        private string allergySeverityTypeIdField;
        
        private string allergySeverityNameField;
        
        private string allergyNotesField;
        
        private string conceptIdField;
        
        private string conceptTypeIdField;
        
        private string userTypeField;
        
        private string userIdField;
        
        private string actionField;
        
        private string timestampField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string CompositeAllergyId {
            get {
                return this.compositeAllergyIdField;
            }
            set {
                this.compositeAllergyIdField = value;
            }
        }
        
        /// <remarks/>
        public string AllergySourceId {
            get {
                return this.allergySourceIdField;
            }
            set {
                this.allergySourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptType {
            get {
                return this.conceptTypeField;
            }
            set {
                this.conceptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyName {
            get {
                return this.allergyNameField;
            }
            set {
                this.allergyNameField = value;
            }
        }
        
        /// <remarks/>
        public string AllergySeverityTypeId {
            get {
                return this.allergySeverityTypeIdField;
            }
            set {
                this.allergySeverityTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string AllergySeverityName {
            get {
                return this.allergySeverityNameField;
            }
            set {
                this.allergySeverityNameField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyNotes {
            get {
                return this.allergyNotesField;
            }
            set {
                this.allergyNotesField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptId {
            get {
                return this.conceptIdField;
            }
            set {
                this.conceptIdField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptTypeId {
            get {
                return this.conceptTypeIdField;
            }
            set {
                this.conceptTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyLogDetailResult {
        
        private Result resultField;
        
        private PatientAllergyLogDetail[] patientAllergyLogDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientAllergyLogDetail[] patientAllergyLogDetail {
            get {
                return this.patientAllergyLogDetailField;
            }
            set {
                this.patientAllergyLogDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientFreeFormAllergyExtendedDetail {
        
        private string externalIdField;
        
        private string nameField;
        
        private string severityTypeIDField;
        
        private string severityNameField;
        
        private string notesField;
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityTypeID {
            get {
                return this.severityTypeIDField;
            }
            set {
                this.severityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityName {
            get {
                return this.severityNameField;
            }
            set {
                this.severityNameField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientFreeFormAllergyExtendedDetailResult {
        
        private Result resultField;
        
        private PatientFreeFormAllergyExtendedDetail[] patientFreeFormAllergyExtendedDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientFreeFormAllergyExtendedDetail[] patientFreeFormAllergyExtendedDetail {
            get {
                return this.patientFreeFormAllergyExtendedDetailField;
            }
            set {
                this.patientFreeFormAllergyExtendedDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyExtendedDetailV4 {
        
        private string allergyTypeField;
        
        private string compositeAllergyIdField;
        
        private string allergySourceIdField;
        
        private string allergyConceptIdField;
        
        private string conceptTypeField;
        
        private string allergyNameField;
        
        private string statusField;
        
        private string allergySeverityTypeIdField;
        
        private string allergySeverityNameField;
        
        private string allergyNotesField;
        
        private string conceptIdField;
        
        private string conceptTypeIdField;
        
        private string rxcuiField;
        
        private string onsetDateField;
        
        private string recordedDateField;
        
        private string snomedConceptIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string AllergyType {
            get {
                return this.allergyTypeField;
            }
            set {
                this.allergyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CompositeAllergyId {
            get {
                return this.compositeAllergyIdField;
            }
            set {
                this.compositeAllergyIdField = value;
            }
        }
        
        /// <remarks/>
        public string AllergySourceId {
            get {
                return this.allergySourceIdField;
            }
            set {
                this.allergySourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyConceptId {
            get {
                return this.allergyConceptIdField;
            }
            set {
                this.allergyConceptIdField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptType {
            get {
                return this.conceptTypeField;
            }
            set {
                this.conceptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyName {
            get {
                return this.allergyNameField;
            }
            set {
                this.allergyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string AllergySeverityTypeId {
            get {
                return this.allergySeverityTypeIdField;
            }
            set {
                this.allergySeverityTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string AllergySeverityName {
            get {
                return this.allergySeverityNameField;
            }
            set {
                this.allergySeverityNameField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyNotes {
            get {
                return this.allergyNotesField;
            }
            set {
                this.allergyNotesField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptId {
            get {
                return this.conceptIdField;
            }
            set {
                this.conceptIdField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptTypeId {
            get {
                return this.conceptTypeIdField;
            }
            set {
                this.conceptTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Rxcui {
            get {
                return this.rxcuiField;
            }
            set {
                this.rxcuiField = value;
            }
        }
        
        /// <remarks/>
        public string OnsetDate {
            get {
                return this.onsetDateField;
            }
            set {
                this.onsetDateField = value;
            }
        }
        
        /// <remarks/>
        public string RecordedDate {
            get {
                return this.recordedDateField;
            }
            set {
                this.recordedDateField = value;
            }
        }
        
        /// <remarks/>
        public string SnomedConceptId {
            get {
                return this.snomedConceptIdField;
            }
            set {
                this.snomedConceptIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyExtendedDetailV4Result {
        
        private Result resultField;
        
        private PatientAllergyExtendedDetailV4[] patientAllergyExtendedDetailV4Field;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientAllergyExtendedDetailV4[] patientAllergyExtendedDetailV4 {
            get {
                return this.patientAllergyExtendedDetailV4Field;
            }
            set {
                this.patientAllergyExtendedDetailV4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyExtendedDetail {
        
        private string nameField;
        
        private string compositeIDField;
        
        private string conceptIDField;
        
        private string sourceField;
        
        private string conceptTypeIDField;
        
        private string statusField;
        
        private string severityTypeIDField;
        
        private string severityNameField;
        
        private string notesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CompositeID {
            get {
                return this.compositeIDField;
            }
            set {
                this.compositeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptID {
            get {
                return this.conceptIDField;
            }
            set {
                this.conceptIDField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptTypeID {
            get {
                return this.conceptTypeIDField;
            }
            set {
                this.conceptTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityTypeID {
            get {
                return this.severityTypeIDField;
            }
            set {
                this.severityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityName {
            get {
                return this.severityNameField;
            }
            set {
                this.severityNameField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyExtendedDetailResult {
        
        private Result resultField;
        
        private PatientAllergyExtendedDetail[] patientAllergyExtendedDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientAllergyExtendedDetail[] patientAllergyExtendedDetail {
            get {
                return this.patientAllergyExtendedDetailField;
            }
            set {
                this.patientAllergyExtendedDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetailResult5 {
        
        private Result resultField;
        
        private PatientDrugDetail5[] patientDrugDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientDrugDetail5[] patientDrugDetail {
            get {
                return this.patientDrugDetailField;
            }
            set {
                this.patientDrugDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetail4 {
        
        private string accountNameField;
        
        private string externalAccountIDField;
        
        private string siteIDField;
        
        private string fullNameField;
        
        private string externalPatientIDField;
        
        private string prescriptionDateField;
        
        private string drugIDField;
        
        private string drugTypeIDField;
        
        private string drugNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string dosageNumberDescriptionField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string dosageFrequencyDescriptionField;
        
        private string dispenseField;
        
        private string takeAsNeededField;
        
        private string dispenseAsWrittenField;
        
        private string refillsField;
        
        private string statusField;
        
        private string prescriptionGuidField;
        
        private string orderGuidField;
        
        private string prescriptionNotesField;
        
        private string externalPhysicianIDField;
        
        private string physicianNameField;
        
        private string dateMovedToPreviousMedicationsField;
        
        private string healthPlanIDField;
        
        private string healthplanTypeIDField;
        
        private string formularyCoverageField;
        
        private string formularyStatusField;
        
        private string patientIDField;
        
        private string patientIDTypeField;
        
        private string externalPrescriptionIDField;
        
        private string episodeIdentifierField;
        
        private string encounterIdentifierField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalAccountID {
            get {
                return this.externalAccountIDField;
            }
            set {
                this.externalAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientID {
            get {
                return this.externalPatientIDField;
            }
            set {
                this.externalPatientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionDate {
            get {
                return this.prescriptionDateField;
            }
            set {
                this.prescriptionDateField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugTypeID {
            get {
                return this.drugTypeIDField;
            }
            set {
                this.drugTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string DosageNumberDescription {
            get {
                return this.dosageNumberDescriptionField;
            }
            set {
                this.dosageNumberDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFrequencyDescription {
            get {
                return this.dosageFrequencyDescriptionField;
            }
            set {
                this.dosageFrequencyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Dispense {
            get {
                return this.dispenseField;
            }
            set {
                this.dispenseField = value;
            }
        }
        
        /// <remarks/>
        public string TakeAsNeeded {
            get {
                return this.takeAsNeededField;
            }
            set {
                this.takeAsNeededField = value;
            }
        }
        
        /// <remarks/>
        public string DispenseAsWritten {
            get {
                return this.dispenseAsWrittenField;
            }
            set {
                this.dispenseAsWrittenField = value;
            }
        }
        
        /// <remarks/>
        public string Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OrderGuid {
            get {
                return this.orderGuidField;
            }
            set {
                this.orderGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionNotes {
            get {
                return this.prescriptionNotesField;
            }
            set {
                this.prescriptionNotesField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPhysicianID {
            get {
                return this.externalPhysicianIDField;
            }
            set {
                this.externalPhysicianIDField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicianName {
            get {
                return this.physicianNameField;
            }
            set {
                this.physicianNameField = value;
            }
        }
        
        /// <remarks/>
        public string DateMovedToPreviousMedications {
            get {
                return this.dateMovedToPreviousMedicationsField;
            }
            set {
                this.dateMovedToPreviousMedicationsField = value;
            }
        }
        
        /// <remarks/>
        public string HealthPlanID {
            get {
                return this.healthPlanIDField;
            }
            set {
                this.healthPlanIDField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanTypeID {
            get {
                return this.healthplanTypeIDField;
            }
            set {
                this.healthplanTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientIDType {
            get {
                return this.patientIDTypeField;
            }
            set {
                this.patientIDTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionID {
            get {
                return this.externalPrescriptionIDField;
            }
            set {
                this.externalPrescriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeIdentifier {
            get {
                return this.episodeIdentifierField;
            }
            set {
                this.episodeIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string EncounterIdentifier {
            get {
                return this.encounterIdentifierField;
            }
            set {
                this.encounterIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetailResult4 {
        
        private Result resultField;
        
        private PatientDrugDetail4[] patientDrugDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientDrugDetail4[] patientDrugDetail {
            get {
                return this.patientDrugDetailField;
            }
            set {
                this.patientDrugDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PrescriptionHistoryRequest {
        
        private System.DateTime startHistoryField;
        
        private System.DateTime endHistoryField;
        
        private string prescriptionStatusField;
        
        private string prescriptionSubStatusField;
        
        private string prescriptionArchiveStatusField;
        
        /// <remarks/>
        public System.DateTime StartHistory {
            get {
                return this.startHistoryField;
            }
            set {
                this.startHistoryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndHistory {
            get {
                return this.endHistoryField;
            }
            set {
                this.endHistoryField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionStatus {
            get {
                return this.prescriptionStatusField;
            }
            set {
                this.prescriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionSubStatus {
            get {
                return this.prescriptionSubStatusField;
            }
            set {
                this.prescriptionSubStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionArchiveStatus {
            get {
                return this.prescriptionArchiveStatusField;
            }
            set {
                this.prescriptionArchiveStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ReportDownloadDetail {
        
        private int reportGenerationStatusField;
        
        private string reportGenerationStatusMessageField;
        
        private string reportContentsField;
        
        private string reportMIMETypeField;
        
        private int reportFormatTypeField;
        
        private System.DateTime startTimestampField;
        
        private System.DateTime endTimestampField;
        
        private System.DateTime submissionTimestampField;
        
        private int base64EncodedSizeInBytesField;
        
        private int compressedSizeInBytesField;
        
        private int compressionTypeField;
        
        private int rawSizeInBytesField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private int spare5Field;
        
        private int spare6Field;
        
        private int spare7Field;
        
        private int spare8Field;
        
        /// <remarks/>
        public int ReportGenerationStatus {
            get {
                return this.reportGenerationStatusField;
            }
            set {
                this.reportGenerationStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ReportGenerationStatusMessage {
            get {
                return this.reportGenerationStatusMessageField;
            }
            set {
                this.reportGenerationStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string ReportContents {
            get {
                return this.reportContentsField;
            }
            set {
                this.reportContentsField = value;
            }
        }
        
        /// <remarks/>
        public string ReportMIMEType {
            get {
                return this.reportMIMETypeField;
            }
            set {
                this.reportMIMETypeField = value;
            }
        }
        
        /// <remarks/>
        public int ReportFormatType {
            get {
                return this.reportFormatTypeField;
            }
            set {
                this.reportFormatTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTimestamp {
            get {
                return this.startTimestampField;
            }
            set {
                this.startTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTimestamp {
            get {
                return this.endTimestampField;
            }
            set {
                this.endTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmissionTimestamp {
            get {
                return this.submissionTimestampField;
            }
            set {
                this.submissionTimestampField = value;
            }
        }
        
        /// <remarks/>
        public int Base64EncodedSizeInBytes {
            get {
                return this.base64EncodedSizeInBytesField;
            }
            set {
                this.base64EncodedSizeInBytesField = value;
            }
        }
        
        /// <remarks/>
        public int CompressedSizeInBytes {
            get {
                return this.compressedSizeInBytesField;
            }
            set {
                this.compressedSizeInBytesField = value;
            }
        }
        
        /// <remarks/>
        public int CompressionType {
            get {
                return this.compressionTypeField;
            }
            set {
                this.compressionTypeField = value;
            }
        }
        
        /// <remarks/>
        public int RawSizeInBytes {
            get {
                return this.rawSizeInBytesField;
            }
            set {
                this.rawSizeInBytesField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public int Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public int Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
        
        /// <remarks/>
        public int Spare7 {
            get {
                return this.spare7Field;
            }
            set {
                this.spare7Field = value;
            }
        }
        
        /// <remarks/>
        public int Spare8 {
            get {
                return this.spare8Field;
            }
            set {
                this.spare8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ReportDownloadResult {
        
        private Result resultField;
        
        private ReportDownloadDetail reportDownloadDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public ReportDownloadDetail reportDownloadDetail {
            get {
                return this.reportDownloadDetailField;
            }
            set {
                this.reportDownloadDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ReportDetail {
        
        private string transactionIDField;
        
        private string statusField;
        
        private string messageField;
        
        private System.DateTime statusTimestampField;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StatusTimestamp {
            get {
                return this.statusTimestampField;
            }
            set {
                this.statusTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ReportDetailResult {
        
        private Result resultField;
        
        private ReportDetail reportDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public ReportDetail reportDetail {
            get {
                return this.reportDetailField;
            }
            set {
                this.reportDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PDMPReviewDateByPatientDetail {
        
        private string patientIdField;
        
        private string userIdField;
        
        private string userTypeField;
        
        private bool haveDateField;
        
        private string lastDateCheckedField;
        
        private int pDMPProviderIdField;
        
        /// <remarks/>
        public string PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool HaveDate {
            get {
                return this.haveDateField;
            }
            set {
                this.haveDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastDateChecked {
            get {
                return this.lastDateCheckedField;
            }
            set {
                this.lastDateCheckedField = value;
            }
        }
        
        /// <remarks/>
        public int PDMPProviderId {
            get {
                return this.pDMPProviderIdField;
            }
            set {
                this.pDMPProviderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PDMPReviewDateByPatientDetailResult {
        
        private Result resultField;
        
        private PDMPReviewDateByPatientDetail pdmpReviewDateByPatientDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PDMPReviewDateByPatientDetail pdmpReviewDateByPatientDetail {
            get {
                return this.pdmpReviewDateByPatientDetailField;
            }
            set {
                this.pdmpReviewDateByPatientDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientInformationRequester {
        
        private string userTypeField;
        
        private string userIdField;
        
        /// <remarks/>
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientRequest {
        
        private string patientIdField;
        
        /// <remarks/>
        public string PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class StateDrugScheduleOverrides {
        
        private string sourceStateAbbreviationField;
        
        private DrugScheduleDestinationValueType destinationValueTypeField;
        
        private string destinationValueField;
        
        private DrugScheduleDrugConceptType drugConceptTypeField;
        
        private string drugConceptField;
        
        private string deaScheduleField;
        
        private string sourceStateScheduleOverrideField;
        
        private string destinationStateScheduleOverrideField;
        
        /// <remarks/>
        public string SourceStateAbbreviation {
            get {
                return this.sourceStateAbbreviationField;
            }
            set {
                this.sourceStateAbbreviationField = value;
            }
        }
        
        /// <remarks/>
        public DrugScheduleDestinationValueType DestinationValueType {
            get {
                return this.destinationValueTypeField;
            }
            set {
                this.destinationValueTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationValue {
            get {
                return this.destinationValueField;
            }
            set {
                this.destinationValueField = value;
            }
        }
        
        /// <remarks/>
        public DrugScheduleDrugConceptType DrugConceptType {
            get {
                return this.drugConceptTypeField;
            }
            set {
                this.drugConceptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DrugConcept {
            get {
                return this.drugConceptField;
            }
            set {
                this.drugConceptField = value;
            }
        }
        
        /// <remarks/>
        public string DeaSchedule {
            get {
                return this.deaScheduleField;
            }
            set {
                this.deaScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string SourceStateScheduleOverride {
            get {
                return this.sourceStateScheduleOverrideField;
            }
            set {
                this.sourceStateScheduleOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationStateScheduleOverride {
            get {
                return this.destinationStateScheduleOverrideField;
            }
            set {
                this.destinationStateScheduleOverrideField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DrugScheduleDestinationValueType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        StateCode,
        
        /// <remarks/>
        NCPDP,
        
        /// <remarks/>
        NPI,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum DrugScheduleDrugConceptType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        FDB,
        
        /// <remarks/>
        Multum,
        
        /// <remarks/>
        NDC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class StateDrugScheduleOverridesResult {
        
        private Result resultField;
        
        private StateDrugScheduleOverrides stateDrugScheduleOverridesField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public StateDrugScheduleOverrides stateDrugScheduleOverrides {
            get {
                return this.stateDrugScheduleOverridesField;
            }
            set {
                this.stateDrugScheduleOverridesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeDeliveryStatusDetail {
        
        private string transactionIDField;
        
        private TransmissionStatusType transmissionStatusField;
        
        private NcpdpStatusEnum statusTypeField;
        
        private string referenceNumberField;
        
        private string noteField;
        
        private DateTimeCompositeType statusTimestampField;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionStatusType TransmissionStatus {
            get {
                return this.transmissionStatusField;
            }
            set {
                this.transmissionStatusField = value;
            }
        }
        
        /// <remarks/>
        public NcpdpStatusEnum StatusType {
            get {
                return this.statusTypeField;
            }
            set {
                this.statusTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeCompositeType StatusTimestamp {
            get {
                return this.statusTimestampField;
            }
            set {
                this.statusTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeDeliveryStatusResult {
        
        private Result resultField;
        
        private RxChangeDeliveryStatusDetail rxChangeResponseStatusDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeDeliveryStatusDetail rxChangeResponseStatusDetail {
            get {
                return this.rxChangeResponseStatusDetailField;
            }
            set {
                this.rxChangeResponseStatusDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class GetRxChangeStatusResult {
        
        private Result resultField;
        
        private RxBatchSummary rxBatchSummaryField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummary rxBatchSummary {
            get {
                return this.rxBatchSummaryField;
            }
            set {
                this.rxBatchSummaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class MessageDetail {
        
        private CompleteBatchStatusType completeBatchStatusField;
        
        private string displayMessageField;
        
        private string logMessageField;
        
        private string transactionGuidInField;
        
        /// <remarks/>
        public CompleteBatchStatusType CompleteBatchStatus {
            get {
                return this.completeBatchStatusField;
            }
            set {
                this.completeBatchStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayMessage {
            get {
                return this.displayMessageField;
            }
            set {
                this.displayMessageField = value;
            }
        }
        
        /// <remarks/>
        public string LogMessage {
            get {
                return this.logMessageField;
            }
            set {
                this.logMessageField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionGuidIn {
            get {
                return this.transactionGuidInField;
            }
            set {
                this.transactionGuidInField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum CompleteBatchStatusType {
        
        /// <remarks/>
        Succeeded,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        WaitingForProviderInput,
        
        /// <remarks/>
        OTPInvalid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CompleteBatchResult {
        
        private Result resultField;
        
        private MessageDetail messageDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public MessageDetail messageDetail {
            get {
                return this.messageDetailField;
            }
            set {
                this.messageDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TwoFactorAuthentication {
        
        private TwoFactorAuthenticationSigningType authenticationTypeField;
        
        private string passcodeField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public TwoFactorAuthenticationSigningType AuthenticationType {
            get {
                return this.authenticationTypeField;
            }
            set {
                this.authenticationTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Passcode {
            get {
                return this.passcodeField;
            }
            set {
                this.passcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum TwoFactorAuthenticationSigningType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        HardToken,
        
        /// <remarks/>
        SoftToken,
        
        /// <remarks/>
        PushNotification,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RxChangeResponseDetail {
        
        private DateTimeCompositeType batchDetailCreatedTimestampField;
        
        private RxChangeResponseDetailYesNoType includeInDigitalSigningTransactionField;
        
        private RxChangeResponseDetailSigningStatusType signingStatusField;
        
        private string signingStatusMessageField;
        
        private string rxChangeRequestIdentifierField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public DateTimeCompositeType BatchDetailCreatedTimestamp {
            get {
                return this.batchDetailCreatedTimestampField;
            }
            set {
                this.batchDetailCreatedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeResponseDetailYesNoType IncludeInDigitalSigningTransaction {
            get {
                return this.includeInDigitalSigningTransactionField;
            }
            set {
                this.includeInDigitalSigningTransactionField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeResponseDetailSigningStatusType SigningStatus {
            get {
                return this.signingStatusField;
            }
            set {
                this.signingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SigningStatusMessage {
            get {
                return this.signingStatusMessageField;
            }
            set {
                this.signingStatusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string RxChangeRequestIdentifier {
            get {
                return this.rxChangeRequestIdentifierField;
            }
            set {
                this.rxChangeRequestIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeResponseDetailYesNoType {
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        Yes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxChangeResponseDetailSigningStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        NotAttempted,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CreateRxChangeApprovalResponseResult {
        
        private Result resultField;
        
        private RxBatchSummary rxBatchSummaryField;
        
        private RxChangeResponseDetail[] rxChangeResponseDetailListField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RxBatchSummary rxBatchSummary {
            get {
                return this.rxBatchSummaryField;
            }
            set {
                this.rxBatchSummaryField = value;
            }
        }
        
        /// <remarks/>
        public RxChangeResponseDetail[] rxChangeResponseDetailList {
            get {
                return this.rxChangeResponseDetailListField;
            }
            set {
                this.rxChangeResponseDetailListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class AccountRequest {
        
        private string accountIdField;
        
        private string siteIdField;
        
        /// <remarks/>
        public string AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum TimePeriodQueryType {
        
        /// <remarks/>
        DateRange,
        
        /// <remarks/>
        Quarterly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum PrescriptionTransmissionQueryType {
        
        /// <remarks/>
        PrescriptionIDs,
        
        /// <remarks/>
        PrescriptionGuid,
        
        /// <remarks/>
        TransactionGuid,
        
        /// <remarks/>
        TransactionDetailGuid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum RxBatchCompletionStatusType {
        
        /// <remarks/>
        Cancel,
        
        /// <remarks/>
        Continue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRxChangeApprovalResponseCompletedEventHandler(object sender, CreateRxChangeApprovalResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRxChangeApprovalResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRxChangeApprovalResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateRxChangeApprovalResponseResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateRxChangeApprovalResponseResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteRxChangeApprovalCompletedEventHandler(object sender, CompleteRxChangeApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRxChangeApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRxChangeApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteRxChangeApprovalV2CompletedEventHandler(object sender, CompleteRxChangeApprovalV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRxChangeApprovalV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRxChangeApprovalV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompleteBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompleteBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RollbackRxChangeApprovalCompletedEventHandler(object sender, RollbackRxChangeApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RollbackRxChangeApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RollbackRxChangeApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRxChangeStatusCompletedEventHandler(object sender, GetRxChangeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxChangeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxChangeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxChangeStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxChangeStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CheckRxChangeDeliveryStatusCompletedEventHandler(object sender, CheckRxChangeDeliveryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRxChangeDeliveryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRxChangeDeliveryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxChangeDeliveryStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxChangeDeliveryStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetStateDrugScheduleOverridesCompletedEventHandler(object sender, GetStateDrugScheduleOverridesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateDrugScheduleOverridesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateDrugScheduleOverridesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateDrugScheduleOverridesResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateDrugScheduleOverridesResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLastPDMPReviewDateByPatientCompletedEventHandler(object sender, GetLastPDMPReviewDateByPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastPDMPReviewDateByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastPDMPReviewDateByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PDMPReviewDateByPatientDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PDMPReviewDateByPatientDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDailyScriptReportCompletedEventHandler(object sender, GetDailyScriptReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyScriptReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyScriptReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDailyScriptReportV2CompletedEventHandler(object sender, GetDailyScriptReportV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyScriptReportV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyScriptReportV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDailyScriptReportV3CompletedEventHandler(object sender, GetDailyScriptReportV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyScriptReportV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyScriptReportV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateMeaningfulUseUtilizationReportCompletedEventHandler(object sender, GenerateMeaningfulUseUtilizationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateMeaningfulUseUtilizationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateMeaningfulUseUtilizationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMeaningfulUseUtilizationReportCompletedEventHandler(object sender, GetMeaningfulUseUtilizationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeaningfulUseUtilizationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeaningfulUseUtilizationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportDownloadResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportDownloadResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDailyMeaningfulUseReportCompletedEventHandler(object sender, GetDailyMeaningfulUseReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyMeaningfulUseReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyMeaningfulUseReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCompleteMedicationHistoryCompletedEventHandler(object sender, GetCompleteMedicationHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompleteMedicationHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompleteMedicationHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientFullMedicationHistory4CompletedEventHandler(object sender, GetPatientFullMedicationHistory4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFullMedicationHistory4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFullMedicationHistory4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDrugDetailResult4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDrugDetailResult4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientFullMedicationHistory5CompletedEventHandler(object sender, GetPatientFullMedicationHistory5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFullMedicationHistory5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFullMedicationHistory5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDrugDetailResult5 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDrugDetailResult5)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientFullMedicationHistory6CompletedEventHandler(object sender, GetPatientFullMedicationHistory6CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFullMedicationHistory6CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFullMedicationHistory6CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientAllergyHistory2CompletedEventHandler(object sender, GetPatientAllergyHistory2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyHistory2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyHistory2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAllergyExtendedDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAllergyExtendedDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientAllergyHistoryV3CompletedEventHandler(object sender, GetPatientAllergyHistoryV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyHistoryV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyHistoryV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientAllergyHistoryV4CompletedEventHandler(object sender, GetPatientAllergyHistoryV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyHistoryV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyHistoryV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAllergyExtendedDetailV4Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAllergyExtendedDetailV4Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientFreeFormAllergyHistoryCompletedEventHandler(object sender, GetPatientFreeFormAllergyHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFreeFormAllergyHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFreeFormAllergyHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientFreeFormAllergyExtendedDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientFreeFormAllergyExtendedDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPatientAllergyLogCompletedEventHandler(object sender, GetPatientAllergyLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAllergyLogDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAllergyLogDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPrescriptionTransmissionStatusCompletedEventHandler(object sender, GetPrescriptionTransmissionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionTransmissionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionTransmissionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransmissionSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransmissionSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPrescriptionTransmissionStatusByPatientCompletedEventHandler(object sender, GetPrescriptionTransmissionStatusByPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionTransmissionStatusByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionTransmissionStatusByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransmissionSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransmissionSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateTestRenewalRequestCompletedEventHandler(object sender, GenerateTestRenewalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateTestRenewalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateTestRenewalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRenewalRequestsCompletedEventHandler(object sender, GetAllRenewalRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRenewalRequestsV2CompletedEventHandler(object sender, GetAllRenewalRequestsV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalSummaryResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalSummaryResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRenewalRequestsV3CompletedEventHandler(object sender, GetAllRenewalRequestsV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalSummaryResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalSummaryResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRenewalRequestsDetailV4CompletedEventHandler(object sender, GetAllRenewalRequestsDetailV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsDetailV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsDetailV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalListDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalListDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRenewalRequestsSummaryV4CompletedEventHandler(object sender, GetAllRenewalRequestsSummaryV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsSummaryV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsSummaryV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalListSummaryResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalListSummaryResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalRequestDetailCompletedEventHandler(object sender, GetRenewalRequestDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalRequestDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalRequestDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalRequestDetailV4CompletedEventHandler(object sender, GetRenewalRequestDetailV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalRequestDetailV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalRequestDetailV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalRequestDetailV5CompletedEventHandler(object sender, GetRenewalRequestDetailV5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalRequestDetailV5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalRequestDetailV5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalDetailResultV5 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalDetailResultV5)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ProcessRenewalRequestCompletedEventHandler(object sender, ProcessRenewalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessRenewalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessRenewalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalResponseTransmissionStatusCompletedEventHandler(object sender, GetRenewalResponseTransmissionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalResponseTransmissionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalResponseTransmissionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalResponseDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalResponseDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalResponseStatusCompletedEventHandler(object sender, GetRenewalResponseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalResponseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalResponseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FormularyAlternativesWithDrugInfo2CompletedEventHandler(object sender, FormularyAlternativesWithDrugInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormularyAlternativesWithDrugInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormularyAlternativesWithDrugInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugFormularyDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugFormularyDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendMissingHealthplanInformationCompletedEventHandler(object sender, SendMissingHealthplanInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMissingHealthplanInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMissingHealthplanInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPBMDrugHistoryV2CompletedEventHandler(object sender, GetPBMDrugHistoryV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMDrugHistoryV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMDrugHistoryV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugHistoryDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugHistoryDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPBMDrugHistoryV3CompletedEventHandler(object sender, GetPBMDrugHistoryV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMDrugHistoryV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMDrugHistoryV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugHistoryDetailV3Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugHistoryDetailV3Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMostRecentDownloadUrlCompletedEventHandler(object sender, GetMostRecentDownloadUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMostRecentDownloadUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMostRecentDownloadUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DownloadDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DownloadDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DrugDiseaseInteractionCompletedEventHandler(object sender, DrugDiseaseInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugDiseaseInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugDiseaseInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugDiseaseDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugDiseaseDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DrugDiseaseInteractionV2CompletedEventHandler(object sender, DrugDiseaseInteractionV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugDiseaseInteractionV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugDiseaseInteractionV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugDiseaseDetailResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugDiseaseDetailResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void PharmacySearchV3CompletedEventHandler(object sender, PharmacySearchV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PharmacySearchV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PharmacySearchV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PharmacyDetailResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDetailResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void PharmacySearchV4CompletedEventHandler(object sender, PharmacySearchV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PharmacySearchV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PharmacySearchV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PharmacyDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void PharmacySearchV5CompletedEventHandler(object sender, PharmacySearchV5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PharmacySearchV5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PharmacySearchV5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PharmacyDetailResultV5 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDetailResultV5)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLocationPharmaciesCompletedEventHandler(object sender, GetLocationPharmaciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationPharmaciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationPharmaciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PharmacyDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DrugSearchWithFormularyWithFavoritesV2CompletedEventHandler(object sender, DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugFormularyFavoriteDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugFormularyFavoriteDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DrugSearchWithFormularyWithFavoritesV3CompletedEventHandler(object sender, DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void HealthplanSearchV2CompletedEventHandler(object sender, HealthplanSearchV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HealthplanSearchV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HealthplanSearchV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HealthplanDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HealthplanDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FormularyCoverageV3CompletedEventHandler(object sender, FormularyCoverageV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormularyCoverageV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormularyCoverageV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FormularyCoverageDetailResultV3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FormularyCoverageDetailResultV3)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ReportPrescribingCountCompletedEventHandler(object sender, ReportPrescribingCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportPrescribingCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportPrescribingCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCounselingMessagesCompletedEventHandler(object sender, GetCounselingMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCounselingMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCounselingMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CounselingMessageDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CounselingMessageDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSideEffectsCompletedEventHandler(object sender, GetSideEffectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSideEffectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSideEffectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAccountStatusV2CompletedEventHandler(object sender, GetAccountStatusV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatusV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatusV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountStatusDetailV2Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountStatusDetailV2Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAccountStatusDetailCompletedEventHandler(object sender, GetAccountStatusDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatusDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatusDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPBMEligibilityV2CompletedEventHandler(object sender, GetPBMEligibilityV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMEligibilityV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMEligibilityV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EligibilityDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EligibilityDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPBMEligibilityV3CompletedEventHandler(object sender, GetPBMEligibilityV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMEligibilityV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMEligibilityV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EligibilityDetailResultV3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EligibilityDetailResultV3)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetPrescriptionTransmissionStatusV2CompletedEventHandler(object sender, GetPrescriptionTransmissionStatusV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionTransmissionStatusV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionTransmissionStatusV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransmissionSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransmissionSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSubmittedMessageTransactionStatusCompletedEventHandler(object sender, GetSubmittedMessageTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubmittedMessageTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubmittedMessageTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageTransactionStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageTransactionStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DrugAllergyInteractionV2CompletedEventHandler(object sender, DrugAllergyInteractionV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugAllergyInteractionV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugAllergyInteractionV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugAllergyDetailResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugAllergyDetailResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ResolveFailedPrescriptionTransmissionCompletedEventHandler(object sender, ResolveFailedPrescriptionTransmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveFailedPrescriptionTransmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveFailedPrescriptionTransmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetMeaningfulUsePatientEncounterInfoCompletedEventHandler(object sender, GetMeaningfulUsePatientEncounterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeaningfulUsePatientEncounterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeaningfulUsePatientEncounterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DoseCheckCompletedEventHandler(object sender, DoseCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoseCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoseCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendToRegistryCompletedEventHandler(object sender, SendToRegistryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendToRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistryDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistryDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RegisterLicensedPrescriberV2CompletedEventHandler(object sender, RegisterLicensedPrescriberV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterLicensedPrescriberV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterLicensedPrescriberV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegisterPrescriberDetailV2Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegisterPrescriberDetailV2Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LicensedPrescriberStatusV2CompletedEventHandler(object sender, LicensedPrescriberStatusV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LicensedPrescriberStatusV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LicensedPrescriberStatusV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegisterPrescriberDetailV2Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegisterPrescriberDetailV2Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RegisterOrganizationCompletedEventHandler(object sender, RegisterOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreatePatientPortalLoginCompletedEventHandler(object sender, CreatePatientPortalLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePatientPortalLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePatientPortalLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRxBatchStatusCompletedEventHandler(object sender, GetRxBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxBatchPrescriptionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxBatchPrescriptionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDigitalSigningBatchStatusCompletedEventHandler(object sender, GetDigitalSigningBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigitalSigningBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDigitalSigningBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DigitalSigningBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DigitalSigningBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDigitallySignedMessageCompletedEventHandler(object sender, GetDigitallySignedMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigitallySignedMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDigitallySignedMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DigitalSigningBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DigitalSigningBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRxBatchCompletedEventHandler(object sender, CreateRxBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRxBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRxBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxBatchPrescriptionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxBatchPrescriptionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateDigitalSigningBatchCompletedEventHandler(object sender, CreateDigitalSigningBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDigitalSigningBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDigitalSigningBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DigitalSigningBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DigitalSigningBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRenewalBatchCompletedEventHandler(object sender, CreateRenewalBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRenewalBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRenewalBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxBatchRenewalResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxBatchRenewalResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalBatchStatusCompletedEventHandler(object sender, GetRenewalBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxBatchRenewalResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxBatchRenewalResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRenewalBatchStatusV2CompletedEventHandler(object sender, GetRenewalBatchStatusV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalBatchStatusV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalBatchStatusV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxBatchRenewalResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxBatchRenewalResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteRxBatchCompletedEventHandler(object sender, CompleteRxBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRxBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRxBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteRxBatchV2CompletedEventHandler(object sender, CompleteRxBatchV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRxBatchV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRxBatchV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompleteBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompleteBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteDigitalSigningBatchCompletedEventHandler(object sender, CompleteDigitalSigningBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteDigitalSigningBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteDigitalSigningBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteDigitalSigningBatchV2CompletedEventHandler(object sender, CompleteDigitalSigningBatchV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteDigitalSigningBatchV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteDigitalSigningBatchV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompleteBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompleteBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteRenewalBatchCompletedEventHandler(object sender, CompleteRenewalBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRenewalBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRenewalBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CompleteRenewalBatchV2CompletedEventHandler(object sender, CompleteRenewalBatchV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRenewalBatchV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRenewalBatchV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompleteBatchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompleteBatchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DuplicateDrugTherapyCompletedEventHandler(object sender, DuplicateDrugTherapyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateDrugTherapyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateDrugTherapyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DuplicateDrugTherapyResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DuplicateDrugTherapyResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendCancelRxForNewRxCompletedEventHandler(object sender, SendCancelRxForNewRxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCancelRxForNewRxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCancelRxForNewRxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendCancelRxResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendCancelRxResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendCancelRxForRenewalResponseCompletedEventHandler(object sender, SendCancelRxForRenewalResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCancelRxForRenewalResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCancelRxForRenewalResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendCancelRxResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendCancelRxResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CheckCancelRxStatusCompletedEventHandler(object sender, CheckCancelRxStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCancelRxStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCancelRxStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckCancelRxStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckCancelRxStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CheckCancelRxStatusV2CompletedEventHandler(object sender, CheckCancelRxStatusV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCancelRxStatusV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCancelRxStatusV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckCancelRxStatusV2Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckCancelRxStatusV2Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ConfirmCancelRxCompletedEventHandler(object sender, ConfirmCancelRxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmCancelRxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmCancelRxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRxFillsSummaryCompletedEventHandler(object sender, GetAllRxFillsSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRxFillsSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRxFillsSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxFillSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxFillSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRxFillDetailCompletedEventHandler(object sender, GetRxFillDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxFillDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxFillDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxFillDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxFillDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ConfirmRxFillReceiptCompletedEventHandler(object sender, ConfirmRxFillReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmRxFillReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmRxFillReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRxChangesSummaryCompletedEventHandler(object sender, GetAllRxChangesSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRxChangesSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRxChangesSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxChangesSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxChangesSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllRxChangesSummaryV2CompletedEventHandler(object sender, GetAllRxChangesSummaryV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRxChangesSummaryV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRxChangesSummaryV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxChangesSummaryV2Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxChangesSummaryV2Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetRxChangeDetailCompletedEventHandler(object sender, GetRxChangeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxChangeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxChangeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxChangeDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxChangeDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ConfirmRxChangeReceiptCompletedEventHandler(object sender, ConfirmRxChangeReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmRxChangeReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmRxChangeReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendRxChangeDenyResponseCompletedEventHandler(object sender, SendRxChangeDenyResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRxChangeDenyResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRxChangeDenyResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxChangeDeliveryStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxChangeDeliveryStatusResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591