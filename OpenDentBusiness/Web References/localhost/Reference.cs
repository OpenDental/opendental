//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OpenDentBusiness.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://open-dent.com/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EstablishConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCustomerIDStrictOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestRegKeyStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestEmailVerificationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostEmailCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCertCanadaABCOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCertCanadaTelusAandBOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCertCanadaTelusAandBtestOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsForeignRegKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCodeSystemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestCodeSystemDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeatureRequestGetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeatureRequestGetOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeatureRequestSubmitChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeatureRequestDiscussSubmitOperationCompleted;
        
        private System.Threading.SendOrPostCallback FeatureRequestDiscussGetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestFeeSchedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PracticeTitleResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErxAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicErxAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestPatientPortalURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePatientPortalOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateWebSchedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateWebSchedNewPatApptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebSchedURLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateResellerCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestIsDevKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://localhost:3824/Service1.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EstablishConnectionCompletedEventHandler EstablishConnectionCompleted;
        
        /// <remarks/>
        public event RequestUpdateCompletedEventHandler RequestUpdateCompleted;
        
        /// <remarks/>
        public event RequestCustomerIDCompletedEventHandler RequestCustomerIDCompleted;
        
        /// <remarks/>
        public event RequestCustomerIDStrictCompletedEventHandler RequestCustomerIDStrictCompleted;
        
        /// <remarks/>
        public event RequestRegKeyStatusCompletedEventHandler RequestRegKeyStatusCompleted;
        
        /// <remarks/>
        public event RequestEmailVerificationCodeCompletedEventHandler RequestEmailVerificationCodeCompleted;
        
        /// <remarks/>
        public event PostEmailCertificateCompletedEventHandler PostEmailCertificateCompleted;
        
        /// <remarks/>
        public event RequestCertCanadaABCCompletedEventHandler RequestCertCanadaABCCompleted;
        
        /// <remarks/>
        public event RequestCertCanadaTelusAandBCompletedEventHandler RequestCertCanadaTelusAandBCompleted;
        
        /// <remarks/>
        public event RequestCertCanadaTelusAandBtestCompletedEventHandler RequestCertCanadaTelusAandBtestCompleted;
        
        /// <remarks/>
        public event IsForeignRegKeyCompletedEventHandler IsForeignRegKeyCompleted;
        
        /// <remarks/>
        public event RequestCodeSystemsCompletedEventHandler RequestCodeSystemsCompleted;
        
        /// <remarks/>
        public event RequestCodeSystemDownloadCompletedEventHandler RequestCodeSystemDownloadCompleted;
        
        /// <remarks/>
        public event FeatureRequestGetListCompletedEventHandler FeatureRequestGetListCompleted;
        
        /// <remarks/>
        public event FeatureRequestGetOneCompletedEventHandler FeatureRequestGetOneCompleted;
        
        /// <remarks/>
        public event FeatureRequestSubmitChangesCompletedEventHandler FeatureRequestSubmitChangesCompleted;
        
        /// <remarks/>
        public event FeatureRequestDiscussSubmitCompletedEventHandler FeatureRequestDiscussSubmitCompleted;
        
        /// <remarks/>
        public event FeatureRequestDiscussGetListCompletedEventHandler FeatureRequestDiscussGetListCompleted;
        
        /// <remarks/>
        public event RequestFeeSchedCompletedEventHandler RequestFeeSchedCompleted;
        
        /// <remarks/>
        public event PracticeTitleResetCompletedEventHandler PracticeTitleResetCompleted;
        
        /// <remarks/>
        public event GetErxAccessCompletedEventHandler GetErxAccessCompleted;
        
        /// <remarks/>
        public event GetClinicErxAccessCompletedEventHandler GetClinicErxAccessCompleted;
        
        /// <remarks/>
        public event RequestPatientPortalURLCompletedEventHandler RequestPatientPortalURLCompleted;
        
        /// <remarks/>
        public event ValidatePatientPortalOfficeCompletedEventHandler ValidatePatientPortalOfficeCompleted;
        
        /// <remarks/>
        public event ValidateWebSchedCompletedEventHandler ValidateWebSchedCompleted;
        
        /// <remarks/>
        public event ValidateWebSchedNewPatApptCompletedEventHandler ValidateWebSchedNewPatApptCompleted;
        
        /// <remarks/>
        public event GetWebSchedURLsCompletedEventHandler GetWebSchedURLsCompleted;
        
        /// <remarks/>
        public event ValidateResellerCredentialsCompletedEventHandler ValidateResellerCredentialsCompleted;
        
        /// <remarks/>
        public event RequestIsDevKeyCompletedEventHandler RequestIsDevKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/EstablishConnection", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EstablishConnection() {
            object[] results = this.Invoke("EstablishConnection", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EstablishConnectionAsync() {
            this.EstablishConnectionAsync(null);
        }
        
        /// <remarks/>
        public void EstablishConnectionAsync(object userState) {
            if ((this.EstablishConnectionOperationCompleted == null)) {
                this.EstablishConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishConnectionOperationCompleted);
            }
            this.InvokeAsync("EstablishConnection", new object[0], this.EstablishConnectionOperationCompleted, userState);
        }
        
        private void OnEstablishConnectionOperationCompleted(object arg) {
            if ((this.EstablishConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishConnectionCompleted(this, new EstablishConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestUpdate", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestUpdate(string officeData) {
            object[] results = this.Invoke("RequestUpdate", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestUpdateAsync(string officeData) {
            this.RequestUpdateAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestUpdateAsync(string officeData, object userState) {
            if ((this.RequestUpdateOperationCompleted == null)) {
                this.RequestUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestUpdateOperationCompleted);
            }
            this.InvokeAsync("RequestUpdate", new object[] {
                        officeData}, this.RequestUpdateOperationCompleted, userState);
        }
        
        private void OnRequestUpdateOperationCompleted(object arg) {
            if ((this.RequestUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestUpdateCompleted(this, new RequestUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCustomerID", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCustomerID(string officeData) {
            object[] results = this.Invoke("RequestCustomerID", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCustomerIDAsync(string officeData) {
            this.RequestCustomerIDAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCustomerIDAsync(string officeData, object userState) {
            if ((this.RequestCustomerIDOperationCompleted == null)) {
                this.RequestCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCustomerIDOperationCompleted);
            }
            this.InvokeAsync("RequestCustomerID", new object[] {
                        officeData}, this.RequestCustomerIDOperationCompleted, userState);
        }
        
        private void OnRequestCustomerIDOperationCompleted(object arg) {
            if ((this.RequestCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCustomerIDCompleted(this, new RequestCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCustomerIDStrict", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCustomerIDStrict(string officeData) {
            object[] results = this.Invoke("RequestCustomerIDStrict", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCustomerIDStrictAsync(string officeData) {
            this.RequestCustomerIDStrictAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCustomerIDStrictAsync(string officeData, object userState) {
            if ((this.RequestCustomerIDStrictOperationCompleted == null)) {
                this.RequestCustomerIDStrictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCustomerIDStrictOperationCompleted);
            }
            this.InvokeAsync("RequestCustomerIDStrict", new object[] {
                        officeData}, this.RequestCustomerIDStrictOperationCompleted, userState);
        }
        
        private void OnRequestCustomerIDStrictOperationCompleted(object arg) {
            if ((this.RequestCustomerIDStrictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCustomerIDStrictCompleted(this, new RequestCustomerIDStrictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestRegKeyStatus", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestRegKeyStatus(string officeData) {
            object[] results = this.Invoke("RequestRegKeyStatus", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestRegKeyStatusAsync(string officeData) {
            this.RequestRegKeyStatusAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestRegKeyStatusAsync(string officeData, object userState) {
            if ((this.RequestRegKeyStatusOperationCompleted == null)) {
                this.RequestRegKeyStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestRegKeyStatusOperationCompleted);
            }
            this.InvokeAsync("RequestRegKeyStatus", new object[] {
                        officeData}, this.RequestRegKeyStatusOperationCompleted, userState);
        }
        
        private void OnRequestRegKeyStatusOperationCompleted(object arg) {
            if ((this.RequestRegKeyStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestRegKeyStatusCompleted(this, new RequestRegKeyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestEmailVerificationCode", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestEmailVerificationCode(string officeData) {
            object[] results = this.Invoke("RequestEmailVerificationCode", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestEmailVerificationCodeAsync(string officeData) {
            this.RequestEmailVerificationCodeAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestEmailVerificationCodeAsync(string officeData, object userState) {
            if ((this.RequestEmailVerificationCodeOperationCompleted == null)) {
                this.RequestEmailVerificationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestEmailVerificationCodeOperationCompleted);
            }
            this.InvokeAsync("RequestEmailVerificationCode", new object[] {
                        officeData}, this.RequestEmailVerificationCodeOperationCompleted, userState);
        }
        
        private void OnRequestEmailVerificationCodeOperationCompleted(object arg) {
            if ((this.RequestEmailVerificationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestEmailVerificationCodeCompleted(this, new RequestEmailVerificationCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/PostEmailCertificate", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostEmailCertificate(string officeData) {
            object[] results = this.Invoke("PostEmailCertificate", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostEmailCertificateAsync(string officeData) {
            this.PostEmailCertificateAsync(officeData, null);
        }
        
        /// <remarks/>
        public void PostEmailCertificateAsync(string officeData, object userState) {
            if ((this.PostEmailCertificateOperationCompleted == null)) {
                this.PostEmailCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostEmailCertificateOperationCompleted);
            }
            this.InvokeAsync("PostEmailCertificate", new object[] {
                        officeData}, this.PostEmailCertificateOperationCompleted, userState);
        }
        
        private void OnPostEmailCertificateOperationCompleted(object arg) {
            if ((this.PostEmailCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostEmailCertificateCompleted(this, new PostEmailCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCertCanadaABC", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCertCanadaABC(string officeData) {
            object[] results = this.Invoke("RequestCertCanadaABC", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCertCanadaABCAsync(string officeData) {
            this.RequestCertCanadaABCAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCertCanadaABCAsync(string officeData, object userState) {
            if ((this.RequestCertCanadaABCOperationCompleted == null)) {
                this.RequestCertCanadaABCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCertCanadaABCOperationCompleted);
            }
            this.InvokeAsync("RequestCertCanadaABC", new object[] {
                        officeData}, this.RequestCertCanadaABCOperationCompleted, userState);
        }
        
        private void OnRequestCertCanadaABCOperationCompleted(object arg) {
            if ((this.RequestCertCanadaABCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCertCanadaABCCompleted(this, new RequestCertCanadaABCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCertCanadaTelusAandB", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCertCanadaTelusAandB(string officeData) {
            object[] results = this.Invoke("RequestCertCanadaTelusAandB", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCertCanadaTelusAandBAsync(string officeData) {
            this.RequestCertCanadaTelusAandBAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCertCanadaTelusAandBAsync(string officeData, object userState) {
            if ((this.RequestCertCanadaTelusAandBOperationCompleted == null)) {
                this.RequestCertCanadaTelusAandBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCertCanadaTelusAandBOperationCompleted);
            }
            this.InvokeAsync("RequestCertCanadaTelusAandB", new object[] {
                        officeData}, this.RequestCertCanadaTelusAandBOperationCompleted, userState);
        }
        
        private void OnRequestCertCanadaTelusAandBOperationCompleted(object arg) {
            if ((this.RequestCertCanadaTelusAandBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCertCanadaTelusAandBCompleted(this, new RequestCertCanadaTelusAandBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCertCanadaTelusAandBtest", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCertCanadaTelusAandBtest(string officeData) {
            object[] results = this.Invoke("RequestCertCanadaTelusAandBtest", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCertCanadaTelusAandBtestAsync(string officeData) {
            this.RequestCertCanadaTelusAandBtestAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCertCanadaTelusAandBtestAsync(string officeData, object userState) {
            if ((this.RequestCertCanadaTelusAandBtestOperationCompleted == null)) {
                this.RequestCertCanadaTelusAandBtestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCertCanadaTelusAandBtestOperationCompleted);
            }
            this.InvokeAsync("RequestCertCanadaTelusAandBtest", new object[] {
                        officeData}, this.RequestCertCanadaTelusAandBtestOperationCompleted, userState);
        }
        
        private void OnRequestCertCanadaTelusAandBtestOperationCompleted(object arg) {
            if ((this.RequestCertCanadaTelusAandBtestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCertCanadaTelusAandBtestCompleted(this, new RequestCertCanadaTelusAandBtestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/IsForeignRegKey", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsForeignRegKey(string officeData) {
            object[] results = this.Invoke("IsForeignRegKey", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsForeignRegKeyAsync(string officeData) {
            this.IsForeignRegKeyAsync(officeData, null);
        }
        
        /// <remarks/>
        public void IsForeignRegKeyAsync(string officeData, object userState) {
            if ((this.IsForeignRegKeyOperationCompleted == null)) {
                this.IsForeignRegKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsForeignRegKeyOperationCompleted);
            }
            this.InvokeAsync("IsForeignRegKey", new object[] {
                        officeData}, this.IsForeignRegKeyOperationCompleted, userState);
        }
        
        private void OnIsForeignRegKeyOperationCompleted(object arg) {
            if ((this.IsForeignRegKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsForeignRegKeyCompleted(this, new IsForeignRegKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCodeSystems", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCodeSystems(string officeData) {
            object[] results = this.Invoke("RequestCodeSystems", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCodeSystemsAsync(string officeData) {
            this.RequestCodeSystemsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCodeSystemsAsync(string officeData, object userState) {
            if ((this.RequestCodeSystemsOperationCompleted == null)) {
                this.RequestCodeSystemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCodeSystemsOperationCompleted);
            }
            this.InvokeAsync("RequestCodeSystems", new object[] {
                        officeData}, this.RequestCodeSystemsOperationCompleted, userState);
        }
        
        private void OnRequestCodeSystemsOperationCompleted(object arg) {
            if ((this.RequestCodeSystemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCodeSystemsCompleted(this, new RequestCodeSystemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestCodeSystemDownload", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestCodeSystemDownload(string officeData) {
            object[] results = this.Invoke("RequestCodeSystemDownload", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestCodeSystemDownloadAsync(string officeData) {
            this.RequestCodeSystemDownloadAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestCodeSystemDownloadAsync(string officeData, object userState) {
            if ((this.RequestCodeSystemDownloadOperationCompleted == null)) {
                this.RequestCodeSystemDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestCodeSystemDownloadOperationCompleted);
            }
            this.InvokeAsync("RequestCodeSystemDownload", new object[] {
                        officeData}, this.RequestCodeSystemDownloadOperationCompleted, userState);
        }
        
        private void OnRequestCodeSystemDownloadOperationCompleted(object arg) {
            if ((this.RequestCodeSystemDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestCodeSystemDownloadCompleted(this, new RequestCodeSystemDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/FeatureRequestGetList", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FeatureRequestGetList(string officeData) {
            object[] results = this.Invoke("FeatureRequestGetList", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FeatureRequestGetListAsync(string officeData) {
            this.FeatureRequestGetListAsync(officeData, null);
        }
        
        /// <remarks/>
        public void FeatureRequestGetListAsync(string officeData, object userState) {
            if ((this.FeatureRequestGetListOperationCompleted == null)) {
                this.FeatureRequestGetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeatureRequestGetListOperationCompleted);
            }
            this.InvokeAsync("FeatureRequestGetList", new object[] {
                        officeData}, this.FeatureRequestGetListOperationCompleted, userState);
        }
        
        private void OnFeatureRequestGetListOperationCompleted(object arg) {
            if ((this.FeatureRequestGetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeatureRequestGetListCompleted(this, new FeatureRequestGetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/FeatureRequestGetOne", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FeatureRequestGetOne(string officeData) {
            object[] results = this.Invoke("FeatureRequestGetOne", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FeatureRequestGetOneAsync(string officeData) {
            this.FeatureRequestGetOneAsync(officeData, null);
        }
        
        /// <remarks/>
        public void FeatureRequestGetOneAsync(string officeData, object userState) {
            if ((this.FeatureRequestGetOneOperationCompleted == null)) {
                this.FeatureRequestGetOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeatureRequestGetOneOperationCompleted);
            }
            this.InvokeAsync("FeatureRequestGetOne", new object[] {
                        officeData}, this.FeatureRequestGetOneOperationCompleted, userState);
        }
        
        private void OnFeatureRequestGetOneOperationCompleted(object arg) {
            if ((this.FeatureRequestGetOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeatureRequestGetOneCompleted(this, new FeatureRequestGetOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/FeatureRequestSubmitChanges", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FeatureRequestSubmitChanges(string officeData) {
            object[] results = this.Invoke("FeatureRequestSubmitChanges", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FeatureRequestSubmitChangesAsync(string officeData) {
            this.FeatureRequestSubmitChangesAsync(officeData, null);
        }
        
        /// <remarks/>
        public void FeatureRequestSubmitChangesAsync(string officeData, object userState) {
            if ((this.FeatureRequestSubmitChangesOperationCompleted == null)) {
                this.FeatureRequestSubmitChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeatureRequestSubmitChangesOperationCompleted);
            }
            this.InvokeAsync("FeatureRequestSubmitChanges", new object[] {
                        officeData}, this.FeatureRequestSubmitChangesOperationCompleted, userState);
        }
        
        private void OnFeatureRequestSubmitChangesOperationCompleted(object arg) {
            if ((this.FeatureRequestSubmitChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeatureRequestSubmitChangesCompleted(this, new FeatureRequestSubmitChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/FeatureRequestDiscussSubmit", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FeatureRequestDiscussSubmit(string officeData) {
            object[] results = this.Invoke("FeatureRequestDiscussSubmit", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FeatureRequestDiscussSubmitAsync(string officeData) {
            this.FeatureRequestDiscussSubmitAsync(officeData, null);
        }
        
        /// <remarks/>
        public void FeatureRequestDiscussSubmitAsync(string officeData, object userState) {
            if ((this.FeatureRequestDiscussSubmitOperationCompleted == null)) {
                this.FeatureRequestDiscussSubmitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeatureRequestDiscussSubmitOperationCompleted);
            }
            this.InvokeAsync("FeatureRequestDiscussSubmit", new object[] {
                        officeData}, this.FeatureRequestDiscussSubmitOperationCompleted, userState);
        }
        
        private void OnFeatureRequestDiscussSubmitOperationCompleted(object arg) {
            if ((this.FeatureRequestDiscussSubmitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeatureRequestDiscussSubmitCompleted(this, new FeatureRequestDiscussSubmitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/FeatureRequestDiscussGetList", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FeatureRequestDiscussGetList(string officeData) {
            object[] results = this.Invoke("FeatureRequestDiscussGetList", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FeatureRequestDiscussGetListAsync(string officeData) {
            this.FeatureRequestDiscussGetListAsync(officeData, null);
        }
        
        /// <remarks/>
        public void FeatureRequestDiscussGetListAsync(string officeData, object userState) {
            if ((this.FeatureRequestDiscussGetListOperationCompleted == null)) {
                this.FeatureRequestDiscussGetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFeatureRequestDiscussGetListOperationCompleted);
            }
            this.InvokeAsync("FeatureRequestDiscussGetList", new object[] {
                        officeData}, this.FeatureRequestDiscussGetListOperationCompleted, userState);
        }
        
        private void OnFeatureRequestDiscussGetListOperationCompleted(object arg) {
            if ((this.FeatureRequestDiscussGetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FeatureRequestDiscussGetListCompleted(this, new FeatureRequestDiscussGetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestFeeSched", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestFeeSched(string officeData) {
            object[] results = this.Invoke("RequestFeeSched", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestFeeSchedAsync(string officeData) {
            this.RequestFeeSchedAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestFeeSchedAsync(string officeData, object userState) {
            if ((this.RequestFeeSchedOperationCompleted == null)) {
                this.RequestFeeSchedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestFeeSchedOperationCompleted);
            }
            this.InvokeAsync("RequestFeeSched", new object[] {
                        officeData}, this.RequestFeeSchedOperationCompleted, userState);
        }
        
        private void OnRequestFeeSchedOperationCompleted(object arg) {
            if ((this.RequestFeeSchedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestFeeSchedCompleted(this, new RequestFeeSchedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/PracticeTitleReset", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PracticeTitleReset(string officeData) {
            this.Invoke("PracticeTitleReset", new object[] {
                        officeData});
        }
        
        /// <remarks/>
        public void PracticeTitleResetAsync(string officeData) {
            this.PracticeTitleResetAsync(officeData, null);
        }
        
        /// <remarks/>
        public void PracticeTitleResetAsync(string officeData, object userState) {
            if ((this.PracticeTitleResetOperationCompleted == null)) {
                this.PracticeTitleResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPracticeTitleResetOperationCompleted);
            }
            this.InvokeAsync("PracticeTitleReset", new object[] {
                        officeData}, this.PracticeTitleResetOperationCompleted, userState);
        }
        
        private void OnPracticeTitleResetOperationCompleted(object arg) {
            if ((this.PracticeTitleResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PracticeTitleResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/GetErxAccess", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetErxAccess(string officeData) {
            object[] results = this.Invoke("GetErxAccess", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetErxAccessAsync(string officeData) {
            this.GetErxAccessAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetErxAccessAsync(string officeData, object userState) {
            if ((this.GetErxAccessOperationCompleted == null)) {
                this.GetErxAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErxAccessOperationCompleted);
            }
            this.InvokeAsync("GetErxAccess", new object[] {
                        officeData}, this.GetErxAccessOperationCompleted, userState);
        }
        
        private void OnGetErxAccessOperationCompleted(object arg) {
            if ((this.GetErxAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErxAccessCompleted(this, new GetErxAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/GetClinicErxAccess", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClinicErxAccess(string officeData) {
            object[] results = this.Invoke("GetClinicErxAccess", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicErxAccessAsync(string officeData) {
            this.GetClinicErxAccessAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetClinicErxAccessAsync(string officeData, object userState) {
            if ((this.GetClinicErxAccessOperationCompleted == null)) {
                this.GetClinicErxAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicErxAccessOperationCompleted);
            }
            this.InvokeAsync("GetClinicErxAccess", new object[] {
                        officeData}, this.GetClinicErxAccessOperationCompleted, userState);
        }
        
        private void OnGetClinicErxAccessOperationCompleted(object arg) {
            if ((this.GetClinicErxAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicErxAccessCompleted(this, new GetClinicErxAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestPatientPortalURL", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestPatientPortalURL(string officeData) {
            object[] results = this.Invoke("RequestPatientPortalURL", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestPatientPortalURLAsync(string officeData) {
            this.RequestPatientPortalURLAsync(officeData, null);
        }
        
        /// <remarks/>
        public void RequestPatientPortalURLAsync(string officeData, object userState) {
            if ((this.RequestPatientPortalURLOperationCompleted == null)) {
                this.RequestPatientPortalURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestPatientPortalURLOperationCompleted);
            }
            this.InvokeAsync("RequestPatientPortalURL", new object[] {
                        officeData}, this.RequestPatientPortalURLOperationCompleted, userState);
        }
        
        private void OnRequestPatientPortalURLOperationCompleted(object arg) {
            if ((this.RequestPatientPortalURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestPatientPortalURLCompleted(this, new RequestPatientPortalURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/ValidatePatientPortalOffice", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidatePatientPortalOffice(string officeData) {
            object[] results = this.Invoke("ValidatePatientPortalOffice", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePatientPortalOfficeAsync(string officeData) {
            this.ValidatePatientPortalOfficeAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ValidatePatientPortalOfficeAsync(string officeData, object userState) {
            if ((this.ValidatePatientPortalOfficeOperationCompleted == null)) {
                this.ValidatePatientPortalOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePatientPortalOfficeOperationCompleted);
            }
            this.InvokeAsync("ValidatePatientPortalOffice", new object[] {
                        officeData}, this.ValidatePatientPortalOfficeOperationCompleted, userState);
        }
        
        private void OnValidatePatientPortalOfficeOperationCompleted(object arg) {
            if ((this.ValidatePatientPortalOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePatientPortalOfficeCompleted(this, new ValidatePatientPortalOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/ValidateWebSched", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateWebSched(string officeData) {
            object[] results = this.Invoke("ValidateWebSched", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateWebSchedAsync(string officeData) {
            this.ValidateWebSchedAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ValidateWebSchedAsync(string officeData, object userState) {
            if ((this.ValidateWebSchedOperationCompleted == null)) {
                this.ValidateWebSchedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateWebSchedOperationCompleted);
            }
            this.InvokeAsync("ValidateWebSched", new object[] {
                        officeData}, this.ValidateWebSchedOperationCompleted, userState);
        }
        
        private void OnValidateWebSchedOperationCompleted(object arg) {
            if ((this.ValidateWebSchedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateWebSchedCompleted(this, new ValidateWebSchedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/ValidateWebSchedNewPatAppt", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateWebSchedNewPatAppt(string officeData) {
            object[] results = this.Invoke("ValidateWebSchedNewPatAppt", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateWebSchedNewPatApptAsync(string officeData) {
            this.ValidateWebSchedNewPatApptAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ValidateWebSchedNewPatApptAsync(string officeData, object userState) {
            if ((this.ValidateWebSchedNewPatApptOperationCompleted == null)) {
                this.ValidateWebSchedNewPatApptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateWebSchedNewPatApptOperationCompleted);
            }
            this.InvokeAsync("ValidateWebSchedNewPatAppt", new object[] {
                        officeData}, this.ValidateWebSchedNewPatApptOperationCompleted, userState);
        }
        
        private void OnValidateWebSchedNewPatApptOperationCompleted(object arg) {
            if ((this.ValidateWebSchedNewPatApptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateWebSchedNewPatApptCompleted(this, new ValidateWebSchedNewPatApptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/GetWebSchedURLs", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebSchedURLs(string officeData) {
            object[] results = this.Invoke("GetWebSchedURLs", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebSchedURLsAsync(string officeData) {
            this.GetWebSchedURLsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void GetWebSchedURLsAsync(string officeData, object userState) {
            if ((this.GetWebSchedURLsOperationCompleted == null)) {
                this.GetWebSchedURLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebSchedURLsOperationCompleted);
            }
            this.InvokeAsync("GetWebSchedURLs", new object[] {
                        officeData}, this.GetWebSchedURLsOperationCompleted, userState);
        }
        
        private void OnGetWebSchedURLsOperationCompleted(object arg) {
            if ((this.GetWebSchedURLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebSchedURLsCompleted(this, new GetWebSchedURLsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/ValidateResellerCredentials", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateResellerCredentials(string officeData) {
            object[] results = this.Invoke("ValidateResellerCredentials", new object[] {
                        officeData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateResellerCredentialsAsync(string officeData) {
            this.ValidateResellerCredentialsAsync(officeData, null);
        }
        
        /// <remarks/>
        public void ValidateResellerCredentialsAsync(string officeData, object userState) {
            if ((this.ValidateResellerCredentialsOperationCompleted == null)) {
                this.ValidateResellerCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResellerCredentialsOperationCompleted);
            }
            this.InvokeAsync("ValidateResellerCredentials", new object[] {
                        officeData}, this.ValidateResellerCredentialsOperationCompleted, userState);
        }
        
        private void OnValidateResellerCredentialsOperationCompleted(object arg) {
            if ((this.ValidateResellerCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateResellerCredentialsCompleted(this, new ValidateResellerCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://open-dent.com/RequestIsDevKey", RequestNamespace="http://open-dent.com/", ResponseNamespace="http://open-dent.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestIsDevKey(string regKeyString) {
            object[] results = this.Invoke("RequestIsDevKey", new object[] {
                        regKeyString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestIsDevKeyAsync(string regKeyString) {
            this.RequestIsDevKeyAsync(regKeyString, null);
        }
        
        /// <remarks/>
        public void RequestIsDevKeyAsync(string regKeyString, object userState) {
            if ((this.RequestIsDevKeyOperationCompleted == null)) {
                this.RequestIsDevKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestIsDevKeyOperationCompleted);
            }
            this.InvokeAsync("RequestIsDevKey", new object[] {
                        regKeyString}, this.RequestIsDevKeyOperationCompleted, userState);
        }
        
        private void OnRequestIsDevKeyOperationCompleted(object arg) {
            if ((this.RequestIsDevKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestIsDevKeyCompleted(this, new RequestIsDevKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EstablishConnectionCompletedEventHandler(object sender, EstablishConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestUpdateCompletedEventHandler(object sender, RequestUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCustomerIDCompletedEventHandler(object sender, RequestCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCustomerIDStrictCompletedEventHandler(object sender, RequestCustomerIDStrictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCustomerIDStrictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCustomerIDStrictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestRegKeyStatusCompletedEventHandler(object sender, RequestRegKeyStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestRegKeyStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestRegKeyStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestEmailVerificationCodeCompletedEventHandler(object sender, RequestEmailVerificationCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestEmailVerificationCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestEmailVerificationCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PostEmailCertificateCompletedEventHandler(object sender, PostEmailCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostEmailCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostEmailCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCertCanadaABCCompletedEventHandler(object sender, RequestCertCanadaABCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCertCanadaABCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCertCanadaABCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCertCanadaTelusAandBCompletedEventHandler(object sender, RequestCertCanadaTelusAandBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCertCanadaTelusAandBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCertCanadaTelusAandBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCertCanadaTelusAandBtestCompletedEventHandler(object sender, RequestCertCanadaTelusAandBtestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCertCanadaTelusAandBtestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCertCanadaTelusAandBtestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsForeignRegKeyCompletedEventHandler(object sender, IsForeignRegKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsForeignRegKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsForeignRegKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCodeSystemsCompletedEventHandler(object sender, RequestCodeSystemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCodeSystemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCodeSystemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestCodeSystemDownloadCompletedEventHandler(object sender, RequestCodeSystemDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestCodeSystemDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestCodeSystemDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FeatureRequestGetListCompletedEventHandler(object sender, FeatureRequestGetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeatureRequestGetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeatureRequestGetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FeatureRequestGetOneCompletedEventHandler(object sender, FeatureRequestGetOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeatureRequestGetOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeatureRequestGetOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FeatureRequestSubmitChangesCompletedEventHandler(object sender, FeatureRequestSubmitChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeatureRequestSubmitChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeatureRequestSubmitChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FeatureRequestDiscussSubmitCompletedEventHandler(object sender, FeatureRequestDiscussSubmitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeatureRequestDiscussSubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeatureRequestDiscussSubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FeatureRequestDiscussGetListCompletedEventHandler(object sender, FeatureRequestDiscussGetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FeatureRequestDiscussGetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FeatureRequestDiscussGetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestFeeSchedCompletedEventHandler(object sender, RequestFeeSchedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestFeeSchedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestFeeSchedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PracticeTitleResetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetErxAccessCompletedEventHandler(object sender, GetErxAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErxAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErxAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClinicErxAccessCompletedEventHandler(object sender, GetClinicErxAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicErxAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicErxAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestPatientPortalURLCompletedEventHandler(object sender, RequestPatientPortalURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestPatientPortalURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestPatientPortalURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidatePatientPortalOfficeCompletedEventHandler(object sender, ValidatePatientPortalOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePatientPortalOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePatientPortalOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateWebSchedCompletedEventHandler(object sender, ValidateWebSchedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateWebSchedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateWebSchedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateWebSchedNewPatApptCompletedEventHandler(object sender, ValidateWebSchedNewPatApptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateWebSchedNewPatApptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateWebSchedNewPatApptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWebSchedURLsCompletedEventHandler(object sender, GetWebSchedURLsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebSchedURLsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebSchedURLsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateResellerCredentialsCompletedEventHandler(object sender, ValidateResellerCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateResellerCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateResellerCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestIsDevKeyCompletedEventHandler(object sender, RequestIsDevKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestIsDevKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestIsDevKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591